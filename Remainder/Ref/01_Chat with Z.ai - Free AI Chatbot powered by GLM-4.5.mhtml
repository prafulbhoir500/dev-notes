From: <Saved by Blink>
Snapshot-Content-Location: https://chat.z.ai/c/f65287a3-49bc-44a8-8e51-2574f2f109a3
Subject: Chat with Z.ai - Free AI Chatbot powered by GLM-4.5
Date: Sat, 6 Sep 2025 08:53:11 +0530
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--xhwtFZq0UDxOmF7548m6subkWxGIdLYuwRmj2FBwDc----"


------MultipartBoundary--xhwtFZq0UDxOmF7548m6subkWxGIdLYuwRmj2FBwDc----
Content-Type: text/html
Content-ID: <frame-7ABDE70F7AF764387124B37395A04223@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://chat.z.ai/c/f65287a3-49bc-44a8-8e51-2574f2f109a3

<!DOCTYPE html><html lang=3D"en-US" class=3D"dark"><head><meta http-equiv=
=3D"Content-Type" content=3D"text/html; charset=3DUTF-8"><link rel=3D"style=
sheet" type=3D"text/css" href=3D"cid:css-a28b0d77-a2b0-4032-b78a-caf2508960=
6a@mhtml.blink" /><link rel=3D"stylesheet" type=3D"text/css" href=3D"cid:cs=
s-6dbd87b4-74c8-465c-9570-618b3fd7f8a4@mhtml.blink" />
	=09
		<link rel=3D"icon" type=3D"image/png" sizes=3D"512x512" href=3D"https://z=
-cdn.chatglm.cn/z-ai/static/logo.svg">
		<link rel=3D"shortcut icon" href=3D"https://z-cdn.chatglm.cn/z-ai/static/=
logo.svg">
		<link rel=3D"apple-touch-icon" sizes=3D"512x512" href=3D"https://chat.z.a=
i/Chat%20with%20Z.ai%20-%20Free%20AI%20Chatbot%20powered%20by%20GLM-4.5">
		<meta name=3D"apple-mobile-web-app-title" content=3D"Chat with Z.ai - Fre=
e AI Chatbot powered by GLM-4.5">
		<meta name=3D"description" content=3D"Start a free chat with your AI expe=
rt for code and smart tools. Tell Z.ai what you need=E2=80=94a complete ful=
l-stack application, a stunning presentation, or professional-grade writing=
=E2=80=94and get instant results.">
		<meta name=3D"keywords" content=3D"AI chat, chatbot, z.ai chat, free ai c=
hat, free ai chat no login, GLM-4.5, GLM-4.5 chat, GLM-4.1V, GLM-4.5V, AI a=
ssistant chat, AI PPT, AI presentation maker, AI slide maker, slide deck, p=
itch deck, AI deck generator, free pitch deck generator, AI writer, AI writ=
ing assistant, AI code generator, full stack code generation, AI full stack=
 developer, claudecode, code writer ai, magic design, magic design tool, AI=
 inspiration board, visual brainstorming AI, chat with AI, AI=E5=AF=B9=E8=
=AF=9D, AI=E8=81=8A=E5=A4=A9, =E8=81=8A=E5=A4=A9=E6=9C=BA=E5=99=A8=E4=BA=BA=
, =E5=85=8D=E8=B4=B9AI=E8=81=8A=E5=A4=A9, AI=E5=81=9APPT, AI=E8=9E=8D=E8=B5=
=84PPT, AI=E5=86=99=E8=9E=8D=E8=B5=84=E6=96=B9=E6=A1=88, AI=E5=86=99=E4=BD=
=9C, AI=E5=86=99=E4=BB=A3=E7=A0=81, =E5=85=A8=E6=A0=88=E5=BC=80=E5=8F=91, =
=E7=81=B5=E6=84=9F=E7=94=BB=E6=9D=BF, z.ai, zai, free AI, AI tool, AI helpe=
r, AI for students, AI for marketers, AI for content creation, ChatGPT, cha=
t gpt free, gpt chat, Claude chat, Poe AI, YouChat, Jasper AI, deepseek, qw=
en, =E8=B1=86=E5=8C=85, =E6=96=87=E5=BF=83=E4=B8=80=E8=A8=80, AI=E6=90=9C=
=E9=97=AE=E7=AD=94, =E5=86=99=E4=BD=9C=E7=81=B5=E6=84=9FAI, =E4=BB=A3=E7=A0=
=81=E8=A7=A3=E9=87=8A=E5=B7=A5=E5=85=B7, PPT=E6=80=9D=E8=B7=AF=E7=94=9F=E6=
=88=90, =E5=A6=82=E4=BD=95=E7=94=A8AI=E5=81=9APPT, =E5=93=AA=E4=B8=AAAI=E5=
=86=99=E4=BD=9C=E5=B7=A5=E5=85=B7=E5=85=8D=E8=B4=B9, AI=E5=8F=AF=E4=BB=A5=
=E5=86=99=E4=BB=A3=E7=A0=81=E5=90=97, create pitch deck from brief, AI busi=
ness plan presentation, marketing report slides, AI academic paper assistan=
t, AI legal contract drafting, write social media calendar, AI email respon=
der, debug javascript with AI, refactor python code, generate SQL query fro=
m text, build landing page with AI, mood board creator AI, AI storyboard ge=
nerator, visual brainstorming tool, mind map AI, how to fix writer's block,=
 my code has a bug help, presentation ideas for marketing, I need a busines=
s idea, stuck on coding problem, AI for Google Slides, AI for PowerPoint, V=
S Code AI assistant, AI for Notion, AI for Figma, =E6=A0=B9=E6=8D=AE=E4=BC=
=9A=E8=AE=AE=E7=BA=AA=E8=A6=81=E7=94=9F=E6=88=90PPT, AI=E5=86=99=E8=AE=BA=
=E6=96=87=E5=88=9D=E7=A8=BF, AI=E5=86=99=E5=90=88=E5=90=8C=E8=8D=89=E7=A8=
=BF, AI=E7=94=9F=E6=88=90=E7=A4=BE=E4=BA=A4=E5=AA=92=E4=BD=93=E6=96=87=E6=
=A1=88, AI=E5=89=8D=E7=AB=AF=E4=BB=A3=E7=A0=81=E7=94=9F=E6=88=90, AI=E9=87=
=8D=E6=9E=84=E4=BB=A3=E7=A0=81, AI=E7=94=9F=E6=88=90=E6=95=85=E4=BA=8B=E6=
=9D=BF, AI=E6=80=9D=E7=BB=B4=E5=AF=BC=E5=9B=BE, =E6=88=91=E6=B2=A1=E6=9C=89=
=E5=86=99=E4=BD=9C=E7=81=B5=E6=84=9F=E6=80=8E=E4=B9=88=E5=8A=9E, =E4=BB=A3=
=E7=A0=81bug=E5=9C=A8=E7=BA=BF=E8=A7=A3=E5=86=B3, Figma=E6=8F=92=E4=BB=B6AI=
, AI math problem solver from image, AI geoguessr solver, image to code gen=
erator, table extractor from image, chart data extractor, document analysis=
 AI, image caption generator, visual Q&amp;A, aI VLM chat, aI vision chat, =
=E7=9C=8B=E5=9B=BE=E7=8C=9C=E6=88=90=E8=AF=AD, AI=E6=8B=8D=E7=85=A7=E8=A7=
=A3=E9=A2=98, =E6=95=B0=E5=AD=A6=E9=A2=98=E8=A7=A3=E7=AD=94, =E7=89=A9=E7=
=90=86=E9=A2=98=E8=A7=A3=E7=AD=94, GeoGuess AI, =E5=9B=BE=E7=89=87=E8=BD=AC=
=E8=A1=A8=E6=A0=BC, =E5=9B=BE=E7=89=87=E8=AF=BB=E6=95=B0=E6=8D=AE, =E7=9C=
=8B=E5=9B=BE=E9=97=AE=E7=AD=94, VLM=E8=81=8A=E5=A4=A9,analyze video, summar=
ize video content, generate video transcript, find object in image, what is=
 in this picture, =E8=A7=86=E9=A2=91=E5=88=86=E6=9E=90, =E8=A7=86=E9=A2=91=
=E5=86=85=E5=AE=B9=E6=91=98=E8=A6=81, =E7=94=9F=E6=88=90=E8=A7=86=E9=A2=91=
=E5=AD=97=E5=B9=95, =E5=9B=BE=E7=89=87=E9=87=8C=E6=9C=89=E4=BB=80=E4=B9=88,=
 =E8=AF=86=E5=88=AB=E5=9B=BE=E4=B8=AD=E7=89=A9=E4=BD=93">
	=09
		<link rel=3D"manifest" href=3D"https://z-cdn.chatglm.cn/z-ai/frontend/sta=
tic/manifest.json">
		<meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=3D=
1, maximum-scale=3D1, viewport-fit=3Dcover">
		<meta name=3D"theme-color" content=3D"#141618">
		<link rel=3D"search" type=3D"application/opensearchdescription+xml" title=
=3D"Chat with Z.ai - Free AI Chatbot powered by GLM-4.5" href=3D"https://z-=
cdn.chatglm.cn/z-ai/frontend/static/opensearch.xml">
	=09
	=09


	=09

	=09

	=09

		<title>
		Chat with Z.ai - Free AI Chatbot powered by GLM-4.5
	</title>

	=09

	=09
		<link rel=3D"modulepreload" href=3D"https://z-cdn.chatglm.cn/z-ai/fronten=
d/prod-fe-1.0.78/_app/immutable/entry/start.GaK5vonP.js">
		<link rel=3D"modulepreload" href=3D"https://z-cdn.chatglm.cn/z-ai/fronten=
d/prod-fe-1.0.78/_app/immutable/chunks/BCSxAz4G.js">
		<link rel=3D"modulepreload" href=3D"https://z-cdn.chatglm.cn/z-ai/fronten=
d/prod-fe-1.0.78/_app/immutable/chunks/DAIILCid.js">
		<link rel=3D"modulepreload" href=3D"https://z-cdn.chatglm.cn/z-ai/fronten=
d/prod-fe-1.0.78/_app/immutable/chunks/CGPzV_o4.js">
		<link rel=3D"modulepreload" href=3D"https://z-cdn.chatglm.cn/z-ai/fronten=
d/prod-fe-1.0.78/_app/immutable/entry/app.DR2L2su6.js">
		<link rel=3D"modulepreload" href=3D"https://z-cdn.chatglm.cn/z-ai/fronten=
d/prod-fe-1.0.78/_app/immutable/chunks/C1FmrZbK.js">
		<link rel=3D"modulepreload" href=3D"https://z-cdn.chatglm.cn/z-ai/fronten=
d/prod-fe-1.0.78/_app/immutable/chunks/B-7MLv3j.js">
	<link rel=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"https:/=
/z-cdn.chatglm.cn/z-ai/frontend/prod-fe-1.0.78/_app/immutable/nodes/0.RSPWH=
1qF.js"><link rel=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"=
https://z-cdn.chatglm.cn/z-ai/frontend/prod-fe-1.0.78/_app/immutable/chunks=
/D0QH3NT1.js"><link rel=3D"modulepreload" as=3D"script" crossorigin=3D"" hr=
ef=3D"https://z-cdn.chatglm.cn/z-ai/frontend/prod-fe-1.0.78/_app/immutable/=
chunks/JEbkAcKt.js"><link rel=3D"modulepreload" as=3D"script" crossorigin=
=3D"" href=3D"https://z-cdn.chatglm.cn/z-ai/frontend/prod-fe-1.0.78/_app/im=
mutable/chunks/CQvYLrR4.js"><link rel=3D"modulepreload" as=3D"script" cross=
origin=3D"" href=3D"https://z-cdn.chatglm.cn/z-ai/frontend/prod-fe-1.0.78/_=
app/immutable/chunks/CLe2puWQ.js"><link rel=3D"modulepreload" as=3D"script"=
 crossorigin=3D"" href=3D"https://z-cdn.chatglm.cn/z-ai/frontend/prod-fe-1.=
0.78/_app/immutable/chunks/DbE9OC4l.js"><link rel=3D"modulepreload" as=3D"s=
cript" crossorigin=3D"" href=3D"https://z-cdn.chatglm.cn/z-ai/frontend/prod=
-fe-1.0.78/_app/immutable/chunks/CgU5AtxT.js"><link rel=3D"modulepreload" a=
s=3D"script" crossorigin=3D"" href=3D"https://z-cdn.chatglm.cn/z-ai/fronten=
d/prod-fe-1.0.78/_app/immutable/chunks/BuBHUcAd.js"><link rel=3D"stylesheet=
" crossorigin=3D"" href=3D"https://z-cdn.chatglm.cn/z-ai/frontend/prod-fe-1=
.0.78/_app/immutable/assets/Toaster.uaUbY3tS.css"><link rel=3D"modulepreloa=
d" as=3D"script" crossorigin=3D"" href=3D"https://z-cdn.chatglm.cn/z-ai/fro=
ntend/prod-fe-1.0.78/_app/immutable/chunks/C2-qlNDt.js"><link rel=3D"module=
preload" as=3D"script" crossorigin=3D"" href=3D"https://z-cdn.chatglm.cn/z-=
ai/frontend/prod-fe-1.0.78/_app/immutable/chunks/BLdZsJYb.js"><link rel=3D"=
modulepreload" as=3D"script" crossorigin=3D"" href=3D"https://z-cdn.chatglm=
.cn/z-ai/frontend/prod-fe-1.0.78/_app/immutable/chunks/CLTTNdB5.js"><link r=
el=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"https://z-cdn.c=
hatglm.cn/z-ai/frontend/prod-fe-1.0.78/_app/immutable/chunks/BujZ2vPx.js"><=
link rel=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"https://z=
-cdn.chatglm.cn/z-ai/frontend/prod-fe-1.0.78/_app/immutable/chunks/D7R2ZVNR=
.js"><link rel=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"htt=
ps://z-cdn.chatglm.cn/z-ai/frontend/prod-fe-1.0.78/_app/immutable/chunks/B0=
_7YO_C.js"><link rel=3D"stylesheet" crossorigin=3D"" href=3D"https://z-cdn.=
chatglm.cn/z-ai/frontend/prod-fe-1.0.78/_app/immutable/assets/0.CT_5QzTf.cs=
s"><link rel=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"https=
://z-cdn.chatglm.cn/z-ai/frontend/prod-fe-1.0.78/_app/immutable/nodes/1.Bzn=
CZnEK.js"><link rel=3D"modulepreload" as=3D"script" crossorigin=3D"" href=
=3D"https://z-cdn.chatglm.cn/z-ai/frontend/prod-fe-1.0.78/_app/immutable/no=
des/2.Cdhcu8DM.js"><link rel=3D"modulepreload" as=3D"script" crossorigin=3D=
"" href=3D"https://z-cdn.chatglm.cn/z-ai/frontend/prod-fe-1.0.78/_app/immut=
able/chunks/CDyKJgwD.js"><link rel=3D"modulepreload" as=3D"script" crossori=
gin=3D"" href=3D"https://z-cdn.chatglm.cn/z-ai/frontend/prod-fe-1.0.78/_app=
/immutable/chunks/ZHJel_Xa.js"><link rel=3D"modulepreload" as=3D"script" cr=
ossorigin=3D"" href=3D"https://z-cdn.chatglm.cn/z-ai/frontend/prod-fe-1.0.7=
8/_app/immutable/chunks/Cfe72dIq.js"><link rel=3D"modulepreload" as=3D"scri=
pt" crossorigin=3D"" href=3D"https://z-cdn.chatglm.cn/z-ai/frontend/prod-fe=
-1.0.78/_app/immutable/chunks/DSjLLB18.js"><link rel=3D"modulepreload" as=
=3D"script" crossorigin=3D"" href=3D"https://z-cdn.chatglm.cn/z-ai/frontend=
/prod-fe-1.0.78/_app/immutable/chunks/GYICErl2.js"><link rel=3D"moduleprelo=
ad" as=3D"script" crossorigin=3D"" href=3D"https://z-cdn.chatglm.cn/z-ai/fr=
ontend/prod-fe-1.0.78/_app/immutable/chunks/ByXJywKu.js"><link rel=3D"modul=
epreload" as=3D"script" crossorigin=3D"" href=3D"https://z-cdn.chatglm.cn/z=
-ai/frontend/prod-fe-1.0.78/_app/immutable/chunks/1s1vkbgT.js"><link rel=3D=
"stylesheet" crossorigin=3D"" href=3D"https://z-cdn.chatglm.cn/z-ai/fronten=
d/prod-fe-1.0.78/_app/immutable/assets/ConfirmDialog.kaSBQ3kP.css"><link re=
l=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"https://z-cdn.ch=
atglm.cn/z-ai/frontend/prod-fe-1.0.78/_app/immutable/chunks/iqxp2IRY.js"><l=
ink rel=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"https://z-=
cdn.chatglm.cn/z-ai/frontend/prod-fe-1.0.78/_app/immutable/chunks/DMXLx9K2.=
js"><link rel=3D"stylesheet" crossorigin=3D"" href=3D"https://z-cdn.chatglm=
.cn/z-ai/frontend/prod-fe-1.0.78/_app/immutable/assets/Switch.CyLKLEmt.css"=
><link rel=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"https:/=
/z-cdn.chatglm.cn/z-ai/frontend/prod-fe-1.0.78/_app/immutable/chunks/DM1Zfa=
k-.js"><link rel=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"h=
ttps://z-cdn.chatglm.cn/z-ai/frontend/prod-fe-1.0.78/_app/immutable/chunks/=
Bx9-EOeS.js"><link rel=3D"modulepreload" as=3D"script" crossorigin=3D"" hre=
f=3D"https://z-cdn.chatglm.cn/z-ai/frontend/prod-fe-1.0.78/_app/immutable/c=
hunks/DxKKQENI.js"><link rel=3D"modulepreload" as=3D"script" crossorigin=3D=
"" href=3D"https://z-cdn.chatglm.cn/z-ai/frontend/prod-fe-1.0.78/_app/immut=
able/chunks/Bh5H_zTE.js"><link rel=3D"modulepreload" as=3D"script" crossori=
gin=3D"" href=3D"https://z-cdn.chatglm.cn/z-ai/frontend/prod-fe-1.0.78/_app=
/immutable/chunks/Cw5wyeK8.js"><link rel=3D"modulepreload" as=3D"script" cr=
ossorigin=3D"" href=3D"https://z-cdn.chatglm.cn/z-ai/frontend/prod-fe-1.0.7=
8/_app/immutable/chunks/BR39_kpx.js"><link rel=3D"modulepreload" as=3D"scri=
pt" crossorigin=3D"" href=3D"https://z-cdn.chatglm.cn/z-ai/frontend/prod-fe=
-1.0.78/_app/immutable/chunks/DfB1qLur.js"><link rel=3D"modulepreload" as=
=3D"script" crossorigin=3D"" href=3D"https://z-cdn.chatglm.cn/z-ai/frontend=
/prod-fe-1.0.78/_app/immutable/chunks/BPA-8HOe.js"><link rel=3D"moduleprelo=
ad" as=3D"script" crossorigin=3D"" href=3D"https://z-cdn.chatglm.cn/z-ai/fr=
ontend/prod-fe-1.0.78/_app/immutable/chunks/CjgQ7qC8.js"><link rel=3D"modul=
epreload" as=3D"script" crossorigin=3D"" href=3D"https://z-cdn.chatglm.cn/z=
-ai/frontend/prod-fe-1.0.78/_app/immutable/chunks/DdkO-X8R.js"><link rel=3D=
"modulepreload" as=3D"script" crossorigin=3D"" href=3D"https://z-cdn.chatgl=
m.cn/z-ai/frontend/prod-fe-1.0.78/_app/immutable/chunks/2nCWe8sq.js"><link =
rel=3D"stylesheet" crossorigin=3D"" href=3D"https://z-cdn.chatglm.cn/z-ai/f=
rontend/prod-fe-1.0.78/_app/immutable/assets/ComboBox.DbY80u99.css"><link r=
el=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"https://z-cdn.c=
hatglm.cn/z-ai/frontend/prod-fe-1.0.78/_app/immutable/chunks/Dw3NuXMH.js"><=
link rel=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"https://z=
-cdn.chatglm.cn/z-ai/frontend/prod-fe-1.0.78/_app/immutable/chunks/BnVpo3pV=
.js"><link rel=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"htt=
ps://z-cdn.chatglm.cn/z-ai/frontend/prod-fe-1.0.78/_app/immutable/chunks/Hc=
nM04us.js"><link rel=3D"modulepreload" as=3D"script" crossorigin=3D"" href=
=3D"https://z-cdn.chatglm.cn/z-ai/frontend/prod-fe-1.0.78/_app/immutable/ch=
unks/TLfkRcsb.js"><link rel=3D"modulepreload" as=3D"script" crossorigin=3D"=
" href=3D"https://z-cdn.chatglm.cn/z-ai/frontend/prod-fe-1.0.78/_app/immuta=
ble/chunks/CVXZDK41.js"><link rel=3D"modulepreload" as=3D"script" crossorig=
in=3D"" href=3D"https://z-cdn.chatglm.cn/z-ai/frontend/prod-fe-1.0.78/_app/=
immutable/chunks/BrUoVX6_.js"><link rel=3D"modulepreload" as=3D"script" cro=
ssorigin=3D"" href=3D"https://z-cdn.chatglm.cn/z-ai/frontend/prod-fe-1.0.78=
/_app/immutable/chunks/CGcGK_HN.js"><link rel=3D"modulepreload" as=3D"scrip=
t" crossorigin=3D"" href=3D"https://z-cdn.chatglm.cn/z-ai/frontend/prod-fe-=
1.0.78/_app/immutable/chunks/DNSsTXSv.js"><link rel=3D"modulepreload" as=3D=
"script" crossorigin=3D"" href=3D"https://z-cdn.chatglm.cn/z-ai/frontend/pr=
od-fe-1.0.78/_app/immutable/chunks/ClOPfbbs.js"><link rel=3D"modulepreload"=
 as=3D"script" crossorigin=3D"" href=3D"https://z-cdn.chatglm.cn/z-ai/front=
end/prod-fe-1.0.78/_app/immutable/chunks/AYxiwM3z.js"><link rel=3D"modulepr=
eload" as=3D"script" crossorigin=3D"" href=3D"https://z-cdn.chatglm.cn/z-ai=
/frontend/prod-fe-1.0.78/_app/immutable/chunks/C4YCvUvM.js"><link rel=3D"mo=
dulepreload" as=3D"script" crossorigin=3D"" href=3D"https://z-cdn.chatglm.c=
n/z-ai/frontend/prod-fe-1.0.78/_app/immutable/chunks/CqRXf_MX.js"><link rel=
=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"https://z-cdn.cha=
tglm.cn/z-ai/frontend/prod-fe-1.0.78/_app/immutable/chunks/CogsTf1m.js"><li=
nk rel=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"https://z-c=
dn.chatglm.cn/z-ai/frontend/prod-fe-1.0.78/_app/immutable/chunks/DqWBpG5N.j=
s"><link rel=3D"stylesheet" crossorigin=3D"" href=3D"https://z-cdn.chatglm.=
cn/z-ai/frontend/prod-fe-1.0.78/_app/immutable/assets/2.BhAyWm1G.css"><link=
 rel=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"https://z-cdn=
.chatglm.cn/z-ai/frontend/prod-fe-1.0.78/_app/immutable/nodes/5.DW0iIKs_.js=
"><link rel=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"https:=
//z-cdn.chatglm.cn/z-ai/frontend/prod-fe-1.0.78/_app/immutable/chunks/CNWOA=
aja.js"><link rel=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"=
https://z-cdn.chatglm.cn/z-ai/frontend/prod-fe-1.0.78/_app/immutable/chunks=
/DhayTbIH.js"><link rel=3D"modulepreload" as=3D"script" crossorigin=3D"" hr=
ef=3D"https://z-cdn.chatglm.cn/z-ai/frontend/prod-fe-1.0.78/_app/immutable/=
chunks/XRGcdJvt.js"><link rel=3D"modulepreload" as=3D"script" crossorigin=
=3D"" href=3D"https://z-cdn.chatglm.cn/z-ai/frontend/prod-fe-1.0.78/_app/im=
mutable/chunks/DEXm1EED.js"><link rel=3D"modulepreload" as=3D"script" cross=
origin=3D"" href=3D"https://z-cdn.chatglm.cn/z-ai/frontend/prod-fe-1.0.78/_=
app/immutable/chunks/CbxsSsYQ.js"><link rel=3D"stylesheet" crossorigin=3D""=
 href=3D"https://z-cdn.chatglm.cn/z-ai/frontend/prod-fe-1.0.78/_app/immutab=
le/assets/DeployProjectButton.z_X1yUjy.css"><link rel=3D"modulepreload" as=
=3D"script" crossorigin=3D"" href=3D"https://z-cdn.chatglm.cn/z-ai/frontend=
/prod-fe-1.0.78/_app/immutable/chunks/c6QgivE3.js"><link rel=3D"stylesheet"=
 crossorigin=3D"" href=3D"https://z-cdn.chatglm.cn/z-ai/frontend/prod-fe-1.=
0.78/_app/immutable/assets/WorkSpace.C7KvruIJ.css"><link rel=3D"moduleprelo=
ad" as=3D"script" crossorigin=3D"" href=3D"https://z-cdn.chatglm.cn/z-ai/fr=
ontend/prod-fe-1.0.78/_app/immutable/chunks/CVPq_V6M.js"><link rel=3D"modul=
epreload" as=3D"script" crossorigin=3D"" href=3D"https://z-cdn.chatglm.cn/z=
-ai/frontend/prod-fe-1.0.78/_app/immutable/chunks/Cn5izrzb.js"><link rel=3D=
"modulepreload" as=3D"script" crossorigin=3D"" href=3D"https://z-cdn.chatgl=
m.cn/z-ai/frontend/prod-fe-1.0.78/_app/immutable/chunks/UTSX4MVc.js"><link =
rel=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"https://z-cdn.=
chatglm.cn/z-ai/frontend/prod-fe-1.0.78/_app/immutable/chunks/Donq5TIz.js">=
<link rel=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"https://=
z-cdn.chatglm.cn/z-ai/frontend/prod-fe-1.0.78/_app/immutable/chunks/DKlPev5=
x.js"><link rel=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"ht=
tps://z-cdn.chatglm.cn/z-ai/frontend/prod-fe-1.0.78/_app/immutable/chunks/4=
l1huPVm.js"><link rel=3D"stylesheet" crossorigin=3D"" href=3D"https://z-cdn=
.chatglm.cn/z-ai/frontend/prod-fe-1.0.78/_app/immutable/assets/Chat.D7YoCgT=
c.css"><link rel=3D"modulepreload" as=3D"script" crossorigin=3D"" href=3D"h=
ttps://z-cdn.chatglm.cn/z-ai/frontend/prod-fe-1.0.78/_app/immutable/chunks/=
CqE0fFMX.js"><link rel=3D"modulepreload" as=3D"script" crossorigin=3D"" hre=
f=3D"https://z-cdn.chatglm.cn/z-ai/frontend/prod-fe-1.0.78/_app/immutable/c=
hunks/Cj5hCoay.js"><link rel=3D"modulepreload" as=3D"script" crossorigin=3D=
"" href=3D"https://z-cdn.chatglm.cn/z-ai/frontend/prod-fe-1.0.78/_app/immut=
able/chunks/_uMM-RZm.js"></head>

	<body data-sveltekit-preload-data=3D"hover">
			=09
		<div style=3D"display: contents">
		=09
		      <div class=3D"relative app"><div class=3D"text-gray-700 dark:text-w=
hite/80 bg-[#F4F6F8] dark:bg-[#141618] h-screen max-h-[100dvh] overflow-aut=
o flex flex-row justify-end">   <audio id=3D"audioElement" style=3D"display=
: none;"></audio>  <div class=3D"h-screen max-h-[100dvh] transition-width d=
uration-200 ease-in-out   w-full max-w-full flex flex-col" id=3D"chat-conta=
iner"> <div id=3D"8QDIwLrhAa" data-pane-group=3D"" data-direction=3D"horizo=
ntal" data-pane-group-id=3D"8QDIwLrhAa" class=3D"w-full h-full" style=3D"di=
splay: flex; flex-direction: row; height: 100%; overflow: hidden; width: 10=
0%;"><div data-pane=3D"" data-pane-id=3D"iqiLQJRn-3" data-pane-group-id=3D"=
8QDIwLrhAa" class=3D"flex relative w-full h-full" style=3D"flex: 100 1 0px;=
 overflow: hidden;"> <div class=3D"flex flex-col flex-auto z-10 w-full @con=
tainer">   <nav class=3D"sticky top-0 z-30 w-full px-5 py-3.5 -mb-8 flex it=
ems-center drag-region"><div class=3D"bg-linear-to-b via-50% from-[#F4F6F8]=
 via-[#F4F6F8] to-transparent dark:from-[#141618] dark:via-[#141618] dark:t=
o-transparent pointer-events-none absolute inset-0 -bottom-7 z-[-1]"></div>=
 <div class=3D"flex px-1 pt-0.5 mx-auto w-full max-w-full bg-transparent"><=
div class=3D"flex gap-2 justify-between items-center w-full max-w-full"><di=
v class=3D"flex gap-1"> <div aria-label=3D"Chat History" class=3D"flex"><di=
v class=3D" self-start flex flex-none p-1 items-center rounded-xl text-gray=
-600 dark:text-gray-400 hover:bg-gray-200 dark:hover:bg-gray-850 transition=
"><button id=3D"sidebar-toggle-button" class=3D"flex cursor-pointer" aria-l=
abel=3D"Toggle Sidebar"><div class=3D"self-center"><svg class=3D" size-6 te=
xt-black dark:text-white" viewBox=3D"0 0 1024 1024" version=3D"1.1" xmlns=
=3D"http://www.w3.org/2000/svg" width=3D"32" height=3D"32" stroke-width=3D"=
1.5"><path d=3D"M938.666667 512a384 384 0 0 1-384 384 379.306667 379.306667=
 0 0 1-220.16-69.546667 21.76 21.76 0 0 1-8.96-15.786666 21.333333 21.33333=
3 0 0 1 5.973333-16.64l30.72-31.146667a21.333333 21.333333 0 0 1 26.88-2.56=
A294.826667 294.826667 0 0 0 554.666667 810.666667a298.666667 298.666667 0 =
1 0-298.666667-298.666667h100.693333a20.906667 20.906667 0 0 1 15.36 6.4l8.=
533334 8.533333a21.333333 21.333333 0 0 1 0 30.293334L229.973333 708.266667=
a21.76 21.76 0 0 1-30.293333 0l-150.613333-151.04a21.333333 21.333333 0 0 1=
 0-30.293334l8.533333-8.533333a20.906667 20.906667 0 0 1 15.36-6.4H170.6666=
67a384 384 0 0 1 768 0z m-367.786667-213.333333h-32.426667a21.333333 21.333=
333 0 0 0-21.333333 21.333333v198.826667a22.613333 22.613333 0 0 0 6.4 14.9=
33333l140.373333 140.373333a21.333333 21.333333 0 0 0 30.293334 0l22.613333=
-22.613333a21.333333 21.333333 0 0 0 0-30.293333l-124.586667-124.586667V320=
a21.333333 21.333333 0 0 0-21.333333-21.333333z" fill=3D"currentColor"></pa=
th></svg></div></button></div></div> <div aria-label=3D"New Chat" class=3D"=
flex"><button id=3D"new-chat-button" class=3D"navNewChat flex  cursor-point=
er rounded-xl p-1 text-gray-600 dark:text-gray-400 hover:bg-gray-200 dark:h=
over:bg-gray-850 transition" aria-label=3D"New Chat"><div class=3D"self-cen=
ter m-auto"><svg class=3D" text-black dark:text-white size-6" width=3D"24" =
height=3D"24" viewBox=3D"0 0 24 24" fill=3D"none" xmlns=3D"http://www.w3.or=
g/2000/svg" stroke-width=3D"2" stroke=3D"currentColor"><g opacity=3D"0.8"><=
path d=3D"M21 13V17C21 19.2091 19.2091 21 17 21H7C4.79086 21 3 19.2132 3 17=
.0041C3 14.0012 3 9.96446 3 6.99654C3 4.7874 4.79083 3 6.99997 3C9.00004 3 =
11 3 11 3" stroke=3D"currentColor" stroke-linecap=3D"round" stroke-linejoin=
=3D"round"></path><path d=3D"M8.58494 12.0343C8.21038 12.4093 8 12.9177 8 1=
3.4477V16H10.5686C11.0992 16 11.608 15.7892 11.9831 15.4139L19.5867 7.80695=
C20.3674 7.02597 20.3674 5.76012 19.5867 4.97914L19.0235 4.41568C18.2422 3.=
63401 16.9749 3.63425 16.1939 4.41622L8.58494 12.0343Z" stroke=3D"currentCo=
lor" stroke-linejoin=3D"round"></path></g></svg></div></button></div></div>=
 <div class=3D"flex-1 overflow-hidden max-w-full py-0.5 "><div class=3D"fle=
x flex-col items-start w-full"><div class=3D"flex justify-between items-cen=
ter w-full"><div class=3D"overflow-hidden flex"><div class=3D"mr-1"><button=
 aria-controls=3D"wRdeW_bNfw" aria-expanded=3D"false" data-state=3D"closed"=
 id=3D"model-selector-0727-360B-API-button" tabindex=3D"0" data-melt-dropdo=
wn-menu-trigger=3D"" data-menu-trigger=3D"" type=3D"button" class=3D"modelS=
electorButton relative w-full font-primary cursor-default" aria-label=3D"Se=
lect a model" disabled=3D""><div class=3D"flex w-full text-left px-0.5 outl=
ine-hidden bg-transparent truncate  text-black dark:text-white text-lg just=
ify-between font-medium placeholder-gray-400 focus:outline-hidden">GLM-4.5 =
</div></button> </div> <button role=3D"button" aria-haspopup=3D"dialog" ari=
a-expanded=3D"true" data-state=3D"open" id=3D"8u1QCaue5Q" data-melt-popover=
-trigger=3D"" data-popover-trigger=3D"" type=3D"button" class=3D"modelRecom=
mendAnchor"></button> </div> </div></div></div> <div class=3D"flex flex-non=
e gap-2 items-center self-start text-black dark:text-white"><button class=
=3D"flex gap-2 items-center px-2 py-1 rounded-lg transition hover:bg-gray-1=
00 dark:hover:bg-gray-850 disabled:cursor-not-allowed disabled:opacity-50">=
<svg class=3D"size-4" stroke=3D"currentColor" stroke-width=3D"1.5" width=3D=
"16" height=3D"16" viewBox=3D"0 0 16 16" fill=3D"none" xmlns=3D"http://www.=
w3.org/2000/svg"><g id=3D"=C3=A5=CB=86=E2=80=A0=C3=A4=C2=BA=C2=AB2_share-tw=
o 1" opacity=3D"0.8"><path id=3D"Vector" d=3D"M8.66667 2.40397C8.66667 1.79=
298 9.42013 1.50385 9.82886 1.958L13.843 6.41819C14.3081 6.93497 14.2981 7.=
7224 13.8199 8.22713L9.8173 12.4521C9.40282 12.8896 8.66667 12.5963 8.66667=
 11.9936V9.33333C4 9.33333 2 14.3333 2 14.3333C2 8.66667 3.66667 5 8.66667 =
5V2.40397Z" stroke-linecap=3D"round" stroke-linejoin=3D"round"></path></g><=
/svg> <span class=3D"font-medium">Share Session</span></button>  <div class=
=3D"flex gap-2"><button class=3D"flex h-8 flex-col items-center justify-cen=
ter rounded-xl dark:bg-[#484A58] dark:hover:bg-[#5A5C68] button-gradient px=
-4 py-3 text-sm font-medium text-white hover:opacity-90 md:h-10">Sign in</b=
utton></div></div></div></div></nav> <div class=3D"flex overflow-auto z-10 =
flex-col flex-auto justify-between pb-2.5 w-full max-w-full h-0 scrollbar-h=
idden" id=3D"messages-container"><div class=3D"flex flex-col w-full h-full"=
><div class=3D"h-full flex pt-8"><div class=3D"pt-2 w-full"><div class=3D"w=
-full"> <div class=3D"flex flex-col justify-between px-5 mb-3 w-full max-w-=
[1000px] mx-auto rounded-lg group"> <div class=3D"flex w-full user-message"=
 id=3D"message-74ae5304-6d1a-44dc-9236-a2e858779e53"> <div class=3D"flex-au=
to w-0 max-w-full"> <div class=3D"chat-user w-full min-w-full markdown-pros=
e"> <div class=3D"relative w-full"> <div class=3D"flex justify-end pb-1"><d=
iv class=3D"rounded-xl max-w-[90%] px-3 py-2.25  bg-white dark:bg-[#26282A]=
 "> How to create a daily weekly and yearly email notification in .net</div=
></div> <div class=3D"flex justify-end text-gray-600 dark:text-gray-500"> <=
div aria-label=3D"Edit" class=3D"flex"><button class=3D"invisible p-1.5 rou=
nded-lg transition group-hover:visible hover:bg-black/5 dark:hover:bg-white=
/5 dark:hover:text-white hover:text-black edit-user-message-button"><svg xm=
lns=3D"http://www.w3.org/2000/svg" fill=3D"none" viewBox=3D"0 0 24 24" stro=
ke-width=3D"2.3" stroke=3D"currentColor" class=3D"w-4 h-4"><path stroke-lin=
ecap=3D"round" stroke-linejoin=3D"round" d=3D"M16.862 4.487l1.687-1.688a1.8=
75 1.875 0 112.652 2.652L6.832 19.82a4.5 4.5 0 01-1.897 1.13l-2.685.8.8-2.6=
85a4.5 4.5 0 011.13-1.897L16.863 4.487zm0 0L19.5 7.125"></path></svg></butt=
on></div> <div aria-label=3D"Copy" class=3D"flex"><button class=3D"invisibl=
e p-1.5 rounded-lg transition group-hover:visible hover:bg-black/5 dark:hov=
er:bg-white/5 dark:hover:text-white hover:text-black"><svg xmlns=3D"http://=
www.w3.org/2000/svg" fill=3D"none" viewBox=3D"0 0 18 18" stroke-width=3D"1.=
5" stroke=3D"currentColor" class=3D"size-4 dark:hover:text-white hover:text=
-black"><g id=3D"=C3=A5=C2=A4=C2=8D=C3=A5=CB=86=C2=B6_copy (6) 1"><path id=
=3D"Vector" d=3D"M4.875 4.66161V2.92944C4.875 2.34696 5.3472 1.87476 5.9296=
9 1.87476H15.0703C15.6528 1.87476 16.125 2.34696 16.125 2.92944V12.0701C16.=
125 12.6526 15.6528 13.1248 15.0703 13.1248H13.3186" stroke-linecap=3D"roun=
d" stroke-linejoin=3D"round"></path><path id=3D"Vector_2" d=3D"M12.0703 4.8=
7476H2.92969C2.3472 4.87476 1.875 5.34696 1.875 5.92944V15.0701C1.875 15.65=
26 2.3472 16.1248 2.92969 16.1248H12.0703C12.6528 16.1248 13.125 15.6526 13=
.125 15.0701V5.92944C13.125 5.34696 12.6528 4.87476 12.0703 4.87476Z" strok=
e-linejoin=3D"round"></path></g></svg></button></div>  </div></div></div></=
div></div></div><div class=3D"flex flex-col justify-between px-5 mb-3 w-ful=
l max-w-[1000px] mx-auto rounded-lg group"> <div class=3D"flex w-full messa=
ge-4286eacc-08f6-486b-aac8-1bd744e4ae34 svelte-1u5gq5j" id=3D"message-4286e=
acc-08f6-486b-aac8-1bd744e4ae34"><div class=3D"flex-auto pl-1 w-0"><div cla=
ss=3D"flex gap-2 items-center"><img crossorigin=3D"anonymous" src=3D"https:=
//z-cdn.chatglm.cn/z-ai/static/logo.svg" class=3D"size-6 object-contain" al=
t=3D"profile" draggable=3D"false" width=3D"24" height=3D"24"> <div class=3D=
"self-center font-semibold line-clamp-1 flex gap-1 items-center"><div aria-=
label=3D"GLM-4.5" class=3D"flex"><span class=3D"text-black line-clamp-1 dar=
k:text-white">GLM-4.5</span></div> <div class=3D"self-center text-xs invisi=
ble group-hover:visible text-gray-400 font-medium first-letter:capitalize m=
l-0.5 translate-y-[1px]"><div aria-label=3D"Saturday, September 6, 2025 8:4=
6 AM" class=3D"flex"><span class=3D"line-clamp-1">Today at 8:46 AM</span></=
div></div></div></div> <div> <div class=3D"chat-assistant w-full min-w-full=
 markdown-prose svelte-1u5gq5j"><div> <div class=3D"flex relative flex-col =
w-full" id=3D"response-content-container"><div><div id=3D"" class=3D"flex f=
lex-col px-4 py-3 bg-white/60 dark:bg-black/10 border-1 border-black/10 dar=
k:border-white/10 rounded-xl my-3 w-full"><div class=3D"transition flex fle=
x-1 justify-between items-center gap-2 cursor-pointer "><div class=3D"flex =
overflow-hidden flex-1 gap-2 text-xs"><div class=3D"flex justify-center ite=
ms-center size-4 shrink-0"><div class=3D"rounded-full size-1 bg-black/50 da=
rk:bg-white/50"></div></div>  <div class=3D"max-w-full text-xs truncate tex=
t-black/30 dark:text-white/30">We are going to create a .NET application th=
at sends email notifications daily, weekly, and yearly.</div></div> <div cl=
ass=3D"flex gap-2 items-center self-end px-2"><div class=3D"flex gap-1 text=
-xs font-medium whitespace-nowrap item-center text-black/50 dark:text-white=
/50"></div> <svg xmlns=3D"http://www.w3.org/2000/svg" fill=3D"none" viewBox=
=3D"0 0 24 24" stroke-width=3D"3" stroke=3D"currentColor" class=3D"size-3">=
<path stroke-linecap=3D"round" stroke-linejoin=3D"round" d=3D"m19.5 8.25-7.=
5 7.5-7.5-7.5"></path></svg></div></div> <div class=3D"overflow-hidden rela=
tive"><div class=3D"headShadow absolute top-0 left-0 right-0 h-8 bg-gradien=
t-to-b from-[#FBFCFDAC] dark:from-[#111415BC] to-transparent pointer-events=
-none z-1 transition-opacity duration-200 opacity-100"></div> <div class=3D=
"detailsSubContainer relative transition-all h-0 overflow-hidden max-h-40">=
<div class=3D"mb-1.5" slot=3D"content"><blockquote dir=3D"auto" class=3D"te=
xt-xs leading-5 text-black/50 dark:text-white/50"><p dir=3D"auto" class=3D"=
svelte-121hp7c">We are going to create a .NET application that sends email =
notifications daily, weekly, and yearly.
 We'll use a console application for simplicity, but the same logic can be =
applied to other types of applications (like ASP.NET Core, Windows Service,=
 etc.).
 Steps: </p><ol start=3D"1" dir=3D"auto"><li class=3D"text-start"> Set up a=
 project (e.g., Console App).</li><li class=3D"text-start"> Use a schedulin=
g library (like Hangfire, Quartz.NET, or a simple timer) to trigger the ema=
ils at the required intervals.</li><li class=3D"text-start"> Implement the =
email sending functionality (using System.Net.Mail or a library like MailKi=
t).</li><li class=3D"text-start"> Configure the email settings (SMTP server=
, port, credentials, etc.) securely (e.g., using appsettings.json and User =
Secrets).</li> </ol><div class=3D"my-2 "></div><p dir=3D"auto" class=3D"sve=
lte-121hp7c"> However, note that for a production environment, you might wa=
nt to use a more robust scheduling solution (like Hangfire with a persisten=
t storage) and a better email service (like SendGrid). </p><div class=3D"my=
-2 "></div><p dir=3D"auto" class=3D"svelte-121hp7c"> Here, I'll show an exa=
mple using: </p><ul dir=3D"auto"><li class=3D"text-start"> A console app wi=
th a simple timer for scheduling (for demonstration; note that timers are n=
ot robust for long-running processes).</li><li class=3D"text-start"> System=
.Net.Mail for sending emails (but note that MailKit is more modern and reco=
mmended).</li> </ul><div class=3D"my-2 "></div><p dir=3D"auto" class=3D"sve=
lte-121hp7c"> Alternatively, we can use Quartz.NET for more reliable schedu=
ling. </p><div class=3D"my-2 "></div><p dir=3D"auto" class=3D"svelte-121hp7=
c"> Let me provide two examples: </p><div class=3D"my-2 "></div><p dir=3D"a=
uto" class=3D"svelte-121hp7c"> Example 1: Using System.Threading.Timer (sim=
ple, but not robust for long-running or production)
 Example 2: Using Quartz.NET (more robust and feature-rich) </p><div class=
=3D"my-2 "></div><p dir=3D"auto" class=3D"svelte-121hp7c"> We'll also consi=
der that the application needs to run continuously (like a Windows Service =
or a background service in ASP.NET Core). </p><div class=3D"my-2 "></div><p=
 dir=3D"auto" class=3D"svelte-121hp7c"> Since the question is about .NET, I=
'll cover .NET Core (or .NET 5+). </p><div class=3D"my-2 "></div><p dir=3D"=
auto" class=3D"svelte-121hp7c"> Example 1: Using Timer (for simplicity) </p=
><div class=3D"my-2 "></div><p dir=3D"auto" class=3D"svelte-121hp7c"> Steps=
:
   a. Create a new console app.
   b. Add a timer that triggers every day (for daily), every week (for week=
ly), and every year (for yearly). But note: having multiple timers for diff=
erent intervals is acceptable, but we have to manage them.
   c. Alternatively, we can have one timer that checks every minute (or hou=
r) and then checks if it's time to send the daily, weekly, or yearly email.=
 </p><div class=3D"my-2 "></div><p dir=3D"auto" class=3D"svelte-121hp7c"> H=
owever, for simplicity, we'll set up three timers. </p><div class=3D"my-2 "=
></div><p dir=3D"auto" class=3D"svelte-121hp7c"> Example 2: Using Quartz.NE=
T (recommended for production) </p><div class=3D"my-2 "></div><p dir=3D"aut=
o" class=3D"svelte-121hp7c"> Steps:
   a. Install Quartz.NET NuGet package.
   b. Set up a scheduler and define jobs for daily, weekly, and yearly.
   c. Use triggers (simple triggers or cron triggers) to schedule the jobs.=
 </p><div class=3D"my-2 "></div><p dir=3D"auto" class=3D"svelte-121hp7c"> L=
et's start with Example 1 (Timer) and then Example 2 (Quartz.NET). </p><div=
 class=3D"my-2 "></div><p dir=3D"auto" class=3D"svelte-121hp7c"> Example 1:=
 Using Timer </p><div class=3D"my-2 "></div><p dir=3D"auto" class=3D"svelte=
-121hp7c"> We'll create a console app that sets up three timers for daily, =
weekly, and yearly. </p><div class=3D"my-2 "></div><p dir=3D"auto" class=3D=
"svelte-121hp7c"> Note: The timers will be set to trigger at a specific tim=
e (e.g., daily at 8:00 AM, weekly on Monday at 8:00 AM, yearly on Jan 1 at =
8:00 AM). </p><div class=3D"my-2 "></div><p dir=3D"auto" class=3D"svelte-12=
1hp7c"> We'll calculate the initial delay for the first occurrence and then=
 set the period accordingly. </p><div class=3D"my-2 "></div><p dir=3D"auto"=
 class=3D"svelte-121hp7c"> However, note that the yearly timer might be set=
 to trigger only once a year, so we can set the period to TimeSpan.FromDays=
(365) but that doesn't account for leap years. Alternatively, we can recalc=
ulate after each trigger. </p><div class=3D"my-2 "></div><p dir=3D"auto" cl=
ass=3D"svelte-121hp7c"> But for simplicity, we'll set the timers to trigger=
 at the same time every day/week/year and then reset the timer after each t=
rigger to account for leap years and such. </p><div class=3D"my-2 "></div><=
p dir=3D"auto" class=3D"svelte-121hp7c"> Alternatively, we can use a single=
 timer that runs every minute and checks the current time to see if it matc=
hes the schedule. </p><div class=3D"my-2 "></div><p dir=3D"auto" class=3D"s=
velte-121hp7c"> Let me show a single timer that runs every minute and check=
s the schedule. </p><div class=3D"my-2 "></div><p dir=3D"auto" class=3D"sve=
lte-121hp7c"> Steps for single timer approach: </p><div class=3D"my-2 "></d=
iv><ul dir=3D"auto"><li class=3D"text-start"> Create a timer that runs ever=
y minute.</li><li class=3D"text-start"> In the callback, check the current =
time and compare with the scheduled times for daily, weekly, yearly.</li><l=
i class=3D"text-start"> If the current time matches the scheduled time (wit=
hin a minute, since we run every minute), then send the email.</li> </ul><d=
iv class=3D"my-2 "></div><p dir=3D"auto" class=3D"svelte-121hp7c"> We'll st=
ore the last sent times to avoid sending multiple times in the same minute.=
 </p><div class=3D"my-2 "></div><p dir=3D"auto" class=3D"svelte-121hp7c"> H=
owever, this approach is not efficient and might not be precise, but it's s=
imple. </p><div class=3D"my-2 "></div><p dir=3D"auto" class=3D"svelte-121hp=
7c"> Alternatively, we can use three separate timers that are set to the ne=
xt occurrence and then reset after each trigger. </p><div class=3D"my-2 "><=
/div><p dir=3D"auto" class=3D"svelte-121hp7c"> Let me do the three separate=
 timers: </p><div class=3D"my-2 "></div><p dir=3D"auto" class=3D"svelte-121=
hp7c">   Daily Timer:
     First occurrence: next day at 8:00 AM
     Period: 1 day </p><div class=3D"my-2 "></div><p dir=3D"auto" class=3D"=
svelte-121hp7c">   Weekly Timer:
     First occurrence: next Monday at 8:00 AM
     Period: 7 days </p><div class=3D"my-2 "></div><p dir=3D"auto" class=3D=
"svelte-121hp7c">   Yearly Timer:
     First occurrence: next January 1 at 8:00 AM
     Period: 1 year (but we'll reset after each trigger to account for leap=
 years) </p><div class=3D"my-2 "></div><p dir=3D"auto" class=3D"svelte-121h=
p7c"> However, note that the period for the yearly timer is not exactly 365=
 days because of leap years. So we can calculate the next occurrence every =
time. </p><div class=3D"my-2 "></div><p dir=3D"auto" class=3D"svelte-121hp7=
c"> We'll create a method to calculate the next occurrence for each. </p><d=
iv class=3D"my-2 "></div><p dir=3D"auto" class=3D"svelte-121hp7c"> Implemen=
tation: </p><div class=3D"my-2 "></div><p dir=3D"auto" class=3D"svelte-121h=
p7c">   We'll create a class for each scheduler (Daily, Weekly, Yearly) tha=
t uses a Timer and recalculates the next occurrence after each trigger. </p=
><div class=3D"my-2 "></div><p dir=3D"auto" class=3D"svelte-121hp7c">   But=
 to keep it simple, we'll create a single class that handles all three. </p=
><div class=3D"my-2 "></div><p dir=3D"auto" class=3D"svelte-121hp7c"> Let's=
 code: </p><div class=3D"my-2 "></div><p dir=3D"auto" class=3D"svelte-121hp=
7c">   We'll have:
     - A method to send email (with a subject and body that can be customiz=
ed per schedule).
     - We'll use System.Net.Mail. </p><div class=3D"my-2 "></div><p dir=3D"=
auto" class=3D"svelte-121hp7c">   Note: We need to handle the case when the=
 application is restarted (we don't want to miss an email). But for a conso=
le app, if it restarts, we recalculate the next occurrence. </p><div class=
=3D"my-2 "></div><p dir=3D"auto" class=3D"svelte-121hp7c">   We'll store th=
e next occurrence times in variables and set the timers accordingly. </p><d=
iv class=3D"my-2 "></div><p dir=3D"auto" class=3D"svelte-121hp7c">   Steps:=
 </p><div class=3D"my-2 "></div> 1. Calculate the next daily time (tomorrow=
 at 8:00 AM, or if today is before 8:00 AM then today at 8:00 AM? We'll do =
next 8:00 AM).
 2. Similarly for weekly (next Monday at 8:00 AM) and yearly (next January =
1 at 8:00 AM).

 3. Set up timers for each, with the initial delay and then a callback that=
 sends the email and then recalculates the next occurrence and resets the t=
imer.<p dir=3D"auto" class=3D"svelte-121hp7c">   We'll use a Timer for each=
 and change the timer's due time and period in the callback. </p><div class=
=3D"my-2 "></div><p dir=3D"auto" class=3D"svelte-121hp7c">   However, note:=
 the Timer class in .NET has a Change method that can reset the timer. </p>=
<div class=3D"my-2 "></div><p dir=3D"auto" class=3D"svelte-121hp7c">   Let'=
s create a class <code class=3D"cursor-pointer codespan">EmailScheduler</co=
de> that will handle the three timers. </p><div class=3D"my-2 "></div><p di=
r=3D"auto" class=3D"svelte-121hp7c">   We'll also have a configuration for =
the email settings (from appsettings.json). </p><div class=3D"my-2 "></div>=
<p dir=3D"auto" class=3D"svelte-121hp7c">   We'll use Microsoft.Extensions.=
Configuration to read the settings. </p><div class=3D"my-2 "></div><p dir=
=3D"auto" class=3D"svelte-121hp7c">   Steps: </p><div class=3D"my-2 "></div=
> - Create a new .NET Core console app.
 - Add the following NuGet packages: Microsoft.Extensions.Configuration.Jso=
n, Microsoft.Extensions.Configuration.Binder, and Microsoft.Extensions.Conf=
iguration (if not already included).<p dir=3D"auto" class=3D"svelte-121hp7c=
">   Alternatively, we can use the HostBuilder to set up configuration. </p=
><div class=3D"my-2 "></div><p dir=3D"auto" class=3D"svelte-121hp7c">   Let=
 me use the HostBuilder to set up configuration and then run the scheduler.=
 </p><div class=3D"my-2 "></div><p dir=3D"auto" class=3D"svelte-121hp7c">  =
 But to keep it simple, I'll just use a ConfigurationBuilder. </p><div clas=
s=3D"my-2 "></div><p dir=3D"auto" class=3D"svelte-121hp7c">   Example 1: Ti=
mer approach with three timers. </p><div class=3D"my-2 "></div><p dir=3D"au=
to" class=3D"svelte-121hp7c">   We'll create: </p><div class=3D"my-2 "></di=
v> public class EmailScheduler
 {
     private Timer _dailyTimer;
     private Timer _weeklyTimer;
     private Timer _yearlyTimer;

     private readonly SmtpClient _smtpClient;
     private readonly string _fromAddress;
     private readonly string _toAddress;

     public EmailScheduler(IConfiguration configuration)
     {
         // Configure SMTP client from configuration
         var smtpConfig =3D configuration.GetSection("Smtp");
         _smtpClient =3D new SmtpClient(smtpConfig["Host"], int.Parse(smtpC=
onfig["Port"]))
         {
             Credentials =3D new NetworkCredential(smtpConfig["Username"], =
smtpConfig["Password"]),
             EnableSsl =3D bool.Parse(smtpConfig["EnableSsl"])
         };
         _fromAddress =3D smtpConfig["FromAddress"];
         _toAddress =3D smtpConfig["ToAddress"];

         // Initialize timers
         InitializeDailyTimer();
         InitializeWeeklyTimer();
         InitializeYearlyTimer();
     }

     private void InitializeDailyTimer()
     {
         var now =3D DateTime.Now;
         var scheduledTime =3D new DateTime(now.Year, now.Month, now.Day, 8=
, 0, 0); // Today at 8:00 AM
         if (now &gt; scheduledTime)
         {
             scheduledTime =3D scheduledTime.AddDays(1); // Next day at 8:0=
0 AM
         }

         var timeSpan =3D scheduledTime - now;
         _dailyTimer =3D new Timer(SendDailyEmail, null, timeSpan, TimeSpan=
.FromDays(1));
     }

     private void InitializeWeeklyTimer()
     {
         var now =3D DateTime.Now;
         // Next Monday at 8:00 AM
         var daysUntilMonday =3D ((int)DayOfWeek.Monday - (int)now.DayOfWee=
k + 7) % 7;
         if (daysUntilMonday =3D=3D 0 &amp;&amp; now.TimeOfDay &gt; TimeSpa=
n.FromHours(8))
         {
             daysUntilMonday =3D 7;
         }
         var nextMonday =3D now.AddDays(daysUntilMonday).Date.AddHours(8);
         var timeSpan =3D nextMonday - now;
         _weeklyTimer =3D new Timer(SendWeeklyEmail, null, timeSpan, TimeSp=
an.FromDays(7));
     }

     private void InitializeYearlyTimer()
     {
         var now =3D DateTime.Now;
         var nextYear =3D now.Year;
         var scheduledTime =3D new DateTime(nextYear, 1, 1, 8, 0, 0); // Ne=
xt January 1 at 8:00 AM
         if (now &gt; scheduledTime)
         {
             scheduledTime =3D scheduledTime.AddYears(1);
         }

         var timeSpan =3D scheduledTime - now;
         _yearlyTimer =3D new Timer(SendYearlyEmail, null, timeSpan, TimeSp=
an.FromDays(365)); // We'll reset in the callback to account for leap years
     }

     private void SendDailyEmail(object state)
     {
         try
         {
             var mailMessage =3D new MailMessage(_fromAddress, _toAddress)
             {
                 Subject =3D "Daily Notification",
                 Body =3D "This is your daily notification."
             };
             _smtpClient.Send(mailMessage);
         }
         catch (Exception ex)
         {
             // Log error
             Console.WriteLine($"Error sending daily email: {ex.Message}");
         }
         // Reset the timer for the next day (we set the period to 1 day, s=
o it will trigger every day at the same time)
         // But note: we set the period in the timer, so it will automatica=
lly repeat every day. However, if we want to recalculate (for DST changes?)=
, we might reset the timer.
         // For simplicity, we rely on the period. But note that the period=
 is fixed at 24 hours, which might not be exactly 8:00 AM after DST changes=
.
         // To be safe, we can recalculate the next time and change the tim=
er.
         // We'll do the same as in InitializeDailyTimer, but without creat=
ing a new timer? We can change the timer.
         // Let's change the timer to the next occurrence.
         var now =3D DateTime.Now;
         var scheduledTime =3D new DateTime(now.Year, now.Month, now.Day, 8=
, 0, 0).AddDays(1);
         var timeSpan =3D scheduledTime - now;
         _dailyTimer.Change(timeSpan, TimeSpan.FromDays(1));
     }

     // Similarly for weekly and yearly, we reset the timer in the callback=
 to account for any changes (like leap year for yearly, and for weekly to a=
ccount for DST?).

     private void SendWeeklyEmail(object state)
     {
         try
         {
             var mailMessage =3D new MailMessage(_fromAddress, _toAddress)
             {
                 Subject =3D "Weekly Notification",
                 Body =3D "This is your weekly notification."
             };
             _smtpClient.Send(mailMessage);
         }
         catch (Exception ex)
         {
             Console.WriteLine($"Error sending weekly email: {ex.Message}")=
;
         }
         // Reset the timer for next week
         var now =3D DateTime.Now;
         var daysUntilMonday =3D ((int)DayOfWeek.Monday - (int)now.DayOfWee=
k + 7) % 7;
         if (daysUntilMonday =3D=3D 0)
         {
             daysUntilMonday =3D 7;
         }
         var nextMonday =3D now.AddDays(daysUntilMonday).Date.AddHours(8);
         var timeSpan =3D nextMonday - now;
         _weeklyTimer.Change(timeSpan, TimeSpan.FromDays(7));
     }

     private void SendYearlyEmail(object state)
     {
         try
         {
             var mailMessage =3D new MailMessage(_fromAddress, _toAddress)
             {
                 Subject =3D "Yearly Notification",
                 Body =3D "This is your yearly notification."
             };
             _smtpClient.Send(mailMessage);
         }
         catch (Exception ex)
         {
             Console.WriteLine($"Error sending yearly email: {ex.Message}")=
;
         }
         // Reset the timer for next year
         var now =3D DateTime.Now;
         var nextYear =3D now.Year + 1;
         var scheduledTime =3D new DateTime(nextYear, 1, 1, 8, 0, 0);
         var timeSpan =3D scheduledTime - now;
         _yearlyTimer.Change(timeSpan, TimeSpan.FromDays(365)); // We'll re=
set again next year
     }

     public void Stop()
     {
         _dailyTimer?.Dispose();
         _weeklyTimer?.Dispose();
         _yearlyTimer?.Dispose();
         _smtpClient?.Dispose();
     }
 }<p dir=3D"auto" class=3D"svelte-121hp7c">   Then in the main program: </p=
><div class=3D"my-2 "></div> class Program
 {
     static void Main(string[] args)
     {
         var builder =3D new ConfigurationBuilder()
             .SetBasePath(Directory.GetCurrentDirectory())
             .AddJsonFile("appsettings.json", optional: false, reloadOnChan=
ge: true);

         IConfiguration configuration =3D builder.Build();

         var scheduler =3D new EmailScheduler(configuration);

         Console.WriteLine("Email scheduler started. Press any key to exit.=
");
         Console.ReadKey();

         scheduler.Stop();
     }
 }<p dir=3D"auto" class=3D"svelte-121hp7c">   And the appsettings.json: </p=
><div class=3D"my-2 "></div> {
   "Smtp": {
     "Host": "smtp.example.com",
     "Port": "587",
     "Username": "your_username",
     "Password": "your_password",
     "EnableSsl": "true",
     "FromAddress": "from@example.com",
     "ToAddress": "to@example.com"
   }
 }<p dir=3D"auto" class=3D"svelte-121hp7c">   Note: This is a simple exampl=
e. In production, you should:
     - Use a more secure way to store credentials (like User Secrets or Azu=
re Key Vault).
     - Use a library like MailKit instead of System.Net.Mail for better sup=
port and security.
     - Consider using a background service (like in ASP.NET Core) or a Wind=
ows Service for long-running processes. </p><div class=3D"my-2 "></div><p d=
ir=3D"auto" class=3D"svelte-121hp7c">   Also, note that the timers might no=
t be precise and could drift. For more precision, use a scheduling library.=
 </p><div class=3D"my-2 "></div><p dir=3D"auto" class=3D"svelte-121hp7c"> E=
xample 2: Using Quartz.NET </p><div class=3D"my-2 "></div><p dir=3D"auto" c=
lass=3D"svelte-121hp7c">   Steps: </p><div class=3D"my-2 "></div> 1. Instal=
l the Quartz.NET NuGet package: `Install-Package Quartz`

 2. Create a job for each type (daily, weekly, yearly) or one job with a pa=
rameter.

 3. Set up a scheduler and schedule the jobs with triggers.

 4. Use cron expressions for the triggers.<p dir=3D"auto" class=3D"svelte-1=
21hp7c">   Let's create: </p><div class=3D"my-2 "></div> - A job class that=
 implements IJob and sends the email.

 - We'll have one job class and pass the type (daily, weekly, yearly) in th=
e job data map.<p dir=3D"auto" class=3D"svelte-121hp7c">   Alternatively, w=
e can create three separate job classes. </p><div class=3D"my-2 "></div><p =
dir=3D"auto" class=3D"svelte-121hp7c">   I'll create one job class and use =
the job data to determine the type. </p><div class=3D"my-2 "></div><p dir=
=3D"auto" class=3D"svelte-121hp7c">   Code: </p><div class=3D"my-2 "></div>=
 public class EmailJob : IJob
 {
     private readonly SmtpClient _smtpClient;
     private readonly string _fromAddress;
     private readonly string _toAddress;

     // We cannot use dependency injection easily in Quartz.NET jobs by def=
ault. We'll have to set up the job factory to resolve dependencies.
     // For simplicity, we'll pass the configuration via the job data map.

     public EmailJob(IConfiguration configuration)
     {
         // But note: Quartz.NET jobs are instantiated by the scheduler, so=
 we need to set up the job factory to use DI.
         // Alternatively, we can pass the configuration via the job data m=
ap.

         // Let me change: we'll pass the SMTP settings via the job data ma=
p in the trigger.
     }

     public async Task Execute(IJobExecutionContext context)
     {
         var dataMap =3D context.JobDetail.JobDataMap;
         var smtpHost =3D dataMap.GetString("smtpHost");
         var smtpPort =3D dataMap.GetInt("smtpPort");
         var smtpUsername =3D dataMap.GetString("smtpUsername");
         var smtpPassword =3D dataMap.GetString("smtpPassword");
         var enableSsl =3D dataMap.GetBoolean("enableSsl");
         var fromAddress =3D dataMap.GetString("fromAddress");
         var toAddress =3D dataMap.GetString("toAddress");
         var emailType =3D dataMap.GetString("emailType");

         using (var smtpClient =3D new SmtpClient(smtpHost, smtpPort))
         {
             smtpClient.Credentials =3D new NetworkCredential(smtpUsername,=
 smtpPassword);
             smtpClient.EnableSsl =3D enableSsl;

             var subject =3D $"{emailType} Notification";
             var body =3D $"This is your {emailType} notification.";

             var mailMessage =3D new MailMessage(fromAddress, toAddress)
             {
                 Subject =3D subject,
                 Body =3D body
             };

             await smtpClient.SendMailAsync(mailMessage);
         }
     }
 }<p dir=3D"auto" class=3D"svelte-121hp7c">   Then in the main program: </p=
><div class=3D"my-2 "></div> class Program
 {
     static async Task Main(string[] args)
     {
         var builder =3D new ConfigurationBuilder()
             .SetBasePath(Directory.GetCurrentDirectory())
             .AddJsonFile("appsettings.json", optional: false, reloadOnChan=
ge: true);

         IConfiguration configuration =3D builder.Build();

         // Create a scheduler
         var factory =3D new StdSchedulerFactory();
         IScheduler scheduler =3D await factory.GetScheduler();
         await scheduler.Start();

         // Define the job and pass the configuration via job data map
         IJobDetail job =3D JobBuilder.Create&lt;EmailJob&gt;()
             .WithIdentity("emailJob", "group1")
             .UsingJobData("smtpHost", configuration["Smtp:Host"])
             .UsingJobData("smtpPort", int.Parse(configuration["Smtp:Port"]=
))
             .UsingJobData("smtpUsername", configuration["Smtp:Username"])
             .UsingJobData("smtpPassword", configuration["Smtp:Password"])
             .UsingJobData("enableSsl", bool.Parse(configuration["Smtp:Enab=
leSsl"]))
             .UsingJobData("fromAddress", configuration["Smtp:FromAddress"]=
)
             .UsingJobData("toAddress", configuration["Smtp:ToAddress"])
             .Build();

         // Create triggers for daily, weekly, yearly

         // Daily trigger: every day at 8:00 AM
         ITrigger dailyTrigger =3D TriggerBuilder.Create()
             .WithIdentity("dailyTrigger", "group1")
             .WithSchedule(CronScheduleBuilder.DailyAtHourAndMinute(8, 0))
             .UsingJobData("emailType", "Daily")
             .Build();

         // Weekly trigger: every Monday at 8:00 AM
         ITrigger weeklyTrigger =3D TriggerBuilder.Create()
             .WithIdentity("weeklyTrigger", "group1")
             .WithSchedule(CronScheduleBuilder.WeeklyOnDayAndHourAndMinute(=
DayOfWeek.Monday, 8, 0))
             .UsingJobData("emailType", "Weekly")
             .Build();

         // Yearly trigger: every January 1 at 8:00 AM
         ITrigger yearlyTrigger =3D TriggerBuilder.Create()
             .WithIdentity("yearlyTrigger", "group1")
             .WithSchedule(CronScheduleBuilder.AtHourAndMinuteOnGivenDaysOf=
Week(8, 0, DayOfWeek.Monday, DayOfWeek.Tuesday, DayOfWeek.Wednesday, DayOfW=
eek.Thursday, DayOfWeek.Friday, DayOfWeek.Saturday, DayOfWeek.Sunday)) // T=
his is not for yearly. We need a specific date.
             // Instead, we can use a cron expression for January 1: "0 0 8=
 1 1 ?" -&gt; but note: Quartz cron uses 6 or 7 fields. We can use: "0 8 0 =
1 1 ?" -&gt; but that's 8:00 AM on January 1.
             // Actually, the cron expression for yearly on Jan 1 at 8:00 A=
M: "0 0 8 1 1 ?"
             .WithCronSchedule("0 0 8 1 1 ?") // Seconds, Minutes, Hours, D=
ay-of-month, Month, Day-of-week (optional) -&gt; but note: the day-of-week =
is not used because we specify day-of-month and month.
             .UsingJobData("emailType", "Yearly")
             .Build();

         // Schedule the job with the triggers
         await scheduler.ScheduleJob(job, dailyTrigger);
         await scheduler.ScheduleJob(job, weeklyTrigger);
         await scheduler.ScheduleJob(job, yearlyTrigger);

         Console.WriteLine("Scheduler started. Press any key to exit.");
         Console.ReadKey();

         await scheduler.Shutdown();
     }
 }<p dir=3D"auto" class=3D"svelte-121hp7c">   Note: The above Quartz.NET ex=
ample uses the same job for all triggers, but with different job data for t=
he email type and the same SMTP settings. </p><div class=3D"my-2 "></div><p=
 dir=3D"auto" class=3D"svelte-121hp7c">   However, note that the job data m=
ap for the job is set when defining the job, and then each trigger can over=
ride or add to the job data map. In this case, we set the emailType in the =
trigger. </p><div class=3D"my-2 "></div><p dir=3D"auto" class=3D"svelte-121=
hp7c">   Also, note that the job data map is merged: the job's job data map=
 is the base, and then the trigger's job data map is merged (with the trigg=
er's taking precedence). </p><div class=3D"my-2 "></div><p dir=3D"auto" cla=
ss=3D"svelte-121hp7c">   But in our example, we set the emailType in the tr=
igger, so it will override any set in the job. </p><div class=3D"my-2 "></d=
iv><p dir=3D"auto" class=3D"svelte-121hp7c">   This Quartz.NET example is m=
ore robust and handles scheduling more accurately. </p><div class=3D"my-2 "=
></div><p dir=3D"auto" class=3D"svelte-121hp7c">   However, note that the j=
ob is stateless and we are creating a new SmtpClient for each job execution=
. This is acceptable. </p><div class=3D"my-2 "></div><p dir=3D"auto" class=
=3D"svelte-121hp7c">   Also, we are using async/await for sending the email=
. </p><div class=3D"my-2 "></div><p dir=3D"auto" class=3D"svelte-121hp7c"> =
  Remember to handle exceptions and logging in a production environment. </=
p><div class=3D"my-2 "></div><p dir=3D"auto" class=3D"svelte-121hp7c">   Bo=
th examples are provided for educational purposes. Choose the one that fits=
 your needs. </p><div class=3D"my-2 "></div><p dir=3D"auto" class=3D"svelte=
-121hp7c">   For a production system, I recommend using Quartz.NET (or Hang=
fire) and a background service (like in ASP.NET Core) to host the scheduler=
. </p><div class=3D"my-2 "></div><p dir=3D"auto" class=3D"svelte-121hp7c"> =
  Also, consider using a more reliable email service (like SendGrid) and st=
ore credentials securely. </p> </blockquote> </div></div> <div class=3D"tai=
lShadow absolute bottom-0 left-0 right-0 h-16 bg-gradient-to-t from-[#FBFCF=
DAC] dark:from-[#111415BC] to-transparent pointer-events-none z-1 transitio=
n-opacity duration-200 opacity-0"></div></div></div><p dir=3D"auto" class=
=3D"svelte-121hp7c">To create daily, weekly, and yearly email notifications=
 in .NET, you can use a combination of scheduling libraries and email servi=
ces. Below are two approaches: <strong>Quartz.NET</strong> (robust scheduli=
ng) and <strong>Hangfire</strong> (simpler, with built-in persistence). Bot=
h work with ASP.NET Core or console apps. </p><div class=3D"my-2 "></div><h=
r class=3D"border-gray-100 dark:border-gray-850"><h3 dir=3D"auto" class=3D"=
svelte-121hp7c"><strong>Approach 1: Using Quartz.NET</strong> </h3><p dir=
=3D"auto" class=3D"svelte-121hp7c">Quartz.NET is a full-featured scheduling=
 library ideal for complex recurring tasks. </p><div class=3D"my-2 "></div>=
<h4 dir=3D"auto" class=3D"svelte-121hp7c"><strong>Step 1: Install Packages<=
/strong> </h4><div><div class=3D"relative my-2 flex flex-col rounded-lg" di=
r=3D"ltr"><div class=3D"absolute py-1.5 pl-4 text-xs font-medium text-text-=
300 dark:text-white">bash</div> <div class=3D"sticky top-8 mb-1 py-1 pr-2.5=
 flex items-center justify-end z-11 text-xs text-black dark:text-white"><di=
v class=3D"flex items-center gap-0.5 translate-y-[1px]"> <button class=3D"f=
lex gap-1 items-center px-1.5 py-0.5 bg-gray-50 bg-none rounded-md border-n=
one transition hover:bg-gray-100 dark:bg-gray-850 dark:hover:bg-gray-800"><=
svg class=3D"size-3" stroke-width=3D"1.5" fill=3D"currentColor" viewBox=3D"=
0 0 1024 1024" version=3D"1.1" xmlns=3D"http://www.w3.org/2000/svg" width=
=3D"32" height=3D"32"><path d=3D"M853.333333 298.666667H170.666667c-25.6 0-=
42.666667-17.066667-42.666667-42.666667s17.066667-42.666667 42.666667-42.66=
6667h682.666666c25.6 0 42.666667 17.066667 42.666667 42.666667s-17.066667 4=
2.666667-42.666667 42.666667zM384 810.666667H170.666667c-25.6 0-42.666667-1=
7.066667-42.666667-42.666667s17.066667-42.666667 42.666667-42.666667h213.33=
3333c25.6 0 42.666667 17.066667 42.666667 42.666667s-17.066667 42.666667-42=
.666667 42.666667z"></path><path d=3D"M640 896c-12.8 0-21.333333-4.266667-2=
9.866667-12.8l-85.333333-85.333333-4.266667-4.266667c-4.266667-8.533333-8.5=
33333-12.8-8.533333-21.333333v-8.533334c0-8.533333 4.266667-21.333333 12.8-=
25.6l85.333333-85.333333c17.066667-17.066667 42.666667-17.066667 59.733334 =
0 17.066667 17.066667 17.066667 42.666667 0 59.733333l-12.8 12.8H725.333333=
c46.933333 0 85.333333-38.4 85.333334-85.333333s-38.4-85.333333-85.333334-8=
5.333333H170.666667c-25.6 0-42.666667-17.066667-42.666667-42.666667s17.0666=
67-42.666667 42.666667-42.666667h554.666666c93.866667 0 170.666667 76.8 170=
.666667 170.666667s-76.8 170.666667-170.666667 170.666667h-68.266666l12.8 1=
2.8c17.066667 17.066667 17.066667 42.666667 0 59.733333-8.533333 8.533333-1=
7.066667 12.8-29.866667 12.8z"></path></svg> <span>Line Wrapping</span></bu=
tton> <button class=3D"flex gap-1 items-center px-1.5 py-0.5 bg-gray-50 bg-=
none rounded-md border-none transition hover:bg-gray-100 dark:bg-gray-850 d=
ark:hover:bg-gray-800"><div><svg xmlns=3D"http://www.w3.org/2000/svg" fill=
=3D"none" viewBox=3D"0 0 24 24" stroke-width=3D"1.5" stroke=3D"currentColor=
" class=3D"size-3"><path stroke-linecap=3D"round" stroke-linejoin=3D"round"=
 d=3D"M8.25 15 12 18.75 15.75 15m-7.5-6L12 5.25 15.75 9"></path></svg></div=
> <div>Collapse</div></button>  <button class=3D"px-1.5 py-0.5 bg-gray-50 b=
g-none rounded-md border-none transition copy-code-button hover:bg-gray-100=
 dark:bg-gray-850 dark:hover:bg-gray-800">Copy</button></div></div> <div cl=
ass=3D"language-bash rounded-t-lg -mt-8 rounded-b-lg overflow-hidden"><div =
class=3D"pt-7 bg-gray-50 dark:bg-gray-850"></div> <div id=3D"code-textarea-=
4286eacc-08f6-486b-aac8-1bd744e4ae34-8" class=3D"h-full w-full"><div class=
=3D"cm-editor =CD=BC1 =CD=BC3 =CD=BC4 =CD=BC5u =CD=BC3k"><div class=3D"cm-a=
nnounced" aria-live=3D"polite"></div><div tabindex=3D"-1" class=3D"cm-scrol=
ler"><div class=3D"cm-gutters" aria-hidden=3D"true" style=3D"min-height: 66=
.8px; position: sticky;"><div class=3D"cm-gutter cm-lineNumbers"><div class=
=3D"cm-gutterElement" style=3D"height: 0px; visibility: hidden; pointer-eve=
nts: none;">9</div><div class=3D"cm-gutterElement" style=3D"height: 19.6px;=
 margin-top: 4px;">1</div><div class=3D"cm-gutterElement" style=3D"height: =
19.6px;">2</div><div class=3D"cm-gutterElement cm-activeLineGutter" style=
=3D"height: 19.6px;">3</div></div><div class=3D"cm-gutter cm-foldGutter"><d=
iv class=3D"cm-gutterElement" style=3D"height: 0px; visibility: hidden; poi=
nter-events: none;"><span title=3D"Unfold line">=E2=80=BA</span></div><div =
class=3D"cm-gutterElement cm-activeLineGutter" style=3D"height: 19.6px; mar=
gin-top: 43.2px;"></div></div></div><div spellcheck=3D"false" autocorrect=
=3D"off" autocapitalize=3D"off" writingsuggestions=3D"false" translate=3D"n=
o" contenteditable=3D"false" style=3D"tab-size: 4;" class=3D"cm-content cm-=
lineWrapping" role=3D"textbox" aria-multiline=3D"true" data-language=3D"she=
ll" aria-autocomplete=3D"list"><div class=3D"cm-line">Install-Package Quart=
z</div><div class=3D"cm-line">Install-Package Quartz.Extensions.Hosting</di=
v><div class=3D"cm-activeLine cm-line">Install-Package MailKit <span class=
=3D"cm-matchingBracket">(</span>recommended <span class=3D"=CD=BC3o">for</s=
pan> email<span class=3D"cm-matchingBracket">)</span></div></div><div class=
=3D"cm-layer cm-layer-above cm-cursorLayer" aria-hidden=3D"true" style=3D"z=
-index: 150; animation-duration: 1200ms; animation-name: cm-blink2;"><div c=
lass=3D"cm-cursor cm-cursor-primary" style=3D"left: 401.188px; top: 44.8px;=
 height: 16px;"></div></div><div class=3D"cm-layer cm-selectionLayer" aria-=
hidden=3D"true" style=3D"z-index: -2;"></div></div></div></div></div> <div =
id=3D"plt-canvas-4286eacc-08f6-486b-aac8-1bd744e4ae34-8" class=3D"bg-gray-5=
0 dark:bg-[#202123] dark:text-white max-w-full overflow-x-auto scrollbar-hi=
dden"></div> </div></div> <div class=3D"my-2 "></div><h4 dir=3D"auto" class=
=3D"svelte-121hp7c"><strong>Step 2: Configure Email Settings (<code class=
=3D"cursor-pointer codespan">appsettings.json</code>)</strong> </h4><div><d=
iv class=3D"relative my-2 flex flex-col rounded-lg" dir=3D"ltr"><div class=
=3D"absolute py-1.5 pl-4 text-xs font-medium text-text-300 dark:text-white"=
>json</div> <div class=3D"sticky top-8 mb-1 py-1 pr-2.5 flex items-center j=
ustify-end z-11 text-xs text-black dark:text-white"><div class=3D"flex item=
s-center gap-0.5 translate-y-[1px]"> <button class=3D"flex gap-1 items-cent=
er px-1.5 py-0.5 bg-gray-50 bg-none rounded-md border-none transition hover=
:bg-gray-100 dark:bg-gray-850 dark:hover:bg-gray-800"><svg class=3D"size-3"=
 stroke-width=3D"1.5" fill=3D"currentColor" viewBox=3D"0 0 1024 1024" versi=
on=3D"1.1" xmlns=3D"http://www.w3.org/2000/svg" width=3D"32" height=3D"32">=
<path d=3D"M853.333333 298.666667H170.666667c-25.6 0-42.666667-17.066667-42=
.666667-42.666667s17.066667-42.666667 42.666667-42.666667h682.666666c25.6 0=
 42.666667 17.066667 42.666667 42.666667s-17.066667 42.666667-42.666667 42.=
666667zM384 810.666667H170.666667c-25.6 0-42.666667-17.066667-42.666667-42.=
666667s17.066667-42.666667 42.666667-42.666667h213.333333c25.6 0 42.666667 =
17.066667 42.666667 42.666667s-17.066667 42.666667-42.666667 42.666667z"></=
path><path d=3D"M640 896c-12.8 0-21.333333-4.266667-29.866667-12.8l-85.3333=
33-85.333333-4.266667-4.266667c-4.266667-8.533333-8.533333-12.8-8.533333-21=
.333333v-8.533334c0-8.533333 4.266667-21.333333 12.8-25.6l85.333333-85.3333=
33c17.066667-17.066667 42.666667-17.066667 59.733334 0 17.066667 17.066667 =
17.066667 42.666667 0 59.733333l-12.8 12.8H725.333333c46.933333 0 85.333333=
-38.4 85.333334-85.333333s-38.4-85.333333-85.333334-85.333333H170.666667c-2=
5.6 0-42.666667-17.066667-42.666667-42.666667s17.066667-42.666667 42.666667=
-42.666667h554.666666c93.866667 0 170.666667 76.8 170.666667 170.666667s-76=
.8 170.666667-170.666667 170.666667h-68.266666l12.8 12.8c17.066667 17.06666=
7 17.066667 42.666667 0 59.733333-8.533333 8.533333-17.066667 12.8-29.86666=
7 12.8z"></path></svg> <span>Line Wrapping</span></button> <button class=3D=
"flex gap-1 items-center px-1.5 py-0.5 bg-gray-50 bg-none rounded-md border=
-none transition hover:bg-gray-100 dark:bg-gray-850 dark:hover:bg-gray-800"=
><div><svg xmlns=3D"http://www.w3.org/2000/svg" fill=3D"none" viewBox=3D"0 =
0 24 24" stroke-width=3D"1.5" stroke=3D"currentColor" class=3D"size-3"><pat=
h stroke-linecap=3D"round" stroke-linejoin=3D"round" d=3D"M8.25 15 12 18.75=
 15.75 15m-7.5-6L12 5.25 15.75 9"></path></svg></div> <div>Collapse</div></=
button>  <button class=3D"px-1.5 py-0.5 bg-gray-50 bg-none rounded-md borde=
r-none transition copy-code-button hover:bg-gray-100 dark:bg-gray-850 dark:=
hover:bg-gray-800">Copy</button></div></div> <div class=3D"language-json ro=
unded-t-lg -mt-8 rounded-b-lg overflow-hidden"><div class=3D"pt-7 bg-gray-5=
0 dark:bg-gray-850"></div> <div id=3D"code-textarea-4286eacc-08f6-486b-aac8=
-1bd744e4ae34-11" class=3D"h-full w-full"><div class=3D"cm-editor =CD=BC1 =
=CD=BC3 =CD=BC4 =CD=BC5v =CD=BC3k"><div class=3D"cm-announced" aria-live=3D=
"polite"></div><div tabindex=3D"-1" class=3D"cm-scroller"><div class=3D"cm-=
gutters" aria-hidden=3D"true" style=3D"min-height: 204px; position: sticky;=
"><div class=3D"cm-gutter cm-lineNumbers"><div class=3D"cm-gutterElement" s=
tyle=3D"height: 0px; visibility: hidden; pointer-events: none;">99</div><di=
v class=3D"cm-gutterElement" style=3D"height: 19.6px; margin-top: 4px;">1</=
div><div class=3D"cm-gutterElement" style=3D"height: 19.6px;">2</div><div c=
lass=3D"cm-gutterElement" style=3D"height: 19.6px;">3</div><div class=3D"cm=
-gutterElement" style=3D"height: 19.6px;">4</div><div class=3D"cm-gutterEle=
ment" style=3D"height: 19.6px;">5</div><div class=3D"cm-gutterElement" styl=
e=3D"height: 19.6px;">6</div><div class=3D"cm-gutterElement" style=3D"heigh=
t: 19.6px;">7</div><div class=3D"cm-gutterElement" style=3D"height: 19.6px;=
">8</div><div class=3D"cm-gutterElement" style=3D"height: 19.6px;">9</div><=
div class=3D"cm-gutterElement cm-activeLineGutter" style=3D"height: 19.6px;=
">10</div></div><div class=3D"cm-gutter cm-foldGutter"><div class=3D"cm-gut=
terElement" style=3D"height: 0px; visibility: hidden; pointer-events: none;=
"><span title=3D"Unfold line">=E2=80=BA</span></div><div class=3D"cm-gutter=
Element" style=3D"height: 19.6px; margin-top: 4px;"><span title=3D"Fold lin=
e">=E2=8C=84</span></div><div class=3D"cm-gutterElement" style=3D"height: 1=
9.6px;"><span title=3D"Fold line">=E2=8C=84</span></div><div class=3D"cm-gu=
tterElement cm-activeLineGutter" style=3D"height: 19.6px; margin-top: 137.2=
px;"></div></div></div><div spellcheck=3D"false" autocorrect=3D"off" autoca=
pitalize=3D"off" writingsuggestions=3D"false" translate=3D"no" contentedita=
ble=3D"false" style=3D"tab-size: 4;" class=3D"cm-content cm-lineWrapping" r=
ole=3D"textbox" aria-multiline=3D"true" data-language=3D"json"><div class=
=3D"cm-line"><span class=3D"cm-matchingBracket">{</span></div><div class=3D=
"cm-line">  "EmailSettings": {</div><div class=3D"cm-line">    "SmtpServer"=
: <span class=3D"=CD=BC3m">"smtp.example.com"</span>,</div><div class=3D"cm=
-line">    "SmtpPort": <span class=3D"=CD=BC3n">587</span>,</div><div class=
=3D"cm-line">    "SmtpUsername": <span class=3D"=CD=BC3m">"user@example.com=
"</span>,</div><div class=3D"cm-line">    "SmtpPassword": <span class=3D"=
=CD=BC3m">"password"</span>,</div><div class=3D"cm-line">    "FromEmail": <=
span class=3D"=CD=BC3m">"noreply@example.com"</span>,</div><div class=3D"cm=
-line">    "ToEmail": <span class=3D"=CD=BC3m">"recipient@example.com"</spa=
n></div><div class=3D"cm-line">  }</div><div class=3D"cm-activeLine cm-line=
"><span class=3D"cm-matchingBracket">}</span></div></div><div class=3D"cm-l=
ayer cm-layer-above cm-cursorLayer" aria-hidden=3D"true" style=3D"z-index: =
150; animation-duration: 1200ms; animation-name: cm-blink2;"><div class=3D"=
cm-cursor cm-cursor-primary" style=3D"left: 55.0875px; top: 182px; height: =
16px;"></div></div><div class=3D"cm-layer cm-selectionLayer" aria-hidden=3D=
"true" style=3D"z-index: -2;"></div></div></div></div></div> <div id=3D"plt=
-canvas-4286eacc-08f6-486b-aac8-1bd744e4ae34-11" class=3D"bg-gray-50 dark:b=
g-[#202123] dark:text-white max-w-full overflow-x-auto scrollbar-hidden"></=
div> </div></div> <div class=3D"my-2 "></div><h4 dir=3D"auto" class=3D"svel=
te-121hp7c"><strong>Step 3: Create an Email Service</strong> </h4><div><div=
 class=3D"relative my-2 flex flex-col rounded-lg" dir=3D"ltr"><div class=3D=
"absolute py-1.5 pl-4 text-xs font-medium text-text-300 dark:text-white">cs=
harp</div> <div class=3D"sticky top-8 mb-1 py-1 pr-2.5 flex items-center ju=
stify-end z-11 text-xs text-black dark:text-white"><div class=3D"flex items=
-center gap-0.5 translate-y-[1px]"> <button class=3D"flex gap-1 items-cente=
r px-1.5 py-0.5 bg-gray-50 bg-none rounded-md border-none transition hover:=
bg-gray-100 dark:bg-gray-850 dark:hover:bg-gray-800"><svg class=3D"size-3" =
stroke-width=3D"1.5" fill=3D"currentColor" viewBox=3D"0 0 1024 1024" versio=
n=3D"1.1" xmlns=3D"http://www.w3.org/2000/svg" width=3D"32" height=3D"32"><=
path d=3D"M853.333333 298.666667H170.666667c-25.6 0-42.666667-17.066667-42.=
666667-42.666667s17.066667-42.666667 42.666667-42.666667h682.666666c25.6 0 =
42.666667 17.066667 42.666667 42.666667s-17.066667 42.666667-42.666667 42.6=
66667zM384 810.666667H170.666667c-25.6 0-42.666667-17.066667-42.666667-42.6=
66667s17.066667-42.666667 42.666667-42.666667h213.333333c25.6 0 42.666667 1=
7.066667 42.666667 42.666667s-17.066667 42.666667-42.666667 42.666667z"></p=
ath><path d=3D"M640 896c-12.8 0-21.333333-4.266667-29.866667-12.8l-85.33333=
3-85.333333-4.266667-4.266667c-4.266667-8.533333-8.533333-12.8-8.533333-21.=
333333v-8.533334c0-8.533333 4.266667-21.333333 12.8-25.6l85.333333-85.33333=
3c17.066667-17.066667 42.666667-17.066667 59.733334 0 17.066667 17.066667 1=
7.066667 42.666667 0 59.733333l-12.8 12.8H725.333333c46.933333 0 85.333333-=
38.4 85.333334-85.333333s-38.4-85.333333-85.333334-85.333333H170.666667c-25=
.6 0-42.666667-17.066667-42.666667-42.666667s17.066667-42.666667 42.666667-=
42.666667h554.666666c93.866667 0 170.666667 76.8 170.666667 170.666667s-76.=
8 170.666667-170.666667 170.666667h-68.266666l12.8 12.8c17.066667 17.066667=
 17.066667 42.666667 0 59.733333-8.533333 8.533333-17.066667 12.8-29.866667=
 12.8z"></path></svg> <span>Line Wrapping</span></button> <button class=3D"=
flex gap-1 items-center px-1.5 py-0.5 bg-gray-50 bg-none rounded-md border-=
none transition hover:bg-gray-100 dark:bg-gray-850 dark:hover:bg-gray-800">=
<div><svg xmlns=3D"http://www.w3.org/2000/svg" fill=3D"none" viewBox=3D"0 0=
 24 24" stroke-width=3D"1.5" stroke=3D"currentColor" class=3D"size-3"><path=
 stroke-linecap=3D"round" stroke-linejoin=3D"round" d=3D"M8.25 15 12 18.75 =
15.75 15m-7.5-6L12 5.25 15.75 9"></path></svg></div> <div>Collapse</div></b=
utton>  <button class=3D"px-1.5 py-0.5 bg-gray-50 bg-none rounded-md border=
-none transition copy-code-button hover:bg-gray-100 dark:bg-gray-850 dark:h=
over:bg-gray-800">Copy</button></div></div> <div class=3D"language-csharp r=
ounded-t-lg -mt-8 rounded-b-lg overflow-hidden"><div class=3D"pt-7 bg-gray-=
50 dark:bg-gray-850"></div> <div id=3D"code-textarea-4286eacc-08f6-486b-aac=
8-1bd744e4ae34-14" class=3D"h-full w-full"><div class=3D"cm-editor =CD=BC1 =
=CD=BC3 =CD=BC4 =CD=BC5w =CD=BC3k"><div class=3D"cm-announced" aria-live=3D=
"polite"></div><div tabindex=3D"-1" class=3D"cm-scroller"><div class=3D"cm-=
gutters" aria-hidden=3D"true" style=3D"min-height: 694px; position: sticky;=
"><div class=3D"cm-gutter cm-lineNumbers"><div class=3D"cm-gutterElement" s=
tyle=3D"height: 0px; visibility: hidden; pointer-events: none;">99</div><di=
v class=3D"cm-gutterElement" style=3D"height: 19.6px; margin-top: 4px;">1</=
div><div class=3D"cm-gutterElement" style=3D"height: 19.6px;">2</div><div c=
lass=3D"cm-gutterElement" style=3D"height: 19.6px;">3</div><div class=3D"cm=
-gutterElement" style=3D"height: 19.6px;">4</div><div class=3D"cm-gutterEle=
ment" style=3D"height: 19.6px;">5</div><div class=3D"cm-gutterElement" styl=
e=3D"height: 19.6px;">6</div><div class=3D"cm-gutterElement" style=3D"heigh=
t: 19.6px;">7</div><div class=3D"cm-gutterElement" style=3D"height: 19.6px;=
">8</div><div class=3D"cm-gutterElement" style=3D"height: 19.6px;">9</div><=
div class=3D"cm-gutterElement" style=3D"height: 19.6px;">10</div><div class=
=3D"cm-gutterElement" style=3D"height: 19.6px;">11</div><div class=3D"cm-gu=
tterElement" style=3D"height: 19.6px;">12</div><div class=3D"cm-gutterEleme=
nt" style=3D"height: 19.6px;">13</div><div class=3D"cm-gutterElement" style=
=3D"height: 19.6px;">14</div><div class=3D"cm-gutterElement" style=3D"heigh=
t: 19.6px;">15</div><div class=3D"cm-gutterElement" style=3D"height: 19.6px=
;">16</div><div class=3D"cm-gutterElement" style=3D"height: 19.6px;">17</di=
v><div class=3D"cm-gutterElement" style=3D"height: 19.6px;">18</div><div cl=
ass=3D"cm-gutterElement" style=3D"height: 19.6px;">19</div><div class=3D"cm=
-gutterElement" style=3D"height: 19.6px;">20</div><div class=3D"cm-gutterEl=
ement" style=3D"height: 19.6px;">21</div><div class=3D"cm-gutterElement" st=
yle=3D"height: 19.6px;">22</div><div class=3D"cm-gutterElement" style=3D"he=
ight: 19.6px;">23</div><div class=3D"cm-gutterElement" style=3D"height: 19.=
6px;">24</div><div class=3D"cm-gutterElement" style=3D"height: 19.6px;">25<=
/div><div class=3D"cm-gutterElement" style=3D"height: 19.6px;">26</div><div=
 class=3D"cm-gutterElement" style=3D"height: 19.6px;">27</div><div class=3D=
"cm-gutterElement" style=3D"height: 19.6px;">28</div><div class=3D"cm-gutte=
rElement" style=3D"height: 19.6px;">29</div><div class=3D"cm-gutterElement"=
 style=3D"height: 19.6px;">30</div><div class=3D"cm-gutterElement" style=3D=
"height: 19.6px;">31</div><div class=3D"cm-gutterElement" style=3D"height: =
19.6px;">32</div><div class=3D"cm-gutterElement" style=3D"height: 19.6px;">=
33</div><div class=3D"cm-gutterElement" style=3D"height: 19.6px;">34</div><=
div class=3D"cm-gutterElement cm-activeLineGutter" style=3D"height: 19.6px;=
">35</div></div><div class=3D"cm-gutter cm-foldGutter"><div class=3D"cm-gut=
terElement" style=3D"height: 0px; visibility: hidden; pointer-events: none;=
"><span title=3D"Unfold line">=E2=80=BA</span></div><div class=3D"cm-gutter=
Element" style=3D"height: 19.6px; margin-top: 82.4px;"><span title=3D"Fold =
line">=E2=8C=84</span></div><div class=3D"cm-gutterElement" style=3D"height=
: 19.6px; margin-top: 78.4px;"><span title=3D"Fold line">=E2=8C=84</span></=
div><div class=3D"cm-gutterElement" style=3D"height: 19.6px; margin-top: 58=
.8px;"><span title=3D"Fold line">=E2=8C=84</span></div><div class=3D"cm-gut=
terElement" style=3D"height: 19.6px; margin-top: 78.4px;"><span title=3D"Fo=
ld line">=E2=8C=84</span></div><div class=3D"cm-gutterElement cm-activeLine=
Gutter" style=3D"height: 19.6px; margin-top: 294px;"></div></div></div><div=
 spellcheck=3D"false" autocorrect=3D"off" autocapitalize=3D"off" writingsug=
gestions=3D"false" translate=3D"no" contenteditable=3D"false" style=3D"tab-=
size: 4;" class=3D"cm-content cm-lineWrapping" role=3D"textbox" aria-multil=
ine=3D"true" data-language=3D"cpp"><div class=3D"cm-line"><span class=3D"=
=CD=BC3p">using</span> MailKit.Net.Smtp;</div><div class=3D"cm-line"><span =
class=3D"=CD=BC3p">using</span> MimeKit;</div><div class=3D"cm-line"><br></=
div><div class=3D"cm-line"><span class=3D"=CD=BC3o">public</span> <span cla=
ss=3D"=CD=BC3p">interface</span> IEmailService</div><div class=3D"cm-line">=
{</div><div class=3D"cm-line">    <span class=3D"=CD=BC3p">Task</span> <spa=
n class=3D"=CD=BC3r">SendEmailAsync</span>(<span class=3D"=CD=BC3p">string<=
/span> subject, <span class=3D"=CD=BC3p">string</span> body);</div><div cla=
ss=3D"cm-line">}</div><div class=3D"cm-line"><br></div><div class=3D"cm-lin=
e"><span class=3D"=CD=BC3o">public</span> <span class=3D"=CD=BC3p">class</s=
pan> <span class=3D"=CD=BC3p">EmailService</span> : <span class=3D"=CD=BC3p=
">IEmailService</span></div><div class=3D"cm-line"><span class=3D"cm-matchi=
ngBracket">{</span></div><div class=3D"cm-line">    <span class=3D"=CD=BC3o=
">private</span> <span class=3D"=CD=BC3p">readonly</span> IConfiguration <s=
pan class=3D"=CD=BC3p">_config</span>;</div><div class=3D"cm-line"><br></di=
v><div class=3D"cm-line">    <span class=3D"=CD=BC3o">public</span> <span c=
lass=3D"=CD=BC3r">EmailService</span>(<span class=3D"=CD=BC3p">IConfigurati=
on</span> config)</div><div class=3D"cm-line">    {</div><div class=3D"cm-l=
ine">        _config =3D config;</div><div class=3D"cm-line">    }</div><di=
v class=3D"cm-line"><br></div><div class=3D"cm-line">    <span class=3D"=CD=
=BC3o">public</span> <span class=3D"=CD=BC3p">async</span> Task <span class=
=3D"=CD=BC3p">SendEmailAsync</span>(string subject, <span class=3D"=CD=BC3p=
">string</span> body)</div><div class=3D"cm-line">    {</div><div class=3D"=
cm-line">        <span class=3D"=CD=BC3p">var</span> email =3D <span class=
=3D"=CD=BC3o">new</span> <span class=3D"=CD=BC3p">MimeMessage</span>();</di=
v><div class=3D"cm-line">        email.From.Add(MailboxAddress.Parse(_confi=
g[<span class=3D"=CD=BC3m">"EmailSettings:FromEmail"</span>]));</div><div c=
lass=3D"cm-line">        email.To.Add(MailboxAddress.Parse(_config[<span cl=
ass=3D"=CD=BC3m">"EmailSettings:ToEmail"</span>]));</div><div class=3D"cm-l=
ine">        email.Subject =3D subject;</div><div class=3D"cm-line">       =
 email.Body =3D <span class=3D"=CD=BC3o">new</span> <span class=3D"=CD=BC3p=
">TextPart</span>(MimeKit.Text.TextFormat.Html) { Text =3D body };</div><di=
v class=3D"cm-line"><br></div><div class=3D"cm-line">        <span class=3D=
"=CD=BC3p">using</span> var smtp =3D <span class=3D"=CD=BC3o">new</span> <s=
pan class=3D"=CD=BC3p">SmtpClient</span>();</div><div class=3D"cm-line">   =
     <span class=3D"=CD=BC3p">await</span> smtp.<span class=3D"=CD=BC3p">Co=
nnectAsync</span>(_config[<span class=3D"=CD=BC3m">"EmailSettings:SmtpServe=
r"</span>], </div><div class=3D"cm-line">                               <sp=
an class=3D"=CD=BC3p">int</span>.<span class=3D"=CD=BC3r">Parse</span>(<spa=
n class=3D"=CD=BC3p">_config</span>[<span class=3D"=CD=BC3m">"EmailSettings=
:SmtpPort"</span>]), </div><div class=3D"cm-line">                         =
      MailKit.Security.SecureSocketOptions.StartTls);</div><div class=3D"cm=
-line">        <span class=3D"=CD=BC3p">await</span> smtp.<span class=3D"=
=CD=BC3p">AuthenticateAsync</span>(_config[<span class=3D"=CD=BC3m">"EmailS=
ettings:SmtpUsername"</span>], </div><div class=3D"cm-line">               =
                     _config[<span class=3D"=CD=BC3m">"EmailSettings:SmtpPa=
ssword"</span>]);</div><div class=3D"cm-line">        <span class=3D"=CD=BC=
3p">await</span> smtp.<span class=3D"=CD=BC3r">SendAsync</span>(email);</di=
v><div class=3D"cm-line">        <span class=3D"=CD=BC3p">await</span> smtp=
.<span class=3D"=CD=BC3r">DisconnectAsync</span>(<span class=3D"=CD=BC3n">t=
rue</span>);</div><div class=3D"cm-line">    }</div><div class=3D"cm-active=
Line cm-line"><span class=3D"cm-matchingBracket">}</span></div></div><div c=
lass=3D"cm-layer cm-layer-above cm-cursorLayer" aria-hidden=3D"true" style=
=3D"z-index: 150; animation-duration: 1200ms; animation-name: cm-blink2;"><=
div class=3D"cm-cursor cm-cursor-primary" style=3D"left: 55.0875px; top: 67=
2px; height: 16px;"></div></div><div class=3D"cm-layer cm-selectionLayer" a=
ria-hidden=3D"true" style=3D"z-index: -2;"></div></div></div></div></div> <=
div id=3D"plt-canvas-4286eacc-08f6-486b-aac8-1bd744e4ae34-14" class=3D"bg-g=
ray-50 dark:bg-[#202123] dark:text-white max-w-full overflow-x-auto scrollb=
ar-hidden"></div> </div></div> <div class=3D"my-2 "></div><h4 dir=3D"auto" =
class=3D"svelte-121hp7c"><strong>Step 4: Create a Quartz Job</strong> </h4>=
<div><div class=3D"relative my-2 flex flex-col rounded-lg" dir=3D"ltr"><div=
 class=3D"absolute py-1.5 pl-4 text-xs font-medium text-text-300 dark:text-=
white">csharp</div> <div class=3D"sticky top-8 mb-1 py-1 pr-2.5 flex items-=
center justify-end z-11 text-xs text-black dark:text-white"><div class=3D"f=
lex items-center gap-0.5 translate-y-[1px]"> <button class=3D"flex gap-1 it=
ems-center px-1.5 py-0.5 bg-gray-50 bg-none rounded-md border-none transiti=
on hover:bg-gray-100 dark:bg-gray-850 dark:hover:bg-gray-800"><svg class=3D=
"size-3" stroke-width=3D"1.5" fill=3D"currentColor" viewBox=3D"0 0 1024 102=
4" version=3D"1.1" xmlns=3D"http://www.w3.org/2000/svg" width=3D"32" height=
=3D"32"><path d=3D"M853.333333 298.666667H170.666667c-25.6 0-42.666667-17.0=
66667-42.666667-42.666667s17.066667-42.666667 42.666667-42.666667h682.66666=
6c25.6 0 42.666667 17.066667 42.666667 42.666667s-17.066667 42.666667-42.66=
6667 42.666667zM384 810.666667H170.666667c-25.6 0-42.666667-17.066667-42.66=
6667-42.666667s17.066667-42.666667 42.666667-42.666667h213.333333c25.6 0 42=
.666667 17.066667 42.666667 42.666667s-17.066667 42.666667-42.666667 42.666=
667z"></path><path d=3D"M640 896c-12.8 0-21.333333-4.266667-29.866667-12.8l=
-85.333333-85.333333-4.266667-4.266667c-4.266667-8.533333-8.533333-12.8-8.5=
33333-21.333333v-8.533334c0-8.533333 4.266667-21.333333 12.8-25.6l85.333333=
-85.333333c17.066667-17.066667 42.666667-17.066667 59.733334 0 17.066667 17=
.066667 17.066667 42.666667 0 59.733333l-12.8 12.8H725.333333c46.933333 0 8=
5.333333-38.4 85.333334-85.333333s-38.4-85.333333-85.333334-85.333333H170.6=
66667c-25.6 0-42.666667-17.066667-42.666667-42.666667s17.066667-42.666667 4=
2.666667-42.666667h554.666666c93.866667 0 170.666667 76.8 170.666667 170.66=
6667s-76.8 170.666667-170.666667 170.666667h-68.266666l12.8 12.8c17.066667 =
17.066667 17.066667 42.666667 0 59.733333-8.533333 8.533333-17.066667 12.8-=
29.866667 12.8z"></path></svg> <span>Line Wrapping</span></button> <button =
class=3D"flex gap-1 items-center px-1.5 py-0.5 bg-gray-50 bg-none rounded-m=
d border-none transition hover:bg-gray-100 dark:bg-gray-850 dark:hover:bg-g=
ray-800"><div><svg xmlns=3D"http://www.w3.org/2000/svg" fill=3D"none" viewB=
ox=3D"0 0 24 24" stroke-width=3D"1.5" stroke=3D"currentColor" class=3D"size=
-3"><path stroke-linecap=3D"round" stroke-linejoin=3D"round" d=3D"M8.25 15 =
12 18.75 15.75 15m-7.5-6L12 5.25 15.75 9"></path></svg></div> <div>Collapse=
</div></button>  <button class=3D"px-1.5 py-0.5 bg-gray-50 bg-none rounded-=
md border-none transition copy-code-button hover:bg-gray-100 dark:bg-gray-8=
50 dark:hover:bg-gray-800">Copy</button></div></div> <div class=3D"language=
-csharp rounded-t-lg -mt-8 rounded-b-lg overflow-hidden"><div class=3D"pt-7=
 bg-gray-50 dark:bg-gray-850"></div> <div id=3D"code-textarea-4286eacc-08f6=
-486b-aac8-1bd744e4ae34-17" class=3D"h-full w-full"><div class=3D"cm-editor=
 =CD=BC1 =CD=BC3 =CD=BC4 =CD=BC5x =CD=BC3k"><div class=3D"cm-announced" ari=
a-live=3D"polite"></div><div tabindex=3D"-1" class=3D"cm-scroller"><div cla=
ss=3D"cm-gutters" aria-hidden=3D"true" style=3D"min-height: 400px; position=
: sticky;"><div class=3D"cm-gutter cm-lineNumbers"><div class=3D"cm-gutterE=
lement" style=3D"height: 0px; visibility: hidden; pointer-events: none;">99=
</div><div class=3D"cm-gutterElement" style=3D"height: 19.6px; margin-top: =
4px;">1</div><div class=3D"cm-gutterElement" style=3D"height: 19.6px;">2</d=
iv><div class=3D"cm-gutterElement" style=3D"height: 19.6px;">3</div><div cl=
ass=3D"cm-gutterElement" style=3D"height: 19.6px;">4</div><div class=3D"cm-=
gutterElement" style=3D"height: 19.6px;">5</div><div class=3D"cm-gutterElem=
ent" style=3D"height: 19.6px;">6</div><div class=3D"cm-gutterElement" style=
=3D"height: 19.6px;">7</div><div class=3D"cm-gutterElement" style=3D"height=
: 19.6px;">8</div><div class=3D"cm-gutterElement" style=3D"height: 19.6px;"=
>9</div><div class=3D"cm-gutterElement" style=3D"height: 19.6px;">10</div><=
div class=3D"cm-gutterElement" style=3D"height: 19.6px;">11</div><div class=
=3D"cm-gutterElement" style=3D"height: 19.6px;">12</div><div class=3D"cm-gu=
tterElement" style=3D"height: 19.6px;">13</div><div class=3D"cm-gutterEleme=
nt" style=3D"height: 19.6px;">14</div><div class=3D"cm-gutterElement" style=
=3D"height: 19.6px;">15</div><div class=3D"cm-gutterElement" style=3D"heigh=
t: 19.6px;">16</div><div class=3D"cm-gutterElement" style=3D"height: 19.6px=
;">17</div><div class=3D"cm-gutterElement" style=3D"height: 19.6px;">18</di=
v><div class=3D"cm-gutterElement" style=3D"height: 19.6px;">19</div><div cl=
ass=3D"cm-gutterElement cm-activeLineGutter" style=3D"height: 19.6px;">20</=
div></div><div class=3D"cm-gutter cm-foldGutter"><div class=3D"cm-gutterEle=
ment" style=3D"height: 0px; visibility: hidden; pointer-events: none;"><spa=
n title=3D"Unfold line">=E2=80=BA</span></div><div class=3D"cm-gutterElemen=
t cm-activeLineGutter" style=3D"height: 19.6px; margin-top: 376.4px;"></div=
></div></div><div spellcheck=3D"false" autocorrect=3D"off" autocapitalize=
=3D"off" writingsuggestions=3D"false" translate=3D"no" contenteditable=3D"f=
alse" style=3D"tab-size: 4;" class=3D"cm-content cm-lineWrapping" role=3D"t=
extbox" aria-multiline=3D"true" data-language=3D"csharp" aria-autocomplete=
=3D"list"><div class=3D"cm-line"><span class=3D"=CD=BC3o">using</span> Quar=
tz;</div><div class=3D"cm-line"><br></div><div class=3D"cm-line"><span clas=
s=3D"=CD=BC3o">public</span> <span class=3D"=CD=BC3o">class</span> EmailNot=
ificationJob : IJob</div><div class=3D"cm-line"><span class=3D"cm-matchingB=
racket">{</span></div><div class=3D"cm-line">    <span class=3D"=CD=BC3o">p=
rivate</span> <span class=3D"=CD=BC3o">readonly</span> IEmailService _email=
Service;</div><div class=3D"cm-line"><br></div><div class=3D"cm-line">    <=
span class=3D"=CD=BC3o">public</span> EmailNotificationJob(IEmailService em=
ailService)</div><div class=3D"cm-line">    {</div><div class=3D"cm-line"> =
       _emailService <span class=3D"=CD=BC3o">=3D</span> emailService;</div=
><div class=3D"cm-line">    }</div><div class=3D"cm-line"><br></div><div cl=
ass=3D"cm-line">    <span class=3D"=CD=BC3o">public</span> <span class=3D"=
=CD=BC3o">async</span> <span class=3D"=CD=BC3p">Task</span> Execute(IJobExe=
cutionContext context)</div><div class=3D"cm-line">    {</div><div class=3D=
"cm-line">        <span class=3D"=CD=BC3o">var</span> type <span class=3D"=
=CD=BC3o">=3D</span> context.MergedJobDataMap.GetString(<span class=3D"=CD=
=BC3m">"Type"</span>);</div><div class=3D"cm-line">        <span class=3D"=
=CD=BC3p">string</span> subject <span class=3D"=CD=BC3o">=3D</span> $<span =
class=3D"=CD=BC3m">"{type} Notification"</span>;</div><div class=3D"cm-line=
">        <span class=3D"=CD=BC3p">string</span> body <span class=3D"=CD=BC=
3o">=3D</span> $<span class=3D"=CD=BC3m">"&lt;h1&gt;{type} Report&lt;/h1&gt=
;&lt;p&gt;Generated at: {DateTime.UtcNow}&lt;/p&gt;"</span>;</div><div clas=
s=3D"cm-line"><br></div><div class=3D"cm-line">        <span class=3D"=CD=
=BC3o">await</span> _emailService.SendEmailAsync(subject, body);</div><div =
class=3D"cm-line">    }</div><div class=3D"cm-activeLine cm-line"><span cla=
ss=3D"cm-matchingBracket">}</span></div></div><div class=3D"cm-layer cm-lay=
er-above cm-cursorLayer" aria-hidden=3D"true" style=3D"z-index: 150; animat=
ion-duration: 1200ms; animation-name: cm-blink;"><div class=3D"cm-cursor cm=
-cursor-primary" style=3D"left: 54.7875px; top: 378px; height: 16px;"></div=
></div><div class=3D"cm-layer cm-selectionLayer" aria-hidden=3D"true" style=
=3D"z-index: -2;"></div></div></div></div></div> <div id=3D"plt-canvas-4286=
eacc-08f6-486b-aac8-1bd744e4ae34-17" class=3D"bg-gray-50 dark:bg-[#202123] =
dark:text-white max-w-full overflow-x-auto scrollbar-hidden"></div> </div><=
/div> <div class=3D"my-2 "></div><h4 dir=3D"auto" class=3D"svelte-121hp7c">=
<strong>Step 5: Configure Quartz Scheduler</strong> </h4><div><div class=3D=
"relative my-2 flex flex-col rounded-lg" dir=3D"ltr"><div class=3D"absolute=
 py-1.5 pl-4 text-xs font-medium text-text-300 dark:text-white">csharp</div=
> <div class=3D"sticky top-8 mb-1 py-1 pr-2.5 flex items-center justify-end=
 z-11 text-xs text-black dark:text-white"><div class=3D"flex items-center g=
ap-0.5 translate-y-[1px]"> <button class=3D"flex gap-1 items-center px-1.5 =
py-0.5 bg-gray-50 bg-none rounded-md border-none transition hover:bg-gray-1=
00 dark:bg-gray-850 dark:hover:bg-gray-800"><svg class=3D"size-3" stroke-wi=
dth=3D"1.5" fill=3D"currentColor" viewBox=3D"0 0 1024 1024" version=3D"1.1"=
 xmlns=3D"http://www.w3.org/2000/svg" width=3D"32" height=3D"32"><path d=3D=
"M853.333333 298.666667H170.666667c-25.6 0-42.666667-17.066667-42.666667-42=
.666667s17.066667-42.666667 42.666667-42.666667h682.666666c25.6 0 42.666667=
 17.066667 42.666667 42.666667s-17.066667 42.666667-42.666667 42.666667zM38=
4 810.666667H170.666667c-25.6 0-42.666667-17.066667-42.666667-42.666667s17.=
066667-42.666667 42.666667-42.666667h213.333333c25.6 0 42.666667 17.066667 =
42.666667 42.666667s-17.066667 42.666667-42.666667 42.666667z"></path><path=
 d=3D"M640 896c-12.8 0-21.333333-4.266667-29.866667-12.8l-85.333333-85.3333=
33-4.266667-4.266667c-4.266667-8.533333-8.533333-12.8-8.533333-21.333333v-8=
.533334c0-8.533333 4.266667-21.333333 12.8-25.6l85.333333-85.333333c17.0666=
67-17.066667 42.666667-17.066667 59.733334 0 17.066667 17.066667 17.066667 =
42.666667 0 59.733333l-12.8 12.8H725.333333c46.933333 0 85.333333-38.4 85.3=
33334-85.333333s-38.4-85.333333-85.333334-85.333333H170.666667c-25.6 0-42.6=
66667-17.066667-42.666667-42.666667s17.066667-42.666667 42.666667-42.666667=
h554.666666c93.866667 0 170.666667 76.8 170.666667 170.666667s-76.8 170.666=
667-170.666667 170.666667h-68.266666l12.8 12.8c17.066667 17.066667 17.06666=
7 42.666667 0 59.733333-8.533333 8.533333-17.066667 12.8-29.866667 12.8z"><=
/path></svg> <span>Line Wrapping</span></button> <button class=3D"flex gap-=
1 items-center px-1.5 py-0.5 bg-gray-50 bg-none rounded-md border-none tran=
sition hover:bg-gray-100 dark:bg-gray-850 dark:hover:bg-gray-800"><div><svg=
 xmlns=3D"http://www.w3.org/2000/svg" fill=3D"none" viewBox=3D"0 0 24 24" s=
troke-width=3D"1.5" stroke=3D"currentColor" class=3D"size-3"><path stroke-l=
inecap=3D"round" stroke-linejoin=3D"round" d=3D"M8.25 15 12 18.75 15.75 15m=
-7.5-6L12 5.25 15.75 9"></path></svg></div> <div>Collapse</div></button>  <=
button class=3D"px-1.5 py-0.5 bg-gray-50 bg-none rounded-md border-none tra=
nsition copy-code-button hover:bg-gray-100 dark:bg-gray-850 dark:hover:bg-g=
ray-800">Copy</button></div></div> <div class=3D"language-csharp rounded-t-=
lg -mt-8 rounded-b-lg overflow-hidden"><div class=3D"pt-7 bg-gray-50 dark:b=
g-gray-850"></div> <div id=3D"code-textarea-4286eacc-08f6-486b-aac8-1bd744e=
4ae34-20" class=3D"h-full w-full"><div class=3D"cm-editor =CD=BC1 =CD=BC3 =
=CD=BC4 =CD=BC5y =CD=BC3k"><div class=3D"cm-announced" aria-live=3D"polite"=
></div><div tabindex=3D"-1" class=3D"cm-scroller"><div class=3D"cm-gutters"=
 aria-hidden=3D"true" style=3D"min-height: 831.2px; position: sticky;"><div=
 class=3D"cm-gutter cm-lineNumbers"><div class=3D"cm-gutterElement" style=
=3D"height: 0px; visibility: hidden; pointer-events: none;">99</div><div cl=
ass=3D"cm-gutterElement" style=3D"height: 19.6px; margin-top: 4px;">1</div>=
<div class=3D"cm-gutterElement" style=3D"height: 19.6px;">2</div><div class=
=3D"cm-gutterElement" style=3D"height: 19.6px;">3</div><div class=3D"cm-gut=
terElement" style=3D"height: 19.6px;">4</div><div class=3D"cm-gutterElement=
" style=3D"height: 19.6px;">5</div><div class=3D"cm-gutterElement" style=3D=
"height: 19.6px;">6</div><div class=3D"cm-gutterElement" style=3D"height: 1=
9.6px;">7</div><div class=3D"cm-gutterElement" style=3D"height: 19.6px;">8<=
/div><div class=3D"cm-gutterElement" style=3D"height: 19.6px;">9</div><div =
class=3D"cm-gutterElement" style=3D"height: 19.6px;">10</div><div class=3D"=
cm-gutterElement" style=3D"height: 19.6px;">11</div><div class=3D"cm-gutter=
Element" style=3D"height: 19.6px;">12</div><div class=3D"cm-gutterElement" =
style=3D"height: 19.6px;">13</div><div class=3D"cm-gutterElement" style=3D"=
height: 19.6px;">14</div><div class=3D"cm-gutterElement" style=3D"height: 1=
9.6px;">15</div><div class=3D"cm-gutterElement" style=3D"height: 19.6px;">1=
6</div><div class=3D"cm-gutterElement" style=3D"height: 19.6px;">17</div><d=
iv class=3D"cm-gutterElement" style=3D"height: 19.6px;">18</div><div class=
=3D"cm-gutterElement" style=3D"height: 19.6px;">19</div><div class=3D"cm-gu=
tterElement" style=3D"height: 19.6px;">20</div><div class=3D"cm-gutterEleme=
nt" style=3D"height: 19.6px;">21</div><div class=3D"cm-gutterElement" style=
=3D"height: 19.6px;">22</div><div class=3D"cm-gutterElement" style=3D"heigh=
t: 19.6px;">23</div><div class=3D"cm-gutterElement" style=3D"height: 19.6px=
;">24</div><div class=3D"cm-gutterElement" style=3D"height: 19.6px;">25</di=
v><div class=3D"cm-gutterElement" style=3D"height: 19.6px;">26</div><div cl=
ass=3D"cm-gutterElement" style=3D"height: 19.6px;">27</div><div class=3D"cm=
-gutterElement" style=3D"height: 19.6px;">28</div><div class=3D"cm-gutterEl=
ement" style=3D"height: 19.6px;">29</div><div class=3D"cm-gutterElement" st=
yle=3D"height: 19.6px;">30</div><div class=3D"cm-gutterElement" style=3D"he=
ight: 19.6px;">31</div><div class=3D"cm-gutterElement" style=3D"height: 19.=
6px;">32</div><div class=3D"cm-gutterElement" style=3D"height: 19.6px;">33<=
/div><div class=3D"cm-gutterElement" style=3D"height: 19.6px;">34</div><div=
 class=3D"cm-gutterElement" style=3D"height: 19.6px;">35</div><div class=3D=
"cm-gutterElement" style=3D"height: 19.6px;">36</div><div class=3D"cm-gutte=
rElement" style=3D"height: 19.6px;">37</div><div class=3D"cm-gutterElement"=
 style=3D"height: 19.6px;">38</div><div class=3D"cm-gutterElement" style=3D=
"height: 19.6px;">39</div><div class=3D"cm-gutterElement" style=3D"height: =
19.6px;">40</div><div class=3D"cm-gutterElement" style=3D"height: 19.6px;">=
41</div><div class=3D"cm-gutterElement cm-activeLineGutter" style=3D"height=
: 19.6px;">42</div></div><div class=3D"cm-gutter cm-foldGutter"><div class=
=3D"cm-gutterElement" style=3D"height: 0px; visibility: hidden; pointer-eve=
nts: none;"><span title=3D"Unfold line">=E2=80=BA</span></div><div class=3D=
"cm-gutterElement cm-activeLineGutter" style=3D"height: 19.6px; margin-top:=
 807.6px;"></div></div></div><div spellcheck=3D"false" autocorrect=3D"off" =
autocapitalize=3D"off" writingsuggestions=3D"false" translate=3D"no" conten=
teditable=3D"false" style=3D"tab-size: 4;" class=3D"cm-content cm-lineWrapp=
ing" role=3D"textbox" aria-multiline=3D"true" data-language=3D"csharp" aria=
-autocomplete=3D"list"><div class=3D"cm-line"><span class=3D"=CD=BC3o">usin=
g</span> Quartz;</div><div class=3D"cm-line"><span class=3D"=CD=BC3o">using=
</span> Quartz.Impl;</div><div class=3D"cm-line"><span class=3D"=CD=BC3o">u=
sing</span> Quartz.Spi;</div><div class=3D"cm-line"><br></div><div class=3D=
"cm-line"><span class=3D"=CD=BC3o">public</span> <span class=3D"=CD=BC3o">s=
tatic</span> <span class=3D"=CD=BC3o">class</span> QuartzConfig</div><div c=
lass=3D"cm-line"><span class=3D"cm-matchingBracket">{</span></div><div clas=
s=3D"cm-line">    <span class=3D"=CD=BC3o">public</span> <span class=3D"=CD=
=BC3o">static</span> IServiceCollection AddQuartzScheduler(<span class=3D"=
=CD=BC3o">this</span> IServiceCollection services)</div><div class=3D"cm-li=
ne">    {</div><div class=3D"cm-line">        services.AddQuartz(q <span cl=
ass=3D"=CD=BC3o">=3D&gt;</span></div><div class=3D"cm-line">        {</div>=
<div class=3D"cm-line">            <span class=3D"=CD=BC3l">// Daily Job (8=
:00 AM every day)</span></div><div class=3D"cm-line">            <span clas=
s=3D"=CD=BC3o">var</span> dailyJobKey <span class=3D"=CD=BC3o">=3D</span> <=
span class=3D"=CD=BC3o">new</span> JobKey(<span class=3D"=CD=BC3m">"daily-e=
mail-job"</span>);</div><div class=3D"cm-line">            q.AddJob<span cl=
ass=3D"=CD=BC3o">&lt;</span>EmailNotificationJob<span class=3D"=CD=BC3o">&g=
t;</span>(opts <span class=3D"=CD=BC3o">=3D&gt;</span> opts.WithIdentity(da=
ilyJobKey));</div><div class=3D"cm-line">            q.AddTrigger(opts <spa=
n class=3D"=CD=BC3o">=3D&gt;</span> opts</div><div class=3D"cm-line">      =
          .ForJob(dailyJobKey)</div><div class=3D"cm-line">                =
.WithIdentity(<span class=3D"=CD=BC3m">"daily-email-trigger"</span>)</div><=
div class=3D"cm-line">                .WithCronSchedule(<span class=3D"=CD=
=BC3m">"0 0 8 ? * *"</span>) <span class=3D"=CD=BC3l">// Cron for daily at =
8 AM</span></div><div class=3D"cm-line">                .UsingJobData(<span=
 class=3D"=CD=BC3m">"Type"</span>, <span class=3D"=CD=BC3m">"Daily"</span>)=
);</div><div class=3D"cm-line"><br></div><div class=3D"cm-line">           =
 <span class=3D"=CD=BC3l">// Weekly Job (Mondays at 9:00 AM)</span></div><d=
iv class=3D"cm-line">            <span class=3D"=CD=BC3o">var</span> weekly=
JobKey <span class=3D"=CD=BC3o">=3D</span> <span class=3D"=CD=BC3o">new</sp=
an> JobKey(<span class=3D"=CD=BC3m">"weekly-email-job"</span>);</div><div c=
lass=3D"cm-line">            q.AddJob<span class=3D"=CD=BC3o">&lt;</span>Em=
ailNotificationJob<span class=3D"=CD=BC3o">&gt;</span>(opts <span class=3D"=
=CD=BC3o">=3D&gt;</span> opts.WithIdentity(weeklyJobKey));</div><div class=
=3D"cm-line">            q.AddTrigger(opts <span class=3D"=CD=BC3o">=3D&gt;=
</span> opts</div><div class=3D"cm-line">                .ForJob(weeklyJobK=
ey)</div><div class=3D"cm-line">                .WithIdentity(<span class=
=3D"=CD=BC3m">"weekly-email-trigger"</span>)</div><div class=3D"cm-line">  =
              .WithCronSchedule(<span class=3D"=CD=BC3m">"0 0 9 ? * MON"</s=
pan>) <span class=3D"=CD=BC3l">// Cron for weekly on Monday</span></div><di=
v class=3D"cm-line">                .UsingJobData(<span class=3D"=CD=BC3m">=
"Type"</span>, <span class=3D"=CD=BC3m">"Weekly"</span>));</div><div class=
=3D"cm-line"><br></div><div class=3D"cm-line">            <span class=3D"=
=CD=BC3l">// Yearly Job (January 1st at 10:00 AM)</span></div><div class=3D=
"cm-line">            <span class=3D"=CD=BC3o">var</span> yearlyJobKey <spa=
n class=3D"=CD=BC3o">=3D</span> <span class=3D"=CD=BC3o">new</span> JobKey(=
<span class=3D"=CD=BC3m">"yearly-email-job"</span>);</div><div class=3D"cm-=
line">            q.AddJob<span class=3D"=CD=BC3o">&lt;</span>EmailNotifica=
tionJob<span class=3D"=CD=BC3o">&gt;</span>(opts <span class=3D"=CD=BC3o">=
=3D&gt;</span> opts.WithIdentity(yearlyJobKey));</div><div class=3D"cm-line=
">            q.AddTrigger(opts <span class=3D"=CD=BC3o">=3D&gt;</span> opt=
s</div><div class=3D"cm-line">                .ForJob(yearlyJobKey)</div><d=
iv class=3D"cm-line">                .WithIdentity(<span class=3D"=CD=BC3m"=
>"yearly-email-trigger"</span>)</div><div class=3D"cm-line">               =
 .WithCronSchedule(<span class=3D"=CD=BC3m">"0 0 10 1 1 ?"</span>) <span cl=
ass=3D"=CD=BC3l">// Cron for yearly on Jan 1</span></div><div class=3D"cm-l=
ine">                .UsingJobData(<span class=3D"=CD=BC3m">"Type"</span>, =
<span class=3D"=CD=BC3m">"Yearly"</span>));</div><div class=3D"cm-line">   =
     });</div><div class=3D"cm-line"><br></div><div class=3D"cm-line">     =
   services.AddQuartzHostedService(q <span class=3D"=CD=BC3o">=3D&gt;</span=
> q.WaitForJobsToComplete <span class=3D"=CD=BC3o">=3D</span> <span class=
=3D"=CD=BC3o">true</span>);</div><div class=3D"cm-line">        <span class=
=3D"=CD=BC3o">return</span> services;</div><div class=3D"cm-line">    }</di=
v><div class=3D"cm-activeLine cm-line"><span class=3D"cm-matchingBracket">}=
</span></div></div><div class=3D"cm-layer cm-layer-above cm-cursorLayer" ar=
ia-hidden=3D"true" style=3D"z-index: 150; animation-duration: 1200ms; anima=
tion-name: cm-blink;"><div class=3D"cm-cursor cm-cursor-primary" style=3D"l=
eft: 54.7875px; top: 809.2px; height: 16px;"></div></div><div class=3D"cm-l=
ayer cm-selectionLayer" aria-hidden=3D"true" style=3D"z-index: -2;"></div><=
/div></div></div></div> <div id=3D"plt-canvas-4286eacc-08f6-486b-aac8-1bd74=
4e4ae34-20" class=3D"bg-gray-50 dark:bg-[#202123] dark:text-white max-w-ful=
l overflow-x-auto scrollbar-hidden"></div> </div></div> <div class=3D"my-2 =
"></div><h4 dir=3D"auto" class=3D"svelte-121hp7c"><strong>Step 6: Register =
Services in <code class=3D"cursor-pointer codespan">Program.cs</code></stro=
ng> </h4><div><div class=3D"relative my-2 flex flex-col rounded-lg" dir=3D"=
ltr"><div class=3D"absolute py-1.5 pl-4 text-xs font-medium text-text-300 d=
ark:text-white">csharp</div> <div class=3D"sticky top-8 mb-1 py-1 pr-2.5 fl=
ex items-center justify-end z-11 text-xs text-black dark:text-white"><div c=
lass=3D"flex items-center gap-0.5 translate-y-[1px]"> <button class=3D"flex=
 gap-1 items-center px-1.5 py-0.5 bg-gray-50 bg-none rounded-md border-none=
 transition hover:bg-gray-100 dark:bg-gray-850 dark:hover:bg-gray-800"><svg=
 class=3D"size-3" stroke-width=3D"1.5" fill=3D"currentColor" viewBox=3D"0 0=
 1024 1024" version=3D"1.1" xmlns=3D"http://www.w3.org/2000/svg" width=3D"3=
2" height=3D"32"><path d=3D"M853.333333 298.666667H170.666667c-25.6 0-42.66=
6667-17.066667-42.666667-42.666667s17.066667-42.666667 42.666667-42.666667h=
682.666666c25.6 0 42.666667 17.066667 42.666667 42.666667s-17.066667 42.666=
667-42.666667 42.666667zM384 810.666667H170.666667c-25.6 0-42.666667-17.066=
667-42.666667-42.666667s17.066667-42.666667 42.666667-42.666667h213.333333c=
25.6 0 42.666667 17.066667 42.666667 42.666667s-17.066667 42.666667-42.6666=
67 42.666667z"></path><path d=3D"M640 896c-12.8 0-21.333333-4.266667-29.866=
667-12.8l-85.333333-85.333333-4.266667-4.266667c-4.266667-8.533333-8.533333=
-12.8-8.533333-21.333333v-8.533334c0-8.533333 4.266667-21.333333 12.8-25.6l=
85.333333-85.333333c17.066667-17.066667 42.666667-17.066667 59.733334 0 17.=
066667 17.066667 17.066667 42.666667 0 59.733333l-12.8 12.8H725.333333c46.9=
33333 0 85.333333-38.4 85.333334-85.333333s-38.4-85.333333-85.333334-85.333=
333H170.666667c-25.6 0-42.666667-17.066667-42.666667-42.666667s17.066667-42=
.666667 42.666667-42.666667h554.666666c93.866667 0 170.666667 76.8 170.6666=
67 170.666667s-76.8 170.666667-170.666667 170.666667h-68.266666l12.8 12.8c1=
7.066667 17.066667 17.066667 42.666667 0 59.733333-8.533333 8.533333-17.066=
667 12.8-29.866667 12.8z"></path></svg> <span>Line Wrapping</span></button>=
 <button class=3D"flex gap-1 items-center px-1.5 py-0.5 bg-gray-50 bg-none =
rounded-md border-none transition hover:bg-gray-100 dark:bg-gray-850 dark:h=
over:bg-gray-800"><div><svg xmlns=3D"http://www.w3.org/2000/svg" fill=3D"no=
ne" viewBox=3D"0 0 24 24" stroke-width=3D"1.5" stroke=3D"currentColor" clas=
s=3D"size-3"><path stroke-linecap=3D"round" stroke-linejoin=3D"round" d=3D"=
M8.25 15 12 18.75 15.75 15m-7.5-6L12 5.25 15.75 9"></path></svg></div> <div=
>Collapse</div></button>  <button class=3D"px-1.5 py-0.5 bg-gray-50 bg-none=
 rounded-md border-none transition copy-code-button hover:bg-gray-100 dark:=
bg-gray-850 dark:hover:bg-gray-800">Copy</button></div></div> <div class=3D=
"language-csharp rounded-t-lg -mt-8 rounded-b-lg overflow-hidden"><div clas=
s=3D"pt-7 bg-gray-50 dark:bg-gray-850"></div> <div id=3D"code-textarea-4286=
eacc-08f6-486b-aac8-1bd744e4ae34-23" class=3D"h-full w-full"><div class=3D"=
cm-editor =CD=BC1 =CD=BC3 =CD=BC4 =CD=BC5z =CD=BC3k"><div class=3D"cm-annou=
nced" aria-live=3D"polite"></div><div tabindex=3D"-1" class=3D"cm-scroller"=
><div class=3D"cm-gutters" aria-hidden=3D"true" style=3D"min-height: 164.8p=
x; position: sticky;"><div class=3D"cm-gutter cm-lineNumbers"><div class=3D=
"cm-gutterElement" style=3D"height: 0px; visibility: hidden; pointer-events=
: none;">9</div><div class=3D"cm-gutterElement" style=3D"height: 19.6px; ma=
rgin-top: 4px;">1</div><div class=3D"cm-gutterElement" style=3D"height: 19.=
6px;">2</div><div class=3D"cm-gutterElement" style=3D"height: 19.6px;">3</d=
iv><div class=3D"cm-gutterElement" style=3D"height: 19.6px;">4</div><div cl=
ass=3D"cm-gutterElement" style=3D"height: 19.6px;">5</div><div class=3D"cm-=
gutterElement" style=3D"height: 19.6px;">6</div><div class=3D"cm-gutterElem=
ent" style=3D"height: 19.6px;">7</div><div class=3D"cm-gutterElement cm-act=
iveLineGutter" style=3D"height: 19.6px;">8</div></div><div class=3D"cm-gutt=
er cm-foldGutter"><div class=3D"cm-gutterElement" style=3D"height: 0px; vis=
ibility: hidden; pointer-events: none;"><span title=3D"Unfold line">=E2=80=
=BA</span></div><div class=3D"cm-gutterElement cm-activeLineGutter" style=
=3D"height: 19.6px; margin-top: 141.2px;"></div></div></div><div spellcheck=
=3D"false" autocorrect=3D"off" autocapitalize=3D"off" writingsuggestions=3D=
"false" translate=3D"no" contenteditable=3D"false" style=3D"tab-size: 4;" c=
lass=3D"cm-content cm-lineWrapping" role=3D"textbox" aria-multiline=3D"true=
" data-language=3D"csharp" aria-autocomplete=3D"list"><div class=3D"cm-line=
"><span class=3D"=CD=BC3o">var</span> builder <span class=3D"=CD=BC3o">=3D<=
/span> WebApplication.CreateBuilder(args);</div><div class=3D"cm-line"><br>=
</div><div class=3D"cm-line"><span class=3D"=CD=BC3l">// Add services</span=
></div><div class=3D"cm-line">builder.Services.AddSingleton<span class=3D"=
=CD=BC3o">&lt;</span>IEmailService, EmailService<span class=3D"=CD=BC3o">&g=
t;</span>();</div><div class=3D"cm-line">builder.Services.AddQuartzSchedule=
r();</div><div class=3D"cm-line"><br></div><div class=3D"cm-line"><span cla=
ss=3D"=CD=BC3o">var</span> app <span class=3D"=CD=BC3o">=3D</span> builder.=
Build();</div><div class=3D"cm-activeLine cm-line">app.Run();</div></div><d=
iv class=3D"cm-layer cm-layer-above cm-cursorLayer" aria-hidden=3D"true" st=
yle=3D"z-index: 150; animation-duration: 1200ms; animation-name: cm-blink2;=
"><div class=3D"cm-cursor cm-cursor-primary" style=3D"left: 116.363px; top:=
 142.8px; height: 16px;"></div></div><div class=3D"cm-layer cm-selectionLay=
er" aria-hidden=3D"true" style=3D"z-index: -2;"></div></div></div></div></d=
iv> <div id=3D"plt-canvas-4286eacc-08f6-486b-aac8-1bd744e4ae34-23" class=3D=
"bg-gray-50 dark:bg-[#202123] dark:text-white max-w-full overflow-x-auto sc=
rollbar-hidden"></div> </div></div> <div class=3D"my-2 "></div><hr class=3D=
"border-gray-100 dark:border-gray-850"><h3 dir=3D"auto" class=3D"svelte-121=
hp7c"><strong>Approach 2: Using Hangfire</strong> </h3><p dir=3D"auto" clas=
s=3D"svelte-121hp7c">Hangfire is simpler for basic recurring tasks and incl=
udes a dashboard. </p><div class=3D"my-2 "></div><h4 dir=3D"auto" class=3D"=
svelte-121hp7c"><strong>Step 1: Install Packages</strong> </h4><div><div cl=
ass=3D"relative my-2 flex flex-col rounded-lg" dir=3D"ltr"><div class=3D"ab=
solute py-1.5 pl-4 text-xs font-medium text-text-300 dark:text-white">bash<=
/div> <div class=3D"sticky top-8 mb-1 py-1 pr-2.5 flex items-center justify=
-end z-11 text-xs text-black dark:text-white"><div class=3D"flex items-cent=
er gap-0.5 translate-y-[1px]"> <button class=3D"flex gap-1 items-center px-=
1.5 py-0.5 bg-gray-50 bg-none rounded-md border-none transition hover:bg-gr=
ay-100 dark:bg-gray-850 dark:hover:bg-gray-800"><svg class=3D"size-3" strok=
e-width=3D"1.5" fill=3D"currentColor" viewBox=3D"0 0 1024 1024" version=3D"=
1.1" xmlns=3D"http://www.w3.org/2000/svg" width=3D"32" height=3D"32"><path =
d=3D"M853.333333 298.666667H170.666667c-25.6 0-42.666667-17.066667-42.66666=
7-42.666667s17.066667-42.666667 42.666667-42.666667h682.666666c25.6 0 42.66=
6667 17.066667 42.666667 42.666667s-17.066667 42.666667-42.666667 42.666667=
zM384 810.666667H170.666667c-25.6 0-42.666667-17.066667-42.666667-42.666667=
s17.066667-42.666667 42.666667-42.666667h213.333333c25.6 0 42.666667 17.066=
667 42.666667 42.666667s-17.066667 42.666667-42.666667 42.666667z"></path><=
path d=3D"M640 896c-12.8 0-21.333333-4.266667-29.866667-12.8l-85.333333-85.=
333333-4.266667-4.266667c-4.266667-8.533333-8.533333-12.8-8.533333-21.33333=
3v-8.533334c0-8.533333 4.266667-21.333333 12.8-25.6l85.333333-85.333333c17.=
066667-17.066667 42.666667-17.066667 59.733334 0 17.066667 17.066667 17.066=
667 42.666667 0 59.733333l-12.8 12.8H725.333333c46.933333 0 85.333333-38.4 =
85.333334-85.333333s-38.4-85.333333-85.333334-85.333333H170.666667c-25.6 0-=
42.666667-17.066667-42.666667-42.666667s17.066667-42.666667 42.666667-42.66=
6667h554.666666c93.866667 0 170.666667 76.8 170.666667 170.666667s-76.8 170=
.666667-170.666667 170.666667h-68.266666l12.8 12.8c17.066667 17.066667 17.0=
66667 42.666667 0 59.733333-8.533333 8.533333-17.066667 12.8-29.866667 12.8=
z"></path></svg> <span>Line Wrapping</span></button> <button class=3D"flex =
gap-1 items-center px-1.5 py-0.5 bg-gray-50 bg-none rounded-md border-none =
transition hover:bg-gray-100 dark:bg-gray-850 dark:hover:bg-gray-800"><div>=
<svg xmlns=3D"http://www.w3.org/2000/svg" fill=3D"none" viewBox=3D"0 0 24 2=
4" stroke-width=3D"1.5" stroke=3D"currentColor" class=3D"size-3"><path stro=
ke-linecap=3D"round" stroke-linejoin=3D"round" d=3D"M8.25 15 12 18.75 15.75=
 15m-7.5-6L12 5.25 15.75 9"></path></svg></div> <div>Collapse</div></button=
>  <button class=3D"px-1.5 py-0.5 bg-gray-50 bg-none rounded-md border-none=
 transition copy-code-button hover:bg-gray-100 dark:bg-gray-850 dark:hover:=
bg-gray-800">Copy</button></div></div> <div class=3D"language-bash rounded-=
t-lg -mt-8 rounded-b-lg overflow-hidden"><div class=3D"pt-7 bg-gray-50 dark=
:bg-gray-850"></div> <div id=3D"code-textarea-4286eacc-08f6-486b-aac8-1bd74=
4e4ae34-30" class=3D"h-full w-full"><div class=3D"cm-editor =CD=BC1 =CD=BC3=
 =CD=BC4 =CD=BC60 =CD=BC3k"><div class=3D"cm-announced" aria-live=3D"polite=
"></div><div tabindex=3D"-1" class=3D"cm-scroller"><div class=3D"cm-gutters=
" aria-hidden=3D"true" style=3D"min-height: 66.8px; position: sticky;"><div=
 class=3D"cm-gutter cm-lineNumbers"><div class=3D"cm-gutterElement" style=
=3D"height: 0px; visibility: hidden; pointer-events: none;">9</div><div cla=
ss=3D"cm-gutterElement" style=3D"height: 19.6px; margin-top: 4px;">1</div><=
div class=3D"cm-gutterElement" style=3D"height: 19.6px;">2</div><div class=
=3D"cm-gutterElement cm-activeLineGutter" style=3D"height: 19.6px;">3</div>=
</div><div class=3D"cm-gutter cm-foldGutter"><div class=3D"cm-gutterElement=
" style=3D"height: 0px; visibility: hidden; pointer-events: none;"><span ti=
tle=3D"Unfold line">=E2=80=BA</span></div><div class=3D"cm-gutterElement cm=
-activeLineGutter" style=3D"height: 19.6px; margin-top: 43.2px;"></div></di=
v></div><div spellcheck=3D"false" autocorrect=3D"off" autocapitalize=3D"off=
" writingsuggestions=3D"false" translate=3D"no" contenteditable=3D"false" s=
tyle=3D"tab-size: 4;" class=3D"cm-content cm-lineWrapping" role=3D"textbox"=
 aria-multiline=3D"true" data-language=3D"shell" aria-autocomplete=3D"list"=
><div class=3D"cm-line">Install-Package Hangfire.AspNetCore</div><div class=
=3D"cm-line">Install-Package Hangfire.MemoryStorage (or Hangfire.SqlServer =
<span class=3D"=CD=BC3o">for</span> persistence)</div><div class=3D"cm-acti=
veLine cm-line">Install-Package MailKit</div></div><div class=3D"cm-layer c=
m-layer-above cm-cursorLayer" aria-hidden=3D"true" style=3D"z-index: 150; a=
nimation-duration: 1200ms; animation-name: cm-blink2;"><div class=3D"cm-cur=
sor cm-cursor-primary" style=3D"left: 216.425px; top: 44.8px; height: 16px;=
"></div></div><div class=3D"cm-layer cm-selectionLayer" aria-hidden=3D"true=
" style=3D"z-index: -2;"></div></div></div></div></div> <div id=3D"plt-canv=
as-4286eacc-08f6-486b-aac8-1bd744e4ae34-30" class=3D"bg-gray-50 dark:bg-[#2=
02123] dark:text-white max-w-full overflow-x-auto scrollbar-hidden"></div> =
</div></div> <div class=3D"my-2 "></div><h4 dir=3D"auto" class=3D"svelte-12=
1hp7c"><strong>Step 2: Configure Hangfire in <code class=3D"cursor-pointer =
codespan">Program.cs</code></strong> </h4><div><div class=3D"relative my-2 =
flex flex-col rounded-lg" dir=3D"ltr"><div class=3D"absolute py-1.5 pl-4 te=
xt-xs font-medium text-text-300 dark:text-white">csharp</div> <div class=3D=
"sticky top-8 mb-1 py-1 pr-2.5 flex items-center justify-end z-11 text-xs t=
ext-black dark:text-white"><div class=3D"flex items-center gap-0.5 translat=
e-y-[1px]"> <button class=3D"flex gap-1 items-center px-1.5 py-0.5 bg-gray-=
50 bg-none rounded-md border-none transition hover:bg-gray-100 dark:bg-gray=
-850 dark:hover:bg-gray-800"><svg class=3D"size-3" stroke-width=3D"1.5" fil=
l=3D"currentColor" viewBox=3D"0 0 1024 1024" version=3D"1.1" xmlns=3D"http:=
//www.w3.org/2000/svg" width=3D"32" height=3D"32"><path d=3D"M853.333333 29=
8.666667H170.666667c-25.6 0-42.666667-17.066667-42.666667-42.666667s17.0666=
67-42.666667 42.666667-42.666667h682.666666c25.6 0 42.666667 17.066667 42.6=
66667 42.666667s-17.066667 42.666667-42.666667 42.666667zM384 810.666667H17=
0.666667c-25.6 0-42.666667-17.066667-42.666667-42.666667s17.066667-42.66666=
7 42.666667-42.666667h213.333333c25.6 0 42.666667 17.066667 42.666667 42.66=
6667s-17.066667 42.666667-42.666667 42.666667z"></path><path d=3D"M640 896c=
-12.8 0-21.333333-4.266667-29.866667-12.8l-85.333333-85.333333-4.266667-4.2=
66667c-4.266667-8.533333-8.533333-12.8-8.533333-21.333333v-8.533334c0-8.533=
333 4.266667-21.333333 12.8-25.6l85.333333-85.333333c17.066667-17.066667 42=
.666667-17.066667 59.733334 0 17.066667 17.066667 17.066667 42.666667 0 59.=
733333l-12.8 12.8H725.333333c46.933333 0 85.333333-38.4 85.333334-85.333333=
s-38.4-85.333333-85.333334-85.333333H170.666667c-25.6 0-42.666667-17.066667=
-42.666667-42.666667s17.066667-42.666667 42.666667-42.666667h554.666666c93.=
866667 0 170.666667 76.8 170.666667 170.666667s-76.8 170.666667-170.666667 =
170.666667h-68.266666l12.8 12.8c17.066667 17.066667 17.066667 42.666667 0 5=
9.733333-8.533333 8.533333-17.066667 12.8-29.866667 12.8z"></path></svg> <s=
pan>Line Wrapping</span></button> <button class=3D"flex gap-1 items-center =
px-1.5 py-0.5 bg-gray-50 bg-none rounded-md border-none transition hover:bg=
-gray-100 dark:bg-gray-850 dark:hover:bg-gray-800"><div><svg xmlns=3D"http:=
//www.w3.org/2000/svg" fill=3D"none" viewBox=3D"0 0 24 24" stroke-width=3D"=
1.5" stroke=3D"currentColor" class=3D"size-3"><path stroke-linecap=3D"round=
" stroke-linejoin=3D"round" d=3D"M8.25 15 12 18.75 15.75 15m-7.5-6L12 5.25 =
15.75 9"></path></svg></div> <div>Collapse</div></button>  <button class=3D=
"px-1.5 py-0.5 bg-gray-50 bg-none rounded-md border-none transition copy-co=
de-button hover:bg-gray-100 dark:bg-gray-850 dark:hover:bg-gray-800">Copy</=
button></div></div> <div class=3D"language-csharp rounded-t-lg -mt-8 rounde=
d-b-lg overflow-hidden"><div class=3D"pt-7 bg-gray-50 dark:bg-gray-850"></d=
iv> <div id=3D"code-textarea-4286eacc-08f6-486b-aac8-1bd744e4ae34-33" class=
=3D"h-full w-full"><div class=3D"cm-editor =CD=BC1 =CD=BC3 =CD=BC4 =CD=BC61=
 =CD=BC3k"><div class=3D"cm-announced" aria-live=3D"polite"></div><div tabi=
ndex=3D"-1" class=3D"cm-scroller"><div class=3D"cm-gutters" aria-hidden=3D"=
true" style=3D"min-height: 713.6px; position: sticky;"><div class=3D"cm-gut=
ter cm-lineNumbers"><div class=3D"cm-gutterElement" style=3D"height: 0px; v=
isibility: hidden; pointer-events: none;">99</div><div class=3D"cm-gutterEl=
ement" style=3D"height: 19.6px; margin-top: 4px;">1</div><div class=3D"cm-g=
utterElement" style=3D"height: 19.6px;">2</div><div class=3D"cm-gutterEleme=
nt" style=3D"height: 19.6px;">3</div><div class=3D"cm-gutterElement" style=
=3D"height: 19.6px;">4</div><div class=3D"cm-gutterElement" style=3D"height=
: 19.6px;">5</div><div class=3D"cm-gutterElement" style=3D"height: 19.6px;"=
>6</div><div class=3D"cm-gutterElement" style=3D"height: 19.6px;">7</div><d=
iv class=3D"cm-gutterElement" style=3D"height: 19.6px;">8</div><div class=
=3D"cm-gutterElement" style=3D"height: 19.6px;">9</div><div class=3D"cm-gut=
terElement" style=3D"height: 19.6px;">10</div><div class=3D"cm-gutterElemen=
t" style=3D"height: 19.6px;">11</div><div class=3D"cm-gutterElement" style=
=3D"height: 19.6px;">12</div><div class=3D"cm-gutterElement" style=3D"heigh=
t: 19.6px;">13</div><div class=3D"cm-gutterElement" style=3D"height: 19.6px=
;">14</div><div class=3D"cm-gutterElement" style=3D"height: 19.6px;">15</di=
v><div class=3D"cm-gutterElement" style=3D"height: 19.6px;">16</div><div cl=
ass=3D"cm-gutterElement" style=3D"height: 19.6px;">17</div><div class=3D"cm=
-gutterElement" style=3D"height: 19.6px;">18</div><div class=3D"cm-gutterEl=
ement" style=3D"height: 19.6px;">19</div><div class=3D"cm-gutterElement" st=
yle=3D"height: 19.6px;">20</div><div class=3D"cm-gutterElement" style=3D"he=
ight: 19.6px;">21</div><div class=3D"cm-gutterElement" style=3D"height: 19.=
6px;">22</div><div class=3D"cm-gutterElement" style=3D"height: 19.6px;">23<=
/div><div class=3D"cm-gutterElement" style=3D"height: 19.6px;">24</div><div=
 class=3D"cm-gutterElement" style=3D"height: 19.6px;">25</div><div class=3D=
"cm-gutterElement" style=3D"height: 19.6px;">26</div><div class=3D"cm-gutte=
rElement" style=3D"height: 19.6px;">27</div><div class=3D"cm-gutterElement"=
 style=3D"height: 19.6px;">28</div><div class=3D"cm-gutterElement" style=3D=
"height: 19.6px;">29</div><div class=3D"cm-gutterElement" style=3D"height: =
19.6px;">30</div><div class=3D"cm-gutterElement" style=3D"height: 19.6px;">=
31</div><div class=3D"cm-gutterElement" style=3D"height: 19.6px;">32</div><=
div class=3D"cm-gutterElement" style=3D"height: 19.6px;">33</div><div class=
=3D"cm-gutterElement" style=3D"height: 19.6px;">34</div><div class=3D"cm-gu=
tterElement" style=3D"height: 19.6px;">35</div><div class=3D"cm-gutterEleme=
nt cm-activeLineGutter" style=3D"height: 19.6px;">36</div></div><div class=
=3D"cm-gutter cm-foldGutter"><div class=3D"cm-gutterElement" style=3D"heigh=
t: 0px; visibility: hidden; pointer-events: none;"><span title=3D"Unfold li=
ne">=E2=80=BA</span></div><div class=3D"cm-gutterElement cm-activeLineGutte=
r" style=3D"height: 19.6px; margin-top: 690px;"></div></div></div><div spel=
lcheck=3D"false" autocorrect=3D"off" autocapitalize=3D"off" writingsuggesti=
ons=3D"false" translate=3D"no" contenteditable=3D"false" style=3D"tab-size:=
 4;" class=3D"cm-content cm-lineWrapping" role=3D"textbox" aria-multiline=
=3D"true" data-language=3D"csharp" aria-autocomplete=3D"list"><div class=3D=
"cm-line"><span class=3D"=CD=BC3o">var</span> builder <span class=3D"=CD=BC=
3o">=3D</span> WebApplication.CreateBuilder(args);</div><div class=3D"cm-li=
ne"><br></div><div class=3D"cm-line"><span class=3D"=CD=BC3l">// Add Hangfi=
re</span></div><div class=3D"cm-line">builder.Services.AddHangfire(config <=
span class=3D"=CD=BC3o">=3D&gt;</span> config</div><div class=3D"cm-line"> =
   .SetDataCompatibilityLevel(CompatibilityLevel.Version_170)</div><div cla=
ss=3D"cm-line">    .UseSimpleAssemblyNameTypeSerializer()</div><div class=
=3D"cm-line">    .UseRecommendedSerializerSettings()</div><div class=3D"cm-=
line">    .UseMemoryStorage()); <span class=3D"=CD=BC3l">// Replace with .U=
seSqlServerStorage() for production</span></div><div class=3D"cm-line"><br>=
</div><div class=3D"cm-line">builder.Services.AddHangfireServer();</div><di=
v class=3D"cm-line"><br></div><div class=3D"cm-line"><span class=3D"=CD=BC3=
l">// Add Email Service</span></div><div class=3D"cm-line">builder.Services=
.AddSingleton<span class=3D"=CD=BC3o">&lt;</span>IEmailService, EmailServic=
e<span class=3D"=CD=BC3o">&gt;</span>();</div><div class=3D"cm-line"><br></=
div><div class=3D"cm-line"><span class=3D"=CD=BC3o">var</span> app <span cl=
ass=3D"=CD=BC3o">=3D</span> builder.Build();</div><div class=3D"cm-line"><b=
r></div><div class=3D"cm-line">app.UseHangfireDashboard(); <span class=3D"=
=CD=BC3l">// Access at /hangfire</span></div><div class=3D"cm-line"><br></d=
iv><div class=3D"cm-line"><span class=3D"=CD=BC3l">// Schedule recurring jo=
bs</span></div><div class=3D"cm-line"><span class=3D"=CD=BC3o">var</span> r=
ecurringJobManager <span class=3D"=CD=BC3o">=3D</span> app.Services.GetRequ=
iredService<span class=3D"=CD=BC3o">&lt;</span>IRecurringJobManager<span cl=
ass=3D"=CD=BC3o">&gt;</span>();</div><div class=3D"cm-line">recurringJobMan=
ager.AddOrUpdate<span class=3D"=CD=BC3o">&lt;</span>IEmailService<span clas=
s=3D"=CD=BC3o">&gt;</span>(</div><div class=3D"cm-line">    <span class=3D"=
=CD=BC3m">"daily-email"</span>,</div><div class=3D"cm-line">    service <sp=
an class=3D"=CD=BC3o">=3D&gt;</span> service.SendEmailAsync(<span class=3D"=
=CD=BC3m">"Daily Notification"</span>, <span class=3D"=CD=BC3m">"Daily cont=
ent"</span>),</div><div class=3D"cm-line">    Cron.Daily); <span class=3D"=
=CD=BC3l">// Runs daily at midnight</span></div><div class=3D"cm-line"><br>=
</div><div class=3D"cm-line">recurringJobManager.AddOrUpdate<span class=3D"=
=CD=BC3o">&lt;</span>IEmailService<span class=3D"=CD=BC3o">&gt;</span>(</di=
v><div class=3D"cm-line">    <span class=3D"=CD=BC3m">"weekly-email"</span>=
,</div><div class=3D"cm-line">    service <span class=3D"=CD=BC3o">=3D&gt;<=
/span> service.SendEmailAsync(<span class=3D"=CD=BC3m">"Weekly Notification=
"</span>, <span class=3D"=CD=BC3m">"Weekly content"</span>),</div><div clas=
s=3D"cm-line">    Cron.Weekly); <span class=3D"=CD=BC3l">// Runs weekly on =
Sunday at midnight</span></div><div class=3D"cm-line"><br></div><div class=
=3D"cm-line">recurringJobManager.AddOrUpdate<span class=3D"=CD=BC3o">&lt;</=
span>IEmailService<span class=3D"=CD=BC3o">&gt;</span>(</div><div class=3D"=
cm-line">    <span class=3D"=CD=BC3m">"yearly-email"</span>,</div><div clas=
s=3D"cm-line">    service <span class=3D"=CD=BC3o">=3D&gt;</span> service.S=
endEmailAsync(<span class=3D"=CD=BC3m">"Yearly Notification"</span>, <span =
class=3D"=CD=BC3m">"Yearly content"</span>),</div><div class=3D"cm-line">  =
  Cron.Yearly); <span class=3D"=CD=BC3l">// Runs yearly on January 1 at mid=
night</span></div><div class=3D"cm-line"><br></div><div class=3D"cm-activeL=
ine cm-line">app.Run();</div></div><div class=3D"cm-layer cm-layer-above cm=
-cursorLayer" aria-hidden=3D"true" style=3D"z-index: 150; animation-duratio=
n: 1200ms; animation-name: cm-blink;"><div class=3D"cm-cursor cm-cursor-pri=
mary" style=3D"left: 124.062px; top: 691.6px; height: 16px;"></div></div><d=
iv class=3D"cm-layer cm-selectionLayer" aria-hidden=3D"true" style=3D"z-ind=
ex: -2;"></div></div></div></div></div> <div id=3D"plt-canvas-4286eacc-08f6=
-486b-aac8-1bd744e4ae34-33" class=3D"bg-gray-50 dark:bg-[#202123] dark:text=
-white max-w-full overflow-x-auto scrollbar-hidden"></div> </div></div> <di=
v class=3D"my-2 "></div><hr class=3D"border-gray-100 dark:border-gray-850">=
<h3 dir=3D"auto" class=3D"svelte-121hp7c"><strong>Key Notes</strong> </h3><=
ol start=3D"1" dir=3D"auto"><li class=3D"text-start"> <p class=3D"svelte-12=
1hp7c"><strong>Cron Expressions</strong>: </p><ul dir=3D"auto"><li class=3D=
"text-start"> <strong>Daily</strong>: <code class=3D"cursor-pointer codespa=
n">0 0 8 ? * *</code> (8:00 AM daily)</li><li class=3D"text-start"> <strong=
>Weekly</strong>: <code class=3D"cursor-pointer codespan">0 0 9 ? * MON</co=
de> (9:00 AM every Monday)</li><li class=3D"text-start"> <strong>Yearly</st=
rong>: <code class=3D"cursor-pointer codespan">0 0 10 1 1 ?</code> (10:00 A=
M every January 1)</li> </ul></li><li class=3D"text-start"> <p class=3D"sve=
lte-121hp7c"><strong>Email Libraries</strong>: </p><ul dir=3D"auto"><li cla=
ss=3D"text-start"> Use <strong>MailKit</strong> instead of <code class=3D"c=
ursor-pointer codespan">System.Net.Mail</code> for better security and mode=
rn features.</li> </ul></li><li class=3D"text-start"> <p class=3D"svelte-12=
1hp7c"><strong>Persistence</strong>: </p><ul dir=3D"auto"><li class=3D"text=
-start"> <strong>Quartz.NET</strong>: Use <code class=3D"cursor-pointer cod=
espan">AdoJobStore</code> (SQL Server, SQLite) for job persistence.</li><li=
 class=3D"text-start"> <strong>Hangfire</strong>: Use SQL Server, Redis, or=
 other storage for production.</li> </ul></li><li class=3D"text-start"> <p =
class=3D"svelte-121hp7c"><strong>Security</strong>: </p><ul dir=3D"auto"><l=
i class=3D"text-start"> Store SMTP credentials in <strong>Azure Key Vault</=
strong>, <strong>User Secrets</strong>, or environment variables.</li><li c=
lass=3D"text-start"> Use <strong>OAuth</strong> for email services (e.g., S=
endGrid, Gmail).</li> </ul></li><li class=3D"text-start"> <p class=3D"svelt=
e-121hp7c"><strong>Error Handling</strong>: </p><ul dir=3D"auto"><li class=
=3D"text-start"> Add try-catch blocks in jobs and log errors (e.g., Serilog=
, NLog).</li> </ul></li> </ol><div class=3D"my-2 "></div><hr class=3D"borde=
r-gray-100 dark:border-gray-850"><h3 dir=3D"auto" class=3D"svelte-121hp7c">=
<strong>Which to Choose?</strong> </h3><ul dir=3D"auto"><li class=3D"text-s=
tart"> <strong>Quartz.NET</strong>: Best for complex schedules, distributed=
 systems, and high reliability.</li><li class=3D"text-start"> <strong>Hangf=
ire</strong>: Best for simplicity, built-in dashboard, and quick setup.</li=
> </ul><div class=3D"my-2 "></div><p dir=3D"auto" class=3D"svelte-121hp7c">=
Both solutions integrate seamlessly with ASP.NET Core and can be adapted to=
 console apps using <code class=3D"cursor-pointer codespan">IHost</code>. <=
/p></div>   </div></div></div> <div class=3D"flex overflow-x-auto justify-s=
tart mt-0.5 text-gray-600 buttons dark:text-gray-500 svelte-1u5gq5j"> <div =
aria-label=3D"Copy" class=3D"flex"><button class=3D"visible p-1.5 hover:bg-=
black/5 dark:hover:bg-white/5 rounded-lg dark:hover:text-white hover:text-b=
lack transition copy-response-button"><svg xmlns=3D"http://www.w3.org/2000/=
svg" fill=3D"none" viewBox=3D"0 0 18 18" stroke-width=3D"1.5" stroke=3D"cur=
rentColor" class=3D"size-4 dark:hover:text-white hover:text-black"><g id=3D=
"=C3=A5=C2=A4=C2=8D=C3=A5=CB=86=C2=B6_copy (6) 1"><path id=3D"Vector" d=3D"=
M4.875 4.66161V2.92944C4.875 2.34696 5.3472 1.87476 5.92969 1.87476H15.0703=
C15.6528 1.87476 16.125 2.34696 16.125 2.92944V12.0701C16.125 12.6526 15.65=
28 13.1248 15.0703 13.1248H13.3186" stroke-linecap=3D"round" stroke-linejoi=
n=3D"round"></path><path id=3D"Vector_2" d=3D"M12.0703 4.87476H2.92969C2.34=
72 4.87476 1.875 5.34696 1.875 5.92944V15.0701C1.875 15.6526 2.3472 16.1248=
 2.92969 16.1248H12.0703C12.6528 16.1248 13.125 15.6526 13.125 15.0701V5.92=
944C13.125 5.34696 12.6528 4.87476 12.0703 4.87476Z" stroke-linejoin=3D"rou=
nd"></path></g></svg></button></div>   <div aria-label=3D"Regenerate" class=
=3D"flex"><button type=3D"button" class=3D"visible p-1.5 hover:bg-black/5 d=
ark:hover:bg-white/5 rounded-lg dark:hover:text-white hover:text-black tran=
sition regenerate-response-button"><svg xmlns=3D"http://www.w3.org/2000/svg=
" fill=3D"none" viewBox=3D"0 0 24 24" stroke-width=3D"2" stroke=3D"currentC=
olor" class=3D"size-4"><path stroke-linecap=3D"round" stroke-linejoin=3D"ro=
und" d=3D"M16.023 9.348h4.992v-.001M2.985 19.644v-4.992m0 0h4.992m-4.993 0l=
3.181 3.183a8.25 8.25 0 0013.803-3.7M4.031 9.865a8.25 8.25 0 0113.803-3.7l3=
.181 3.182m0-4.991v4.99"></path></svg></button></div>  </div></div></div></=
div></div></div> <div class=3D"pb-12"></div> </div></div></div></div> <div =
class=3D"px-3 pb-3"> <div class=3D"w-full messageInputContainer font-primar=
y"><div class=3D"flex inset-x-0 justify-center mx-auto bg-transparent"><div=
 class=3D"flex flex-col px-3 max-w-6xl w-full"><div class=3D"relative"><div=
 class=3D"flex absolute right-0 left-0 -top-12 z-30 justify-center pointer-=
events-none"><button class=3D"p-1.5 bg-white rounded-full border border-gra=
y-100 pointer-events-auto dark:border-none dark:bg-white/20"><svg class=3D"=
size-5" stroke-width=3D"1.5" xmlns=3D"http://www.w3.org/2000/svg" viewBox=
=3D"0 0 20 20" fill=3D"currentColor"><path fill-rule=3D"evenodd" d=3D"M10 3=
a.75.75 0 01.75.75v10.638l3.96-4.158a.75.75 0 111.08 1.04l-5.25 5.5a.75.75 =
0 01-1.08 0l-5.25-5.5a.75.75 0 111.08-1.04l3.96 4.158V3.75A.75.75 0 0110 3z=
" clip-rule=3D"evenodd"></path></svg></button></div></div></div></div> <div=
 class=3D"transparent"><div class=3D"max-w-[960px] bg-transparent mx-auto i=
nset-x-0"><div class=3D""> <form class=3D"flex gap-1.5 w-full"><div class=
=3D"flex-1 flex flex-col relative w-full rounded-xl border-b-2 border-black=
/20 dark:border-white/10 transition bg-white/90 dark:bg-[#26282A] dark:text=
-gray-100" dir=3D"auto"> <div class=3D"overflow-hidden relative px-2.5"><di=
v class=3D"absolute py-2 select-none flagsContainer z-1" style=3D"transform=
: translateY(0px);"></div> <textarea id=3D"chat-input" dir=3D"auto" rows=3D=
"3" class=3D"px-1 pt-3 w-full text-sm bg-transparent resize-none scrollbar-=
hidden dark:text-gray-100 outline-hidden dark:placeholder:text-white/40" pl=
aceholder=3D"Send a Message" style=3D"text-indent: 0px; height: 72px;"></te=
xtarea></div> <div class=3D"flex justify-between items-center mx-3.5 mt-1.5=
 mb-3.5 max-w-full" dir=3D"ltr"><div class=3D"self-end flex items-center fl=
ex-1 max-w-[80%] gap-1.5"><div aria-label=3D"Upload Files" class=3D"flex"><=
div role=3D"button" tabindex=3D"0"><button class=3D"border rounded-lg borde=
r-black/10 dark:border-white/10 bg-transparent transition p-1.5 outline-hid=
den focus:outline-hidden hover:bg-gray-100 text-gray-800 dark:text-white da=
rk:hover:bg-gray-800" type=3D"button" aria-label=3D"More"><svg xmlns=3D"htt=
p://www.w3.org/2000/svg" viewBox=3D"0 0 20 20" fill=3D"currentColor" class=
=3D"size-5"><path d=3D"M10.75 4.75a.75.75 0 0 0-1.5 0v4.5h-4.5a.75.75 0 0 0=
 0 1.5h4.5v4.5a.75.75 0 0 0 1.5 0v-4.5h4.5a.75.75 0 0 0 0-1.5h-4.5v-4.5Z"><=
/path></svg></button></div></div>  <div class=3D"flex gap-[8px] items-cente=
r overflow-x-auto scrollbar-none flex-1"> <button role=3D"button" aria-hasp=
opup=3D"dialog" aria-expanded=3D"true" data-state=3D"open" id=3D"WmmgKDsW5g=
" data-melt-popover-trigger=3D"" data-popover-trigger=3D"" type=3D"button">=
<div class=3D"" aria-expanded=3D"false"><button type=3D"button" class=3D"px=
-2 @xl:px-3 py-1.5 flex gap-1.5 items-center text-sm rounded-lg border tran=
sition-colors duration-300 focus:outline-hidden max-w-full overflow-hidden =
bg-transparent dark:text-gray-300 border-[#E5E5E5] dark:border-[#3C3E3F] ho=
ver:bg-black/5 dark:hover:bg-white/5"><svg class=3D" size-4" stroke-width=
=3D"2" width=3D"16" height=3D"17" viewBox=3D"0 0 16 17" fill=3D"none" xmlns=
=3D"http://www.w3.org/2000/svg"><g id=3D"=C3=A6=C2=B1=E2=80=B0=C3=A5&nbsp;=
=C2=A1=C3=A5=E2=80=BA=C2=BE=C3=A6&nbsp;=E2=80=A1_hamburger-button (4) 1"><p=
ath id=3D"Vector" d=3D"M2.6499 4.48322H13.3166" stroke=3D"currentColor" str=
oke-width=3D"1.33333" stroke-linecap=3D"round" stroke-linejoin=3D"round"></=
path><path id=3D"Vector_2" d=3D"M2.6499 8.48322H13.3166" stroke=3D"currentC=
olor" stroke-width=3D"1.33333" stroke-linecap=3D"round" stroke-linejoin=3D"=
round"></path><path id=3D"Vector_3" d=3D"M2.6499 12.4832H13.3166" stroke=3D=
"currentColor" stroke-width=3D"1.33333" stroke-linecap=3D"round" stroke-lin=
ejoin=3D"round"></path></g></svg> <span class=3D"hidden @sm:block whitespac=
e-nowrap overflow-hidden text-ellipsis translate-y-[0.5px] mr-0.5"> Tools</=
span></button></div></button>  <div aria-label=3D"The current scenario cann=
ot be cancelled" class=3D"flex"><button disabled=3D"" data-autothink=3D"tru=
e" class=3D"flex gap-1.5 items-center px-2.5 py-1.5 text-sm rounded-lg bord=
er border-black/10 dark:border-white/10 data-[autoThink=3Dtrue]:bg-[#DAEEFF=
] data-[autoThink=3Dfalse]:hover:bg-black/5 data-[autoThink=3Dfalse]:dark:h=
over:bg-white/5 bg-transparent transition-all disabled:cursor-not-allowed d=
isabled:text-gray-500 dark:text-white/80 data-[autoThink=3Dtrue]:dark:bg-wh=
ite/10 data-[autoThink=3Dtrue]:border-[#0068E00A] data-[autoThink=3Dtrue]:d=
ark:border-white/10 data-[autoThink=3Dtrue]:dark:text-white"><svg class=3D"=
size-4" stroke-width=3D"1.5" width=3D"16" height=3D"17" viewBox=3D"0 0 16 1=
7" fill=3D"none" xmlns=3D"http://www.w3.org/2000/svg"><g id=3D"=C3=A5=C5=93=
=C2=B0=C3=A7=C2=90=C6=92=C3=A4=C2=BB=C2=AA_earth 2" opacity=3D"0.8"><path i=
d=3D"Union" d=3D"M2.08147 2.66759C3.39178 1.1939 5.62652 1.00408 7.16643 2.=
23595L7.43792 2.45275L7.53851 2.55236C7.74657 2.80259 7.75853 3.17308 7.547=
29 3.43712C7.33612 3.70107 6.97181 3.77153 6.68206 3.62365L6.56292 3.5465L6=
.29143 3.3297C5.33311 2.5631 3.9427 2.68102 3.12737 3.59826C2.25007 4.58541=
 2.37929 6.10624 3.41058 6.93126L5.93792 8.95275L6.03851 9.05236C6.24657 9.=
30259 6.25853 9.67308 6.04729 9.93712C5.83612 10.2011 5.47181 10.2715 5.182=
06 10.1236L5.06292 10.0465L2.53558 8.02404C0.878471 6.69807 0.671455 4.2538=
6 2.08147 2.66759ZM8.00042 7.49962C8.55249 7.49988 9.00042 7.9475 9.00042 8=
.49962C9.0002 9.05156 8.55235 9.49937 8.00042 9.49962C7.44827 9.49962 7.000=
64 9.05172 7.00042 8.49962C7.00042 7.94734 7.44813 7.49962 8.00042 7.49962Z=
" fill=3D"currentColor"></path><path id=3D"Vector 2665" d=3D"M7 6L9.02186 3=
.47268C10.0973 2.12831 12.08 1.95997 13.3667 3.10376V3.10376C14.5624 4.1665=
7 14.7163 5.97958 13.717 7.22878L13.5 7.5" stroke=3D"currentColor" stroke-l=
inecap=3D"round"></path><path id=3D"Vector 2664" d=3D"M10.5 7.5L13.0273 9.5=
2186C14.3717 10.5973 14.54 12.58 13.3962 13.8667V13.8667C12.3334 15.0624 10=
.5204 15.2163 9.27122 14.217L9 14" stroke=3D"currentColor" stroke-linecap=
=3D"round"></path><path id=3D"Vector 2666" d=3D"M9 11L6.97814 13.5273C5.902=
65 14.8717 3.92003 15.04 2.63327 13.8962V13.8962C1.43761 12.8334 1.28367 11=
.0204 2.28302 9.77122L2.5 9.5" stroke=3D"currentColor" stroke-linecap=3D"ro=
und"></path></g></svg> <span>Auto Think</span></button></div></div></div> <=
div class=3D"flex self-end space-x-1 shrink-0"><div class=3D"flex items-cen=
ter"><div aria-label=3D"Send message" class=3D"flex"><button id=3D"send-mes=
sage-button" class=3D"sendMessageButton text-white bg-gray-200 dark:text-wh=
ite/40 dark:bg-gray-700 disabled transition rounded-lg p-2 self-center" typ=
e=3D"submit" disabled=3D""><svg class=3D"size-4" stroke-width=3D"1.5" width=
=3D"16" height=3D"16" viewBox=3D"0 0 16 16" fill=3D"none" xmlns=3D"http://w=
ww.w3.org/2000/svg"><g id=3D"=C3=A5=C2=8F=E2=80=98=C3=A9=E2=82=AC=C2=811_se=
nd-one 1" clip-path=3D"url(#clip0_1243_3321)"><path id=3D"Vector" d=3D"M7.9=
9946 1.50005L2.29635 13.5283L7.82816 9.72781L13.4678 13.5283L7.99946 1.5000=
5Z" stroke=3D"currentColor" stroke-linejoin=3D"round"></path></g><defs><cli=
pPath id=3D"clip0_1243_3321"><rect width=3D"16" height=3D"16" fill=3D"curre=
ntColor"></rect></clipPath></defs></svg></button></div></div></div></div></=
div></form></div></div></div></div> <div class=3D"absolute right-0 left-0 b=
ottom-1 text-xs text-center text-gray-500 line-clamp-1"></div></div></div><=
/div>  <div data-pane=3D"" data-pane-id=3D"RTSD5ipXdw" data-pane-group-id=
=3D"8QDIwLrhAa" class=3D" shadow-[0_0_16px_0_#0000000A]" style=3D"flex: 0 1=
 0px; overflow: hidden;"></div></div> </div>   </div></div>  <div id=3D"sve=
lte-announcer" aria-live=3D"assertive" aria-atomic=3D"true" style=3D"positi=
on: absolute; left: 0px; top: 0px; clip: rect(0px, 0px, 0px, 0px); clip-pat=
h: inset(50%); overflow: hidden; white-space: nowrap; width: 1px; height: 1=
px;">Chat with Z.ai - Free AI Chatbot powered by GLM-4.5</div></div>

	=09
=09



<div class=3D"drawer-portal"><div class=3D"fixed z-9999 bg-white dark:bg-gr=
ay-850 shadow-lg transition-transform duration-300 ease-in-out rounded-t-2x=
l" style=3D"left: auto;right: auto;top: auto;bottom: 0;width: 100vw;height:=
 73%;transform: translateY(150%)"></div></div></body></html>
------MultipartBoundary--xhwtFZq0UDxOmF7548m6subkWxGIdLYuwRmj2FBwDc----
Content-Type: image/svg+xml
Content-Transfer-Encoding: quoted-printable
Content-Location: https://z-cdn.chatglm.cn/z-ai/static/logo.svg

<?xml version=3D"1.0" encoding=3D"utf-8"?>
<!-- Generator: Adobe Illustrator 25.3.1, SVG Export Plug-In . SVG Version:=
 6.00 Build 0)  -->
<svg version=3D"1.1" xmlns=3D"http://www.w3.org/2000/svg" xmlns:xlink=3D"ht=
tp://www.w3.org/1999/xlink" x=3D"0px" y=3D"0px"
	 viewBox=3D"0 0 30 30" style=3D"enable-background:new 0 0 30 30;" xml:spac=
e=3D"preserve">
<style type=3D"text/css">
	.st0{opacity:0.3;fill:#E2E4E7;}
	.st1{opacity:0.8;fill:#E2E4E7;stroke:#FFFFFF;stroke-width:5;stroke-miterli=
mit:10;}
	.st2{fill:url(#SVGID_1_);}
	.st3{fill:none;stroke:#E0E4E9;stroke-width:0.25;stroke-miterlimit:10;}
	.st4{fill:none;}
	.st5{fill:#9DA1A5;}
	.st6{fill-rule:evenodd;clip-rule:evenodd;fill:none;}
	.st7{fill-rule:evenodd;clip-rule:evenodd;fill:#DFE2E7;}
	.st8{fill-rule:evenodd;clip-rule:evenodd;fill:#CDD4DA;}
	.st9{fill-rule:evenodd;clip-rule:evenodd;fill:#B3BCC7;}
	.st10{fill-rule:evenodd;clip-rule:evenodd;fill:#9DAAB7;}
	.st11{fill-rule:evenodd;clip-rule:evenodd;fill:#8698A8;}
	.st12{fill-rule:evenodd;clip-rule:evenodd;fill:url(#SVGID_2_);}
	.st13{fill-rule:evenodd;clip-rule:evenodd;fill:url(#SVGID_3_);}
	.st14{fill:#1F63EC;}
	.st15{fill:#2D2D2D;}
	.st16{fill:none;stroke:#E0E4E9;stroke-width:0.5;stroke-miterlimit:10;}
	.st17{fill-rule:evenodd;clip-rule:evenodd;fill:url(#SVGID_4_);}
	.st18{fill-rule:evenodd;clip-rule:evenodd;fill:url(#SVGID_5_);}
	.st19{fill:none;stroke:#677380;stroke-width:0.5;stroke-miterlimit:10;}
	.st20{fill:none;stroke:url(#SVGID_6_);stroke-width:2;stroke-miterlimit:10;=
}
	.st21{fill-rule:evenodd;clip-rule:evenodd;fill:url(#SVGID_7_);}
	.st22{fill-rule:evenodd;clip-rule:evenodd;fill:url(#SVGID_8_);}
	.st23{fill:#FFFFFF;}
	.st24{fill-rule:evenodd;clip-rule:evenodd;fill:#2D2D2D;}
	.st25{clip-path:url(#SVGID_10_);}
	.st26{clip-path:url(#SVGID_12_);}
	.st27{fill:url(#SVGID_13_);}
	.st28{fill-rule:evenodd;clip-rule:evenodd;fill:url(#SVGID_14_);}
	.st29{fill-rule:evenodd;clip-rule:evenodd;fill:url(#SVGID_15_);}
	.st30{clip-path:url(#SVGID_17_);}
	.st31{clip-path:url(#SVGID_19_);}
	.st32{fill:url(#SVGID_20_);}
	.st33{fill:none;stroke:url(#SVGID_21_);stroke-width:2;stroke-miterlimit:10=
;}
	.st34{fill-rule:evenodd;clip-rule:evenodd;fill:url(#SVGID_22_);}
	.st35{fill-rule:evenodd;clip-rule:evenodd;fill:url(#SVGID_23_);}
	.st36{clip-path:url(#SVGID_25_);}
	.st37{clip-path:url(#SVGID_27_);}
	.st38{fill:url(#SVGID_28_);}
	.st39{clip-path:url(#SVGID_30_);}
	.st40{clip-path:url(#SVGID_32_);}
	.st41{fill:url(#SVGID_33_);}
	.st42{fill-rule:evenodd;clip-rule:evenodd;fill:#126EF6;}
	.st43{fill-rule:evenodd;clip-rule:evenodd;fill:#FFFFFF;}
	.st44{clip-path:url(#SVGID_35_);}
	.st45{clip-path:url(#SVGID_37_);}
	.st46{fill:url(#SVGID_38_);}
	.st47{fill-rule:evenodd;clip-rule:evenodd;fill:#9DA1A5;}
	.st48{fill-rule:evenodd;clip-rule:evenodd;fill:url(#SVGID_39_);}
	.st49{fill-rule:evenodd;clip-rule:evenodd;fill:url(#SVGID_40_);}
	.st50{fill-rule:evenodd;clip-rule:evenodd;fill:url(#SVGID_41_);}
	.st51{fill-rule:evenodd;clip-rule:evenodd;fill:url(#SVGID_42_);}
	.st52{fill:none;stroke:url(#SVGID_43_);stroke-width:2;stroke-miterlimit:10=
;}
	.st53{fill-rule:evenodd;clip-rule:evenodd;fill:none;stroke:#E0E4E9;stroke-=
width:0.5;stroke-miterlimit:10;}
	.st54{fill-rule:evenodd;clip-rule:evenodd;fill:url(#SVGID_44_);}
	.st55{fill-rule:evenodd;clip-rule:evenodd;fill:url(#SVGID_45_);}
	.st56{fill-rule:evenodd;clip-rule:evenodd;fill:url(#SVGID_46_);}
	.st57{fill-rule:evenodd;clip-rule:evenodd;fill:url(#SVGID_47_);}
	.st58{fill-rule:evenodd;clip-rule:evenodd;fill:url(#SVGID_48_);}
	.st59{fill-rule:evenodd;clip-rule:evenodd;fill:url(#SVGID_49_);}
	.st60{fill-rule:evenodd;clip-rule:evenodd;fill:url(#SVGID_50_);}
	.st61{fill-rule:evenodd;clip-rule:evenodd;fill:url(#SVGID_51_);}
	.st62{fill-rule:evenodd;clip-rule:evenodd;fill:url(#SVGID_52_);}
	.st63{fill-rule:evenodd;clip-rule:evenodd;fill:url(#SVGID_53_);}
	.st64{clip-path:url(#SVGID_55_);}
	.st65{clip-path:url(#SVGID_57_);}
	.st66{fill:url(#SVGID_58_);}
	.st67{clip-path:url(#SVGID_60_);}
	.st68{clip-path:url(#SVGID_62_);}
	.st69{fill:url(#SVGID_63_);}
	.st70{fill:none;stroke:url(#SVGID_64_);stroke-width:2;stroke-miterlimit:10=
;}
	.st71{clip-path:url(#SVGID_66_);}
	.st72{clip-path:url(#SVGID_68_);}
	.st73{fill:url(#SVGID_69_);}
	.st74{clip-path:url(#SVGID_71_);}
	.st75{clip-path:url(#SVGID_73_);}
	.st76{fill:url(#SVGID_74_);}
	.st77{clip-path:url(#SVGID_76_);}
	.st78{clip-path:url(#SVGID_78_);}
	.st79{fill:url(#SVGID_79_);}
	.st80{fill-rule:evenodd;clip-rule:evenodd;fill:url(#SVGID_80_);}
	.st81{fill-rule:evenodd;clip-rule:evenodd;fill:url(#SVGID_81_);}
	.st82{clip-path:url(#SVGID_83_);}
	.st83{clip-path:url(#SVGID_85_);}
	.st84{fill:url(#SVGID_86_);}
	.st85{fill-rule:evenodd;clip-rule:evenodd;fill:url(#SVGID_87_);}
	.st86{fill-rule:evenodd;clip-rule:evenodd;fill:url(#SVGID_88_);}
	.st87{clip-path:url(#SVGID_90_);}
	.st88{clip-path:url(#SVGID_92_);}
	.st89{fill:url(#SVGID_93_);}
	.st90{fill:none;stroke:url(#SVGID_94_);stroke-width:2;stroke-miterlimit:10=
;}
	.st91{fill-rule:evenodd;clip-rule:evenodd;fill:url(#SVGID_95_);}
	.st92{fill-rule:evenodd;clip-rule:evenodd;fill:url(#SVGID_96_);}
	.st93{clip-path:url(#SVGID_98_);}
	.st94{clip-path:url(#SVGID_100_);}
	.st95{fill:url(#SVGID_101_);}
	.st96{clip-path:url(#SVGID_103_);}
	.st97{clip-path:url(#SVGID_105_);}
	.st98{fill:url(#SVGID_106_);}
	.st99{clip-path:url(#SVGID_108_);}
	.st100{clip-path:url(#SVGID_110_);}
	.st101{fill:url(#SVGID_111_);}
	.st102{fill:#FFFFFF;stroke:#B3BCC7;stroke-width:0.275;stroke-miterlimit:10=
;}
	.st103{clip-path:url(#SVGID_113_);}
	.st104{fill:#FDD138;}
	.st105{fill:#FCA62F;}
	.st106{fill:#FB7927;}
	.st107{fill:#F44B22;}
	.st108{fill:#D81915;}
	.st109{fill:#2D2D2D;stroke:#FFFFFF;stroke-width:0.3354;stroke-miterlimit:1=
0;}
	.st110{fill:none;stroke:#65727F;stroke-width:2;stroke-miterlimit:10;}
	.st111{fill:none;stroke:#65727F;stroke-width:0.75;stroke-miterlimit:10;}
	.st112{fill:url(#SVGID_114_);}
	.st113{fill:#D06C50;}
	.st114{fill:#2D2D2D;stroke:#B3BCC7;stroke-width:0.275;stroke-miterlimit:10=
;}
	.st115{opacity:0.2;}
	.st116{fill:none;stroke:#677380;stroke-width:0.3564;stroke-miterlimit:10;}
	.st117{fill:none;stroke:#677380;stroke-width:0.3564;stroke-miterlimit:10;s=
troke-dasharray:1.0212,1.0212;}
	.st118{fill:none;stroke:#677380;stroke-width:0.3564;stroke-miterlimit:10;s=
troke-dasharray:1.0205,1.0205;}
	.st119{opacity:0.2;fill:none;}
	.st120{fill:none;stroke:#677380;stroke-width:0.3689;stroke-miterlimit:10;}
	.st121{fill:none;stroke:#677380;stroke-width:0.3689;stroke-miterlimit:10;s=
troke-dasharray:1.0509,1.0509;}
	.st122{opacity:0.3;fill:#1F63EC;}
	.st123{fill:#2D2D2D;stroke:#FFFFFF;stroke-width:0.3162;stroke-miterlimit:1=
0;}
	.st124{fill:#FFFFFF;stroke:#B3BCC7;stroke-width:0.3162;stroke-miterlimit:1=
0;}
	.st125{clip-path:url(#SVGID_118_);}
	.st126{fill:url(#SVGID_119_);}
	.st127{fill:none;stroke:#DFE2E7;stroke-width:0.75;stroke-miterlimit:10;}
	.st128{fill:#9DA1A5;stroke:#FFFFFF;stroke-miterlimit:10;}
	.st129{fill:url(#SVGID_120_);}
	.st130{fill:none;stroke:#677380;stroke-width:0.75;stroke-miterlimit:10;}
	.st131{opacity:0.4;}
	.st132{clip-path:url(#SVGID_122_);}
	.st133{clip-path:url(#SVGID_124_);}
	.st134{fill:url(#SVGID_125_);}
	.st135{fill:none;stroke:#8392A3;stroke-width:0.35;stroke-miterlimit:10;}
	.st136{fill:none;stroke:#8392A3;stroke-width:0.35;stroke-miterlimit:10;str=
oke-dasharray:0.9951,0.9951;}
	.st137{fill:none;stroke:#8392A3;stroke-width:0.35;stroke-miterlimit:10;str=
oke-dasharray:1.004,1.004;}
	.st138{fill:none;stroke:url(#SVGID_126_);stroke-width:1.5;stroke-miterlimi=
t:10;}
	.st139{fill:url(#SVGID_127_);}
	.st140{fill:none;stroke:#DDE0E4;stroke-width:0.35;stroke-miterlimit:10;}
	.st141{fill:#2D2D2D;stroke:#A9B3BE;stroke-width:0.275;stroke-miterlimit:10=
;}
	.st142{fill-rule:evenodd;clip-rule:evenodd;fill:#126EF4;}
	.st143{fill:#FFFFFF;stroke:#B1BAC4;stroke-width:0.275;stroke-miterlimit:10=
;}
	.st144{fill:#CE6C50;}
	.st145{fill:#5B5B5B;}
	.st146{fill:#8392A3;}
	.st147{fill:none;stroke:url(#SVGID_128_);stroke-width:1.5;stroke-miterlimi=
t:10;}
	.st148{fill:url(#SVGID_129_);}
	.st149{fill:none;stroke:#B5BDC4;stroke-width:0.7;stroke-miterlimit:10;}
	.st150{opacity:0.6;fill:none;stroke:#78838E;stroke-width:0.35;stroke-miter=
limit:10;}
	.st151{opacity:0.2;fill:none;stroke:#8392A3;stroke-width:0.35;stroke-miter=
limit:10;stroke-dasharray:1,1;}
	.st152{fill:none;stroke:#DDE0E4;stroke-width:0.75;stroke-miterlimit:10;}
	.st153{fill:none;stroke:#8392A3;stroke-width:0.5;stroke-miterlimit:10;}
	.st154{opacity:0.2;fill:none;stroke:#677380;stroke-width:0.3564;stroke-mit=
erlimit:10;stroke-dasharray:1.0182,1.0182;}
	.st155{fill:none;stroke:#DDE0E4;stroke-width:0.765;stroke-miterlimit:10;}
	.st156{fill:url(#SVGID_130_);}
	.st157{fill:url(#SVGID_131_);}
	.st158{fill:#B1BAC4;}
	.st159{fill:#CBD1D8;}
	.st160{fill:#0B1B2B;}
	.st161{fill:#91D119;}
	.st162{opacity:0.7;}
	.st163{fill:#FFFFFF;stroke:#000000;stroke-width:0.4418;stroke-miterlimit:1=
0;}
	.st164{fill:none;stroke:#939CAA;stroke-width:0.2209;stroke-miterlimit:10;}
	.st165{fill:none;stroke:#FFFFFF;stroke-width:3.0924;stroke-miterlimit:10;}
	.st166{fill:url(#SVGID_132_);}
	.st167{fill:none;stroke:url(#SVGID_133_);stroke-width:1.714;stroke-miterli=
mit:10;}
	.st168{fill:url(#SVGID_134_);}
	.st169{fill:url(#SVGID_135_);}
	.st170{fill:url(#SVGID_136_);}
	.st171{fill:url(#SVGID_137_);}
	.st172{fill:url(#SVGID_138_);}
	.st173{fill:url(#SVGID_139_);}
	.st174{fill:url(#SVGID_140_);}
	.st175{fill:url(#SVGID_141_);}
	.st176{fill:url(#SVGID_142_);}
	.st177{fill:url(#SVGID_143_);}
	.st178{fill:url(#SVGID_144_);}
	.st179{fill:none;stroke:#1F63EC;stroke-width:4;stroke-miterlimit:10;}
	.st180{fill:none;stroke:#0B1B2B;stroke-width:4;stroke-miterlimit:10;}
	.st181{fill:none;stroke:#677380;stroke-width:0.3989;stroke-miterlimit:10;}
	.st182{fill:none;stroke:#677380;stroke-width:0.3989;stroke-miterlimit:10;s=
troke-dasharray:1.14,1.14;}
	.st183{fill:#257AF1;}
	.st184{opacity:0.3;fill:#FFFFFF;}
	.st185{fill:none;stroke:#98A5B2;stroke-width:4;stroke-miterlimit:10;}
	.st186{fill:none;stroke:#65727F;stroke-width:0.3989;stroke-miterlimit:10;}
	.st187{fill:none;stroke:#65727F;stroke-width:0.3989;stroke-miterlimit:10;s=
troke-dasharray:1.14,1.14;}
	.st188{fill:none;stroke:#DDDFE4;stroke-width:0.75;stroke-miterlimit:10;}
	.st189{fill:#9A9EA2;}
	.st190{fill-rule:evenodd;clip-rule:evenodd;fill:#3267AC;}
	.st191{fill:#FFFFFF;stroke:#AFB8C3;stroke-width:0.275;stroke-miterlimit:10=
;}
	.st192{fill:#C5694E;}
	.st193{fill:#8192A2;}
	.st194{fill:#2D2D2D;stroke:#FFFFFF;stroke-width:0.6317;stroke-miterlimit:1=
0;}
</style>
<g id=3D"=E5=9B=BE=E5=B1=82_2">
</g>
<g id=3D"=E5=9B=BE=E5=B1=82_1">
	<path class=3D"st194" d=3D"M24.51,28.51H5.49c-2.21,0-4-1.79-4-4V5.49c0-2.2=
1,1.79-4,4-4h19.03c2.21,0,4,1.79,4,4v19.03
		C28.51,26.72,26.72,28.51,24.51,28.51z"/>
	<g>
		<g>
			<g>
				<g>
					<path class=3D"st23" d=3D"M15.47,7.1l-1.3,1.85c-0.2,0.29-0.54,0.47-0.9=
,0.47h-7.1V7.09C6.16,7.1,15.47,7.1,15.47,7.1z"/>
					<polygon class=3D"st23" points=3D"24.3,7.1 13.14,22.91 5.7,22.91 16.86=
,7.1 					"/>
					<path class=3D"st23" d=3D"M14.53,22.91l1.31-1.86c0.2-0.29,0.54-0.47,0.=
9-0.47h7.09v2.33H14.53z"/>
				</g>
			</g>
		</g>
	</g>
</g>
</svg>=0A
------MultipartBoundary--xhwtFZq0UDxOmF7548m6subkWxGIdLYuwRmj2FBwDc----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://z-cdn.chatglm.cn/z-ai/frontend/prod-fe-1.0.78/_app/immutable/assets/Chat.D7YoCgTc.css

@charset "utf-8";

.cancelFlag.svelte-1qag3xc.svelte-1qag3xc { display: none; }

.inputFlag.svelte-1qag3xc:hover .cancelFlag.svelte-1qag3xc { display: block=
; }

@keyframes svelte-rtwi7r-gradientBreathing {=20
  0% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}

.gradientButton.svelte-rtwi7r { position: relative; background: linear-grad=
ient(90deg, rgb(25, 26, 29), rgb(34, 35, 39) 20%, rgb(68, 69, 77) 35%, rgb(=
116, 118, 137) 44%, rgb(168, 170, 184), rgb(116, 118, 137) 56%, rgb(68, 69,=
 77) 65%, rgb(34, 35, 39) 80%, rgb(25, 26, 29)) 0% 0% / 600% 600% text; ani=
mation: 3s ease-in-out 0s infinite normal none running svelte-rtwi7r-gradie=
ntBreathing; border: none; font-weight: 500; color: transparent; }

.dark .gradientButton.svelte-rtwi7r { position: relative; background: linea=
r-gradient(90deg, rgb(255, 255, 255), rgb(217, 217, 217) 20%, gray 35%, rgb=
(51, 51, 51) 44%, rgb(0, 0, 0), rgb(51, 51, 51) 56%, gray 65%, rgb(217, 217=
, 217) 80%, rgb(255, 255, 255)) 0% 0% / 600% 600% text; animation: 3s ease-=
in-out 0s infinite normal none running svelte-rtwi7r-gradientBreathing; bor=
der: none; font-weight: 500; color: transparent; }

.textGradient.svelte-15sbhnn { background: linear-gradient(135deg, rgb(25, =
26, 29), rgb(116, 118, 137) 46%, rgb(25, 26, 29)) text; -webkit-text-fill-c=
olor: transparent; }

.textGradientDark.svelte-15sbhnn { background: linear-gradient(135deg, rgb(=
255, 255, 255), rgb(164, 166, 179) 46%, rgb(255, 255, 255)) text; -webkit-t=
ext-fill-color: transparent; }

@keyframes svelte-fq1rhy-scaleUp {=20
  0% { transform: scale(0.985); opacity: 0; }
  100% { transform: scale(1); opacity: 1; }
}

.ppt-notify-signin-modal { display: flex; align-items: center; justify-cont=
ent: center; }

.text-gradient.svelte-1iohmd4 { background: linear-gradient(160.13deg, rgb(=
25, 26, 29) -3.97%, rgb(116, 118, 137), rgb(25, 26, 29) 218.47%) text; -web=
kit-text-fill-color: transparent; }

.dark .text-gradient.svelte-1iohmd4 { background: linear-gradient(136.4deg,=
 rgb(255, 255, 255) -13.32%, rgb(172, 174, 189) 58.94%, rgb(255, 255, 255) =
150.59%) text; -webkit-text-fill-color: transparent; }

.banner-scroll.svelte-1e8uh2d { overflow: hidden; white-space: nowrap; posi=
tion: relative; }

.banner-content.svelte-1e8uh2d { display: inline-block; animation: 20s line=
ar 0s infinite normal none running svelte-1e8uh2d-scrollLeftRight; padding:=
 0px 10px; white-space: nowrap; }

@keyframes svelte-1e8uh2d-scrollLeftRight {=20
  0% { transform: translate(150%); }
  100% { transform: translate(-150%); }
}
------MultipartBoundary--xhwtFZq0UDxOmF7548m6subkWxGIdLYuwRmj2FBwDc----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://z-cdn.chatglm.cn/z-ai/frontend/prod-fe-1.0.78/_app/immutable/assets/WorkSpace.C7KvruIJ.css

@charset "utf-8";

.loading-container.svelte-yppvkz.svelte-yppvkz { display: flex; align-items=
: center; justify-content: center; gap: 8px; }

.loading-sm.svelte-yppvkz.svelte-yppvkz { gap: 0.25rem; }

.loading-lg.svelte-yppvkz.svelte-yppvkz { gap: 0.75rem; }

.loading-dot.svelte-yppvkz.svelte-yppvkz { background-color: currentcolor; =
border-radius: 50%; opacity: 0.6; animation: 1s ease-in-out 0s infinite nor=
mal both running svelte-yppvkz-loading-animation; }

.loading-sm.svelte-yppvkz .loading-dot.svelte-yppvkz { width: 6px; height: =
6px; }

.loading-md.svelte-yppvkz .loading-dot.svelte-yppvkz { width: 10px; height:=
 10px; }

.loading-lg.svelte-yppvkz .loading-dot.svelte-yppvkz { width: 14px; height:=
 14px; }

.loading-dot.svelte-yppvkz.svelte-yppvkz:nth-child(1) { animation-delay: -0=
.32s; }

.loading-dot.svelte-yppvkz.svelte-yppvkz:nth-child(2) { animation-delay: -0=
.16s; }

@keyframes svelte-yppvkz-loading-animation {=20
  0%, 80%, 100% { opacity: 0.2; transform: scale(0.6); }
  40% { opacity: 1; transform: scale(1.4); }
}

.buttons.svelte-1u5gq5j::-webkit-scrollbar { display: none; }

.buttons.svelte-1u5gq5j { scrollbar-width: none; }

@keyframes svelte-1co34if-fadeInUp {=20
  0% { opacity: 0; transform: translateY(20px); }
  100% { opacity: 1; transform: translateY(0px); }
}

.waterfall.svelte-1co34if { opacity: 0; animation-name: svelte-1co34if-fade=
InUp; animation-duration: 0.2s; animation-fill-mode: forwards; animation-ti=
ming-function: ease; }

.modal-content.svelte-fq1rhy { animation: 0.1s ease-out 0s 1 normal forward=
s running svelte-fq1rhy-scaleUp; }

@keyframes svelte-fq1rhy-scaleUp {=20
  0% { transform: scale(0.985); opacity: 0; }
  100% { transform: scale(1); opacity: 1; }
}

.artifactsActions.svelte-1ddqz9p.svelte-1ddqz9p { transition: opacity 0.1s =
ease-in-out, visibility 0.1s ease-in-out; }

.artifactsContainer.svelte-1ddqz9p:not(:hover) .artifactsActions.svelte-1dd=
qz9p { opacity: 0; visibility: hidden; }

.artifactsContainer.svelte-1ddqz9p:hover .artifactsActions.svelte-1ddqz9p {=
 opacity: 1; visibility: visible; }

.search-result-container.svelte-19y8p2f { width: 100%; padding: 0px; }

.original-result.svelte-19y8p2f { color: rgb(55, 65, 81); line-height: 1.6;=
 margin-bottom: 1.5rem; }

.dark .original-result.svelte-19y8p2f { color: rgb(209, 213, 219); }

.results-list.svelte-19y8p2f { display: flex; flex-direction: column; gap: =
1.5rem; }

.result-item.svelte-19y8p2f { padding: 0px; }

.result-title.svelte-19y8p2f { display: block; font-weight: 500; color: rgb=
(0, 104, 224); margin-bottom: 0.5rem; text-decoration-color: rgb(0, 104, 22=
4); }

.result-title.svelte-19y8p2f:hover { text-decoration: underline; }

.dark .result-title.svelte-19y8p2f { color: rgb(96, 165, 250); }

.title-container.svelte-19y8p2f { display: flex; align-items: center; gap: =
0.5rem; }

.favicon.svelte-19y8p2f { width: 16px; height: 16px; flex-shrink: 0; border=
-radius: 2px; }

.title-text.svelte-19y8p2f { flex: 1 1 0%; min-width: 0px; }

.result-text.svelte-19y8p2f { color: rgba(0, 0, 0, 0.6); line-height: 1.6; =
font-size: 14px; }

.dark .result-text.svelte-19y8p2f { color: rgba(255, 255, 255, 0.6); }

.no-results.svelte-19y8p2f { text-align: center; padding: 2rem 0px; color: =
rgb(107, 114, 128); }

.dark .no-results.svelte-19y8p2f { color: rgb(156, 163, 175); }

.tabContainer.svelte-i2ebeh.svelte-i2ebeh { transition: opacity 0.1s ease-i=
n-out, visibility 0.1s ease-in-out; }

.container.svelte-i2ebeh:not(:hover) .tabContainer.svelte-i2ebeh { opacity:=
 0; visibility: hidden; }

.container.svelte-i2ebeh:hover .tabContainer.svelte-i2ebeh { opacity: 1; vi=
sibility: visible; }

.file-list-menu.svelte-v7ahsn.svelte-v7ahsn { width: 100%; user-select: non=
e; font-size: 14px; outline: none; }

.tree-node-list.svelte-v7ahsn.svelte-v7ahsn { list-style-type: none; margin=
: 0px; }

.folder-item.svelte-v7ahsn.svelte-v7ahsn:hover { background-color: rgba(0, =
0, 0, 0.1); }

.dark .folder-item.svelte-v7ahsn.svelte-v7ahsn:hover { background-color: rg=
ba(255, 255, 255, 0.05); }

.folder-node.svelte-v7ahsn > .folder-item.svelte-v7ahsn { font-weight: 500;=
 }

.file-node.svelte-v7ahsn.svelte-v7ahsn:hover { background-color: rgba(0, 0,=
 0, 0.1); }

.dark .file-node.svelte-v7ahsn.svelte-v7ahsn:hover { background-color: rgba=
(255, 255, 255, 0.05); }

.referenceFileButton.svelte-v7ahsn.svelte-v7ahsn { display: none; }

.folder-item.svelte-v7ahsn:hover .referenceFileButton.svelte-v7ahsn, .file-=
node.svelte-v7ahsn:hover .referenceFileButton.svelte-v7ahsn { display: bloc=
k; }

.empty-state.svelte-v7ahsn.svelte-v7ahsn { padding: 1rem; text-align: cente=
r; color: rgb(136, 136, 136); font-style: italic; }

.triggerArrow { transition: 0.1s linear; }

.colTrigger[data-state=3D"open"] .triggerArrow.svelte-v7ahsn.svelte-v7ahsn =
{ transform: rotate(90deg); transition: 0.1s linear; }

.colTrigger[data-state=3D"open"] .folder-name.svelte-v7ahsn.svelte-v7ahsn {=
 font-weight: 600; transition: 0.1s linear; }
------MultipartBoundary--xhwtFZq0UDxOmF7548m6subkWxGIdLYuwRmj2FBwDc----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://z-cdn.chatglm.cn/z-ai/frontend/prod-fe-1.0.78/_app/immutable/assets/DeployProjectButton.z_X1yUjy.css

@charset "utf-8";

.deploy-html-button.svelte-56cskk { background: linear-gradient(124.94deg, =
rgb(25, 26, 29) 11.04%, rgb(116, 118, 137) 96.98%, rgb(25, 26, 29) 164.2%);=
 }

.wechat-dialog.svelte-56cskk { border: 1px solid rgba(0, 0, 0, 0.1); box-sh=
adow: rgba(0, 0, 0, 0.1) 0px 1px 4px; border-radius: 16px; top: 60%; left: =
-194px; width: 190px; overflow: hidden; }
------MultipartBoundary--xhwtFZq0UDxOmF7548m6subkWxGIdLYuwRmj2FBwDc----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://z-cdn.chatglm.cn/z-ai/frontend/prod-fe-1.0.78/_app/immutable/assets/2.BhAyWm1G.css

@charset "utf-8";

.scrollbar-hidden.svelte-141e0sl:active::-webkit-scrollbar-thumb, .scrollba=
r-hidden.svelte-141e0sl:focus::-webkit-scrollbar-thumb, .scrollbar-hidden.s=
velte-141e0sl:hover::-webkit-scrollbar-thumb { visibility: visible; }

.scrollbar-hidden.svelte-141e0sl::-webkit-scrollbar-thumb { visibility: hid=
den; }

input.svelte-1vx7r9s::-webkit-outer-spin-button, input.svelte-1vx7r9s::-web=
kit-inner-spin-button { appearance: none; margin: 0px; }

.tabs.svelte-1vx7r9s::-webkit-scrollbar { display: none; }

.tabs.svelte-1vx7r9s { scrollbar-width: none; }

.text-gradient.svelte-3yuvb0 { background: linear-gradient(160.13deg, rgb(2=
5, 26, 29) -3.97%, rgb(116, 118, 137), rgb(25, 26, 29) 218.47%) text; -webk=
it-text-fill-color: transparent; }

.button-secondary.svelte-3yuvb0 { border: 1px solid rgba(0, 0, 0, 0.1); col=
or: rgb(0, 0, 0); opacity: 0.8; }

.dark .button-secondary.svelte-3yuvb0 { border-color: rgba(255, 255, 255, 0=
.1); color: rgb(255, 255, 255); }

.dark .signin-btn-primary.svelte-3yuvb0 { background-color: rgb(72, 74, 88)=
; }

.dark .text-gradient.svelte-3yuvb0 { background: linear-gradient(136.4deg, =
rgb(255, 255, 255) -13.32%, rgb(172, 174, 189) 58.94%, rgb(255, 255, 255) 1=
50.59%) text; -webkit-text-fill-color: transparent; }

.desc.svelte-3yuvb0 { font-weight: 400; font-size: 14px; line-height: 24px;=
 text-align: center; vertical-align: bottom; padding-left: 8px; padding-rig=
ht: 8px; }

.dark .desc.svelte-3yuvb0 { color: rgb(255, 255, 255); }

.drawer-portal { position: relative; z-index: 999; }

@keyframes svelte-rq5mj6-l {=20
  100% { clip-path: inset(0px -1ch 0px 0px); }
}
------MultipartBoundary--xhwtFZq0UDxOmF7548m6subkWxGIdLYuwRmj2FBwDc----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://z-cdn.chatglm.cn/z-ai/frontend/prod-fe-1.0.78/_app/immutable/assets/ComboBox.DbY80u99.css

@charset "utf-8";

.ppt-notify-signin-modal { display: flex; align-items: center; justify-cont=
ent: center; }

@font-face { font-family: KaTeX_AMS; font-style: normal; font-weight: 400; =
src: url("./KaTeX_AMS-Regular.BQhdFMY1.woff2") format("woff2"), url("./KaTe=
X_AMS-Regular.DMm9YOAa.woff") format("woff"), url("./KaTeX_AMS-Regular.DRgg=
AlZN.ttf") format("truetype"); }

@font-face { font-family: KaTeX_Caligraphic; font-style: normal; font-weigh=
t: 700; src: url("./KaTeX_Caligraphic-Bold.Dq_IR9rO.woff2") format("woff2")=
, url("./KaTeX_Caligraphic-Bold.BEiXGLvX.woff") format("woff"), url("./KaTe=
X_Caligraphic-Bold.ATXxdsX0.ttf") format("truetype"); }

@font-face { font-family: KaTeX_Caligraphic; font-style: normal; font-weigh=
t: 400; src: url("./KaTeX_Caligraphic-Regular.Di6jR-x-.woff2") format("woff=
2"), url("./KaTeX_Caligraphic-Regular.CTRA-rTL.woff") format("woff"), url("=
./KaTeX_Caligraphic-Regular.wX97UBjC.ttf") format("truetype"); }

@font-face { font-family: KaTeX_Fraktur; font-style: normal; font-weight: 7=
00; src: url("./KaTeX_Fraktur-Bold.CL6g_b3V.woff2") format("woff2"), url(".=
/KaTeX_Fraktur-Bold.BsDP51OF.woff") format("woff"), url("./KaTeX_Fraktur-Bo=
ld.BdnERNNW.ttf") format("truetype"); }

@font-face { font-family: KaTeX_Fraktur; font-style: normal; font-weight: 4=
00; src: url("./KaTeX_Fraktur-Regular.CTYiF6lA.woff2") format("woff2"), url=
("./KaTeX_Fraktur-Regular.Dxdc4cR9.woff") format("woff"), url("./KaTeX_Frak=
tur-Regular.CB_wures.ttf") format("truetype"); }

@font-face { font-family: KaTeX_Main; font-style: normal; font-weight: 700;=
 src: url("./KaTeX_Main-Bold.Cx986IdX.woff2") format("woff2"), url("./KaTeX=
_Main-Bold.Jm3AIy58.woff") format("woff"), url("./KaTeX_Main-Bold.waoOVXN0.=
ttf") format("truetype"); }

@font-face { font-family: KaTeX_Main; font-style: italic; font-weight: 700;=
 src: url("./KaTeX_Main-BoldItalic.DxDJ3AOS.woff2") format("woff2"), url(".=
/KaTeX_Main-BoldItalic.SpSLRI95.woff") format("woff"), url("./KaTeX_Main-Bo=
ldItalic.DzxPMmG6.ttf") format("truetype"); }

@font-face { font-family: KaTeX_Main; font-style: italic; font-weight: 400;=
 src: url("./KaTeX_Main-Italic.NWA7e6Wa.woff2") format("woff2"), url("./KaT=
eX_Main-Italic.BMLOBm91.woff") format("woff"), url("./KaTeX_Main-Italic.3We=
nGoN9.ttf") format("truetype"); }

@font-face { font-family: KaTeX_Main; font-style: normal; font-weight: 400;=
 src: url("./KaTeX_Main-Regular.B22Nviop.woff2") format("woff2"), url("./Ka=
TeX_Main-Regular.Dr94JaBh.woff") format("woff"), url("./KaTeX_Main-Regular.=
ypZvNtVU.ttf") format("truetype"); }

@font-face { font-family: KaTeX_Math; font-style: italic; font-weight: 700;=
 src: url("./KaTeX_Math-BoldItalic.CZnvNsCZ.woff2") format("woff2"), url(".=
/KaTeX_Math-BoldItalic.iY-2wyZ7.woff") format("woff"), url("./KaTeX_Math-Bo=
ldItalic.B3XSjfu4.ttf") format("truetype"); }

@font-face { font-family: KaTeX_Math; font-style: italic; font-weight: 400;=
 src: url("./KaTeX_Math-Italic.t53AETM-.woff2") format("woff2"), url("./KaT=
eX_Math-Italic.DA0__PXp.woff") format("woff"), url("./KaTeX_Math-Italic.flO=
r_0UB.ttf") format("truetype"); }

@font-face { font-family: KaTeX_SansSerif; font-style: normal; font-weight:=
 700; src: url("./KaTeX_SansSerif-Bold.D1sUS0GD.woff2") format("woff2"), ur=
l("./KaTeX_SansSerif-Bold.DbIhKOiC.woff") format("woff"), url("./KaTeX_Sans=
Serif-Bold.CFMepnvq.ttf") format("truetype"); }

@font-face { font-family: KaTeX_SansSerif; font-style: italic; font-weight:=
 400; src: url("./KaTeX_SansSerif-Italic.C3H0VqGB.woff2") format("woff2"), =
url("./KaTeX_SansSerif-Italic.DN2j7dab.woff") format("woff"), url("./KaTeX_=
SansSerif-Italic.YYjJ1zSn.ttf") format("truetype"); }

@font-face { font-family: KaTeX_SansSerif; font-style: normal; font-weight:=
 400; src: url("./KaTeX_SansSerif-Regular.DDBCnlJ7.woff2") format("woff2"),=
 url("./KaTeX_SansSerif-Regular.CS6fqUqJ.woff") format("woff"), url("./KaTe=
X_SansSerif-Regular.BNo7hRIc.ttf") format("truetype"); }

@font-face { font-family: KaTeX_Script; font-style: normal; font-weight: 40=
0; src: url("./KaTeX_Script-Regular.D3wIWfF6.woff2") format("woff2"), url("=
./KaTeX_Script-Regular.D5yQViql.woff") format("woff"), url("./KaTeX_Script-=
Regular.C5JkGWo-.ttf") format("truetype"); }

@font-face { font-family: KaTeX_Size1; font-style: normal; font-weight: 400=
; src: url("./KaTeX_Size1-Regular.mCD8mA8B.woff2") format("woff2"), url("./=
KaTeX_Size1-Regular.C195tn64.woff") format("woff"), url("./KaTeX_Size1-Regu=
lar.Dbsnue_I.ttf") format("truetype"); }

@font-face { font-family: KaTeX_Size2; font-style: normal; font-weight: 400=
; src: url("./KaTeX_Size2-Regular.Dy4dx90m.woff2") format("woff2"), url("./=
KaTeX_Size2-Regular.oD1tc_U0.woff") format("woff"), url("./KaTeX_Size2-Regu=
lar.B7gKUWhC.ttf") format("truetype"); }

@font-face { font-family: KaTeX_Size3; font-style: normal; font-weight: 400=
; src: url("data:font/woff2;base64,d09GMgABAAAAAA4oAA4AAAAAHbQAAA3TAAEAAAAA=
AAAAAAAAAAAAAAAAAAAAAAAABmAAgRQIDgmcDBEICo1oijYBNgIkA14LMgAEIAWJAAeBHAyBHBv=
bGiMRdnO0IkRRkiYDgr9KsJ1NUAf2kILNxgUmgqIgq1P89vcbIcmsQbRps3vCcXdYOKSWEPEKgZ=
gQkprQQsxIXUgq0DqpGKmIvrgkeVGtEQD9DzAO29fM9jYhxZEsL2FeURH2JN4MIcTdO049NCVdx=
Q/w9NrSYFEBKTDKpLKfNkCGDc1RwjZLQcm3vqJ2UW9Xfa3tgAHz6ivp6vgC2yD4/6352ndnN0X0=
TL7seypkjZlMsjmZnf0Mm5Q+JykRWQBKCVCVPbARPXWyQtb5VgLB6Biq7/Uixcj2WGqdI8tGSgk=
uRG+t910GKP2D7AQH0DB9FMDW/obJZ8giFI3Wg8Cvevz0M+5m0rTh7XDBlvo9Y4vm13EXmfttwI=
4mBo1EG15fxJhUiCLbiiyCf/ZA6MFAhg3pGIZGdGIVjtPn6UcMk9A/UUr9PhoNsCENw1APAq0gp=
H73e+M+0ueyHbabc3vkbcdtzcf/fiy+NxQEjf9ud/ELBHAXJ0nk4z+MXH2Ev/kWyV4k7SkvpPc9=
Qr38F6RPWnM9cN6DJ0AdD1BhtgABtmoRoFCvPsBAumNm6soZG2Gk5GyVTo2sJncSyp0jQTYoR6W=
DvTwaaEcHsxHfvuWhHA3a6bN7twRKtcGok6NsCi7jYRrM2jExsUFMxMQYuJbMhuWNOumEJy9hi2=
9Dmg5zMp/A5+hhPG19j1vBrq8JTLr8ki5VLPmG/PynJHVul440bxg5xuymHUFPBshC+nA9I1Fmw=
bRBTNHAcik3Oae0cxKoI3MOriM42UrPe51nsaGxJ+WfXubAsP84aabUlQSJ1IiE0iPETLUU4CAT=
gfXSCSpuRFRmCGbO+wSpAnzaeaCYW1VNEysRtuXCEL1kUFUbbtMv3Tilt/1c11jt3Q5bbMa84cp=
Wipp8Elw3MZhOHsOlwwVUQM3lAR35JiFQbaYCRnMF2lxAWoOg2gyoIV4PouX8HytNIfLhqpJtXB=
4vjiViUI8IJ7bkC4ikkQvKksnOTKICwnqWSZ9YS5f0WCxmpgjbIq7EJcM4aI2nmhLNY2JIUgOjX=
ZFWBHb+x5oh6cwb0Tv1ackHdKi0I9OO2wE9aogIOn540CCCziyhN+IaejtgAONKznHlHyutPrHG=
wCx9S6B8kfS4Mfi4Eyv7OU730bT1SCBjt834cXsf43zVjPUqqJjgrjeGnBxSG4aYAKFuVbeCfkD=
IjAqMb6yLNIbCuvXhMH2/+k2vkNpkORhR59N1CkzoOENvneIosjYmuTxlhUzaGEJQ/iWqx4dmwp=
mKjrwTiTGTCVozNAYqk/zXOndWxuWSmJkQpJw3pK5KX6QrLt5LATMqpmPAQhkhK6PUjzHUn7E0g=
HE0kPE0iKkolgkUx9SZmVAdDgpffdyJKg3k7VmzYGCwVXGz/tXmkOIp+vcWs+EMuhhvN0h9uhfz=
WJziBQmCREGSIFmQIkgVpAnSBRmC//6hkLZwaVhwxlrJSOdqlFtOYxlau9F2QN5Y98xmIAsiM1H=
Vp2VFX+DHHGg6Ecjh3vmqtidX3qHI2qycTk/iwxSt5UzTmEP92ZBnEWTk4Mx8Mpl78ZDokxg/KW=
b+Q0QkvdKVmq3TMW+RXEgrsziSAfNXFMhDc60N5N9jQzjfO0kBKpUZl0ZmwJ41j/B9Hz6wmRaJB=
84niNmQrzp9eSlQCDDzazGDdVi3P36VZQ+Jy4f9UBNp+3zTjqI4abaFAm+GShVaXlsGdF3FYzZc=
DI6cori4kMxUECl9IjJZpzkvitAoxKue+90pDMvcKRxLl53TmOKCmV/xRolNKSqqUxc6LStOETm=
FOiLZZptlZepcKiAzteG8PEdpnQpbOMNcMsR4RR2Bs0cKFEvSmIjAFcnarqwUL4lDhHmnVkwu1I=
wshbiCcgvOheZuYyOteufZZwlcTlLgnZ3o/WcYdzZHW/WGaqaVfmTZ1aWCceJjkbZqsfbkOtcFl=
UZM/jy+hXHDbaUobWqqXaeWobbLO99yG5N3U4wxco0rQGGcOLASFMXeJoham8M+/x6O2WywK2l4=
HGbq1CoUyC/IZikQhdq3SiuNrvAEj0AVu9x2x3lp/xWzahaxidezFVtdcb5uEnzyl0ZmYiuKI0e=
xvCd4Xc9CV1KB0db00z92wDPde0kukbvZIWN6jUWFTmPIC/Y4UPCm8UfDTFZpZNon1qLFTkBhxz=
B+FjQRA2Q/YRJT8pQigslMaUpFyAG8TMlXigiqmAZX4xgijKjRlGpLE0GdplRfCaJo0JQaSxNBk=
6ZmMzcya0FmrcisDdn0Q3HI2sWSppYigmlM1XT/kLQZSNpMJG0WkjYbSZuDpM1F0uYhFc1HxU4m=
1QJjDK6iL0S5uSj5rgXc3RejEigtcRBtqYPQsiTskmO5vosV+q4VGIKbOkDg0jtRrq+Em1YloaT=
Far3EGr1EUC8R0kus1Uus00usL97ABr2BjXoDm/QGNhuWtMVBKOwg/i78lT7hBsAvDmwHc/ao3v=
mUbBmhjeYySZNWvGkfZAgISDSaDo1SVpzGDsAEkF8B+gEapViUoZgUWXcRIGFZNm6gWbAKk0bp0=
k1MHG9fLYtV4iS2SmLEQFARzRcnf9PUS0LVn05/J9MiRRBU3v2IrvW974v4N00L7ZMk0wXP1409=
CHo/an8zTRHD3eSJ6m8D4YMkZNl3M79sqeuAsr/m3f+8/yl7A50aiAEJgeBeMWzu7ui9UfUBCe2=
TIqZIoOd/3/udRBOQidQZUERzb2/VwZN1H/Sju82ew2H2Wfr6qvfVf3hqwDvAIpkQVFy4B9Pe9e=
4/XvPeceu7h3dvO56iJPf0+A6cqA2ip18ER+iFgggiuOkvj24bby0N9j2UHIkgqIt+sVgfodC4Y=
ghLSMjSZbH0VR/6dMDrYJeKHilKTemt6v6kvzvn3/RrdWtr0GoN/xL+Sex/cPYLUpepx9cz/D46=
UPU5KXgAQa+NDps1v6J3xP1i2HtaDB0M9aX2deA7SYff//+gUCovMmIK/qfsFcOk+4Y5ZN97XlG=
6zebqtMbKgeRFi51vnxTQYBUik2rS/Cn6PC8ADR8FGxsRPB82dzfND90gIcshOcYUkfjherBz53=
odpm6TP8txlwOZ71xmfHHOvq053qFF/MRlS3jP0ELudrf2OeN8DHvp6ZceLe8qKYvWz/7yp0u4d=
KPfli3CYq0O13Ih71mylJ80tOi10On8wi+F4+LWgDPeJ30msSQt9/vkmHq9/Lvo2b461mP801v3=
W4xTcs6CbvF9UDdrSt+A8OUbpSh55qAUFXWznBBfdeJ8a4d7ugT5tvxUza3h9m4H7ptTqiG4z0g=
5dc0X29OcGlhpGFMpQo9ytTS+NViZpNdvU4kWx+LKxNY10kQ1yqGXrhe4/1nvP7E+nd5A92TtaR=
plbHSqoIdOqtRWti+fkB5/n1+/VvCmz12pG1kpQWsfi1ftlBobm0bpngs16CHkbIwdLnParxtTV=
3QYRlfJ0KFskH7pdN/YDn+yRuSd7sNH3aO0DYPggk6uWuXrfOc+fa3VTxFVvKaNxHsiHmsXyCLI=
E5yuOeN3/Jdf8HBL/5M6shjyhxHx9BjB1O0+4NLOnjLLSxwO7ukN4jMbOIcD879KLSi6Pk61Oqm=
2377n8079PXEEQ7cy7OKEC9nbpet118fxweTafpt69x/Bt8UqGzNQt7aelpc44dn5cqhwf71+qK=
p/Zf/+a0zcizOUWpl/iBcSXip0pplkatCchoH5c5aUM8I7/dWxAej8WicPL1URFZ9BDJelUwEwT=
kGqUhgSlydVes95YdXvhh9Gfz/aeFWvgVb4tuLbcv4+wLdutVZv/cUonwBD/6eDlE0aSiKK/uoH=
3+J1wDE/jMVqY2ysGufN84oIXB0sPzy8ollX/LegY74DgJXJR57sn+VGza0x3DnuIgABFM15Lma=
jjjsNlYj+JEZGbuRYcAMOWxFkPN2w6Wd46xo4gVWQR/X4lyI/R6K/YK0110GzudPRW7Y+UOBGTf=
NNzHeYT0fiH0taunBpq9HEW8OKSaBGj21L0MqenEmNRWBAWDWAk4CpNoEZJ2tTaPFgbQYj8HxtF=
ilErs3BTRwT8uO1NXQaWfIotchmPkAF5mMBAliEmZiOGVgCG9LgRzpscMAOOwowlT3JhusdazXG=
SC/hxR3UlmWVwWHpOIKheqONvjyhSiTHIkVUco5bnji8m//zL7PKaT1Vl5I6UE609f+gkr6MZKV=
yKc7zJRmCahLsdlyA5fdQkRSan9LgnnLEyGSkaKJCJog0wAgvepWBt80+1yKln1bMVtCljfNWDu=
eKLsWwaEbBSfSPTEmVRsUcYYMnEjcjeyCZzBXK9E9BYBXLKjOSpUDR+nEV3TFSUdQaz+ot98Qxg=
Xwx0GQ+EEUAKB2qZPkQQ0GqFD8UPFMqyaCHM24BZmSGic9EYMagKizOw9Hz50DMrDLrqqLkTAhp=
lMictiCAx5S3BIUQdeJeLnBy2CNtMfz6cV4u8XKoFZQesbf9YZiIERiHjaNodDW6LgcirX/mPnJ=
IkBGDUpTBhSa0EIr38D5hCIszhCM8URGBqImoWjpvpt1ebu/v3Gl3qJfMnNM+9V+kiRFyROTPHQ=
WOcs1dNW94/ukKMPZBvDi55i5CttdeJz84DLngLqjcdwEZ87bFFR8CIG35OAkDVN6VRDZ7aq67N=
teYqZ2lpT8oYB2CytoBd6VuAx4WgiAsnuj3WohG+LugzXiQRDeM3XYXlULv4dp5VFYC") forma=
t("woff2"), url("./KaTeX_Size3-Regular.CTq5MqoE.woff") format("woff"), url(=
"./KaTeX_Size3-Regular.DgpXs0kz.ttf") format("truetype"); }

@font-face { font-family: KaTeX_Size4; font-style: normal; font-weight: 400=
; src: url("./KaTeX_Size4-Regular.Dl5lxZxV.woff2") format("woff2"), url("./=
KaTeX_Size4-Regular.BF-4gkZK.woff") format("woff"), url("./KaTeX_Size4-Regu=
lar.DWFBv043.ttf") format("truetype"); }

@font-face { font-family: KaTeX_Typewriter; font-style: normal; font-weight=
: 400; src: url("./KaTeX_Typewriter-Regular.CO6r4hn1.woff2") format("woff2"=
), url("./KaTeX_Typewriter-Regular.C0xS9mPB.woff") format("woff"), url("./K=
aTeX_Typewriter-Regular.D3Ib7_Hf.ttf") format("truetype"); }

.katex { font: 1.21em / 1.2 KaTeX_Main, "Times New Roman", serif; text-inde=
nt: 0px; text-rendering: auto; }

.katex * { border-color: currentcolor; }

.katex .katex-version::after { content: "0.16.21"; }

.katex .katex-mathml { clip: rect(1px, 1px, 1px, 1px); border: 0px; height:=
 1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; }

.katex .katex-html > .newline { display: block; }

.katex .base { position: relative; white-space: nowrap; width: min-content;=
 }

.katex .base, .katex .strut { display: inline-block; }

.katex .textbf { font-weight: 700; }

.katex .textit { font-style: italic; }

.katex .textrm { font-family: KaTeX_Main; }

.katex .textsf { font-family: KaTeX_SansSerif; }

.katex .texttt { font-family: KaTeX_Typewriter; }

.katex .mathnormal { font-family: KaTeX_Math; font-style: italic; }

.katex .mathit { font-family: KaTeX_Main; font-style: italic; }

.katex .mathrm { font-style: normal; }

.katex .mathbf { font-family: KaTeX_Main; font-weight: 700; }

.katex .boldsymbol { font-family: KaTeX_Math; font-style: italic; font-weig=
ht: 700; }

.katex .amsrm, .katex .mathbb, .katex .textbb { font-family: KaTeX_AMS; }

.katex .mathcal { font-family: KaTeX_Caligraphic; }

.katex .mathfrak, .katex .textfrak { font-family: KaTeX_Fraktur; }

.katex .mathboldfrak, .katex .textboldfrak { font-family: KaTeX_Fraktur; fo=
nt-weight: 700; }

.katex .mathtt { font-family: KaTeX_Typewriter; }

.katex .mathscr, .katex .textscr { font-family: KaTeX_Script; }

.katex .mathsf, .katex .textsf { font-family: KaTeX_SansSerif; }

.katex .mathboldsf, .katex .textboldsf { font-family: KaTeX_SansSerif; font=
-weight: 700; }

.katex .mathitsf, .katex .mathsfit, .katex .textitsf { font-family: KaTeX_S=
ansSerif; font-style: italic; }

.katex .mainrm { font-family: KaTeX_Main; font-style: normal; }

.katex .vlist-t { border-collapse: collapse; display: inline-table; table-l=
ayout: fixed; }

.katex .vlist-r { display: table-row; }

.katex .vlist { display: table-cell; position: relative; vertical-align: bo=
ttom; }

.katex .vlist > span { display: block; height: 0px; position: relative; }

.katex .vlist > span > span { display: inline-block; }

.katex .vlist > span > .pstrut { overflow: hidden; width: 0px; }

.katex .vlist-t2 { margin-right: -2px; }

.katex .vlist-s { display: table-cell; font-size: 1px; min-width: 2px; vert=
ical-align: bottom; width: 2px; }

.katex .vbox { align-items: baseline; display: inline-flex; flex-direction:=
 column; }

.katex .hbox { width: 100%; }

.katex .hbox, .katex .thinbox { display: inline-flex; flex-direction: row; =
}

.katex .thinbox { max-width: 0px; width: 0px; }

.katex .msupsub { text-align: left; }

.katex .mfrac > span > span { text-align: center; }

.katex .mfrac .frac-line { border-bottom-style: solid; display: inline-bloc=
k; width: 100%; }

.katex .hdashline, .katex .hline, .katex .mfrac .frac-line, .katex .overlin=
e .overline-line, .katex .rule, .katex .underline .underline-line { min-hei=
ght: 1px; }

.katex .mspace { display: inline-block; }

.katex .clap, .katex .llap, .katex .rlap { position: relative; width: 0px; =
}

.katex .clap > .inner, .katex .llap > .inner, .katex .rlap > .inner { posit=
ion: absolute; }

.katex .clap > .fix, .katex .llap > .fix, .katex .rlap > .fix { display: in=
line-block; }

.katex .llap > .inner { right: 0px; }

.katex .clap > .inner, .katex .rlap > .inner { left: 0px; }

.katex .clap > .inner > span { margin-left: -50%; margin-right: 50%; }

.katex .rule { border: 0px solid; display: inline-block; position: relative=
; }

.katex .hline, .katex .overline .overline-line, .katex .underline .underlin=
e-line { border-bottom-style: solid; display: inline-block; width: 100%; }

.katex .hdashline { border-bottom-style: dashed; display: inline-block; wid=
th: 100%; }

.katex .sqrt > .root { margin-left: 0.277778em; margin-right: -0.555556em; =
}

.katex .fontsize-ensurer.reset-size1.size1, .katex .sizing.reset-size1.size=
1 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size1.size2, .katex .sizing.reset-size1.size=
2 { font-size: 1.2em; }

.katex .fontsize-ensurer.reset-size1.size3, .katex .sizing.reset-size1.size=
3 { font-size: 1.4em; }

.katex .fontsize-ensurer.reset-size1.size4, .katex .sizing.reset-size1.size=
4 { font-size: 1.6em; }

.katex .fontsize-ensurer.reset-size1.size5, .katex .sizing.reset-size1.size=
5 { font-size: 1.8em; }

.katex .fontsize-ensurer.reset-size1.size6, .katex .sizing.reset-size1.size=
6 { font-size: 2em; }

.katex .fontsize-ensurer.reset-size1.size7, .katex .sizing.reset-size1.size=
7 { font-size: 2.4em; }

.katex .fontsize-ensurer.reset-size1.size8, .katex .sizing.reset-size1.size=
8 { font-size: 2.88em; }

.katex .fontsize-ensurer.reset-size1.size9, .katex .sizing.reset-size1.size=
9 { font-size: 3.456em; }

.katex .fontsize-ensurer.reset-size1.size10, .katex .sizing.reset-size1.siz=
e10 { font-size: 4.148em; }

.katex .fontsize-ensurer.reset-size1.size11, .katex .sizing.reset-size1.siz=
e11 { font-size: 4.976em; }

.katex .fontsize-ensurer.reset-size2.size1, .katex .sizing.reset-size2.size=
1 { font-size: 0.833333em; }

.katex .fontsize-ensurer.reset-size2.size2, .katex .sizing.reset-size2.size=
2 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size2.size3, .katex .sizing.reset-size2.size=
3 { font-size: 1.16667em; }

.katex .fontsize-ensurer.reset-size2.size4, .katex .sizing.reset-size2.size=
4 { font-size: 1.33333em; }

.katex .fontsize-ensurer.reset-size2.size5, .katex .sizing.reset-size2.size=
5 { font-size: 1.5em; }

.katex .fontsize-ensurer.reset-size2.size6, .katex .sizing.reset-size2.size=
6 { font-size: 1.66667em; }

.katex .fontsize-ensurer.reset-size2.size7, .katex .sizing.reset-size2.size=
7 { font-size: 2em; }

.katex .fontsize-ensurer.reset-size2.size8, .katex .sizing.reset-size2.size=
8 { font-size: 2.4em; }

.katex .fontsize-ensurer.reset-size2.size9, .katex .sizing.reset-size2.size=
9 { font-size: 2.88em; }

.katex .fontsize-ensurer.reset-size2.size10, .katex .sizing.reset-size2.siz=
e10 { font-size: 3.45667em; }

.katex .fontsize-ensurer.reset-size2.size11, .katex .sizing.reset-size2.siz=
e11 { font-size: 4.14667em; }

.katex .fontsize-ensurer.reset-size3.size1, .katex .sizing.reset-size3.size=
1 { font-size: 0.714286em; }

.katex .fontsize-ensurer.reset-size3.size2, .katex .sizing.reset-size3.size=
2 { font-size: 0.857143em; }

.katex .fontsize-ensurer.reset-size3.size3, .katex .sizing.reset-size3.size=
3 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size3.size4, .katex .sizing.reset-size3.size=
4 { font-size: 1.14286em; }

.katex .fontsize-ensurer.reset-size3.size5, .katex .sizing.reset-size3.size=
5 { font-size: 1.28571em; }

.katex .fontsize-ensurer.reset-size3.size6, .katex .sizing.reset-size3.size=
6 { font-size: 1.42857em; }

.katex .fontsize-ensurer.reset-size3.size7, .katex .sizing.reset-size3.size=
7 { font-size: 1.71429em; }

.katex .fontsize-ensurer.reset-size3.size8, .katex .sizing.reset-size3.size=
8 { font-size: 2.05714em; }

.katex .fontsize-ensurer.reset-size3.size9, .katex .sizing.reset-size3.size=
9 { font-size: 2.46857em; }

.katex .fontsize-ensurer.reset-size3.size10, .katex .sizing.reset-size3.siz=
e10 { font-size: 2.96286em; }

.katex .fontsize-ensurer.reset-size3.size11, .katex .sizing.reset-size3.siz=
e11 { font-size: 3.55429em; }

.katex .fontsize-ensurer.reset-size4.size1, .katex .sizing.reset-size4.size=
1 { font-size: 0.625em; }

.katex .fontsize-ensurer.reset-size4.size2, .katex .sizing.reset-size4.size=
2 { font-size: 0.75em; }

.katex .fontsize-ensurer.reset-size4.size3, .katex .sizing.reset-size4.size=
3 { font-size: 0.875em; }

.katex .fontsize-ensurer.reset-size4.size4, .katex .sizing.reset-size4.size=
4 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size4.size5, .katex .sizing.reset-size4.size=
5 { font-size: 1.125em; }

.katex .fontsize-ensurer.reset-size4.size6, .katex .sizing.reset-size4.size=
6 { font-size: 1.25em; }

.katex .fontsize-ensurer.reset-size4.size7, .katex .sizing.reset-size4.size=
7 { font-size: 1.5em; }

.katex .fontsize-ensurer.reset-size4.size8, .katex .sizing.reset-size4.size=
8 { font-size: 1.8em; }

.katex .fontsize-ensurer.reset-size4.size9, .katex .sizing.reset-size4.size=
9 { font-size: 2.16em; }

.katex .fontsize-ensurer.reset-size4.size10, .katex .sizing.reset-size4.siz=
e10 { font-size: 2.5925em; }

.katex .fontsize-ensurer.reset-size4.size11, .katex .sizing.reset-size4.siz=
e11 { font-size: 3.11em; }

.katex .fontsize-ensurer.reset-size5.size1, .katex .sizing.reset-size5.size=
1 { font-size: 0.555556em; }

.katex .fontsize-ensurer.reset-size5.size2, .katex .sizing.reset-size5.size=
2 { font-size: 0.666667em; }

.katex .fontsize-ensurer.reset-size5.size3, .katex .sizing.reset-size5.size=
3 { font-size: 0.777778em; }

.katex .fontsize-ensurer.reset-size5.size4, .katex .sizing.reset-size5.size=
4 { font-size: 0.888889em; }

.katex .fontsize-ensurer.reset-size5.size5, .katex .sizing.reset-size5.size=
5 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size5.size6, .katex .sizing.reset-size5.size=
6 { font-size: 1.11111em; }

.katex .fontsize-ensurer.reset-size5.size7, .katex .sizing.reset-size5.size=
7 { font-size: 1.33333em; }

.katex .fontsize-ensurer.reset-size5.size8, .katex .sizing.reset-size5.size=
8 { font-size: 1.6em; }

.katex .fontsize-ensurer.reset-size5.size9, .katex .sizing.reset-size5.size=
9 { font-size: 1.92em; }

.katex .fontsize-ensurer.reset-size5.size10, .katex .sizing.reset-size5.siz=
e10 { font-size: 2.30444em; }

.katex .fontsize-ensurer.reset-size5.size11, .katex .sizing.reset-size5.siz=
e11 { font-size: 2.76444em; }

.katex .fontsize-ensurer.reset-size6.size1, .katex .sizing.reset-size6.size=
1 { font-size: 0.5em; }

.katex .fontsize-ensurer.reset-size6.size2, .katex .sizing.reset-size6.size=
2 { font-size: 0.6em; }

.katex .fontsize-ensurer.reset-size6.size3, .katex .sizing.reset-size6.size=
3 { font-size: 0.7em; }

.katex .fontsize-ensurer.reset-size6.size4, .katex .sizing.reset-size6.size=
4 { font-size: 0.8em; }

.katex .fontsize-ensurer.reset-size6.size5, .katex .sizing.reset-size6.size=
5 { font-size: 0.9em; }

.katex .fontsize-ensurer.reset-size6.size6, .katex .sizing.reset-size6.size=
6 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size6.size7, .katex .sizing.reset-size6.size=
7 { font-size: 1.2em; }

.katex .fontsize-ensurer.reset-size6.size8, .katex .sizing.reset-size6.size=
8 { font-size: 1.44em; }

.katex .fontsize-ensurer.reset-size6.size9, .katex .sizing.reset-size6.size=
9 { font-size: 1.728em; }

.katex .fontsize-ensurer.reset-size6.size10, .katex .sizing.reset-size6.siz=
e10 { font-size: 2.074em; }

.katex .fontsize-ensurer.reset-size6.size11, .katex .sizing.reset-size6.siz=
e11 { font-size: 2.488em; }

.katex .fontsize-ensurer.reset-size7.size1, .katex .sizing.reset-size7.size=
1 { font-size: 0.416667em; }

.katex .fontsize-ensurer.reset-size7.size2, .katex .sizing.reset-size7.size=
2 { font-size: 0.5em; }

.katex .fontsize-ensurer.reset-size7.size3, .katex .sizing.reset-size7.size=
3 { font-size: 0.583333em; }

.katex .fontsize-ensurer.reset-size7.size4, .katex .sizing.reset-size7.size=
4 { font-size: 0.666667em; }

.katex .fontsize-ensurer.reset-size7.size5, .katex .sizing.reset-size7.size=
5 { font-size: 0.75em; }

.katex .fontsize-ensurer.reset-size7.size6, .katex .sizing.reset-size7.size=
6 { font-size: 0.833333em; }

.katex .fontsize-ensurer.reset-size7.size7, .katex .sizing.reset-size7.size=
7 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size7.size8, .katex .sizing.reset-size7.size=
8 { font-size: 1.2em; }

.katex .fontsize-ensurer.reset-size7.size9, .katex .sizing.reset-size7.size=
9 { font-size: 1.44em; }

.katex .fontsize-ensurer.reset-size7.size10, .katex .sizing.reset-size7.siz=
e10 { font-size: 1.72833em; }

.katex .fontsize-ensurer.reset-size7.size11, .katex .sizing.reset-size7.siz=
e11 { font-size: 2.07333em; }

.katex .fontsize-ensurer.reset-size8.size1, .katex .sizing.reset-size8.size=
1 { font-size: 0.347222em; }

.katex .fontsize-ensurer.reset-size8.size2, .katex .sizing.reset-size8.size=
2 { font-size: 0.416667em; }

.katex .fontsize-ensurer.reset-size8.size3, .katex .sizing.reset-size8.size=
3 { font-size: 0.486111em; }

.katex .fontsize-ensurer.reset-size8.size4, .katex .sizing.reset-size8.size=
4 { font-size: 0.555556em; }

.katex .fontsize-ensurer.reset-size8.size5, .katex .sizing.reset-size8.size=
5 { font-size: 0.625em; }

.katex .fontsize-ensurer.reset-size8.size6, .katex .sizing.reset-size8.size=
6 { font-size: 0.694444em; }

.katex .fontsize-ensurer.reset-size8.size7, .katex .sizing.reset-size8.size=
7 { font-size: 0.833333em; }

.katex .fontsize-ensurer.reset-size8.size8, .katex .sizing.reset-size8.size=
8 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size8.size9, .katex .sizing.reset-size8.size=
9 { font-size: 1.2em; }

.katex .fontsize-ensurer.reset-size8.size10, .katex .sizing.reset-size8.siz=
e10 { font-size: 1.44028em; }

.katex .fontsize-ensurer.reset-size8.size11, .katex .sizing.reset-size8.siz=
e11 { font-size: 1.72778em; }

.katex .fontsize-ensurer.reset-size9.size1, .katex .sizing.reset-size9.size=
1 { font-size: 0.289352em; }

.katex .fontsize-ensurer.reset-size9.size2, .katex .sizing.reset-size9.size=
2 { font-size: 0.347222em; }

.katex .fontsize-ensurer.reset-size9.size3, .katex .sizing.reset-size9.size=
3 { font-size: 0.405093em; }

.katex .fontsize-ensurer.reset-size9.size4, .katex .sizing.reset-size9.size=
4 { font-size: 0.462963em; }

.katex .fontsize-ensurer.reset-size9.size5, .katex .sizing.reset-size9.size=
5 { font-size: 0.520833em; }

.katex .fontsize-ensurer.reset-size9.size6, .katex .sizing.reset-size9.size=
6 { font-size: 0.578704em; }

.katex .fontsize-ensurer.reset-size9.size7, .katex .sizing.reset-size9.size=
7 { font-size: 0.694444em; }

.katex .fontsize-ensurer.reset-size9.size8, .katex .sizing.reset-size9.size=
8 { font-size: 0.833333em; }

.katex .fontsize-ensurer.reset-size9.size9, .katex .sizing.reset-size9.size=
9 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size9.size10, .katex .sizing.reset-size9.siz=
e10 { font-size: 1.20023em; }

.katex .fontsize-ensurer.reset-size9.size11, .katex .sizing.reset-size9.siz=
e11 { font-size: 1.43981em; }

.katex .fontsize-ensurer.reset-size10.size1, .katex .sizing.reset-size10.si=
ze1 { font-size: 0.24108em; }

.katex .fontsize-ensurer.reset-size10.size2, .katex .sizing.reset-size10.si=
ze2 { font-size: 0.289296em; }

.katex .fontsize-ensurer.reset-size10.size3, .katex .sizing.reset-size10.si=
ze3 { font-size: 0.337512em; }

.katex .fontsize-ensurer.reset-size10.size4, .katex .sizing.reset-size10.si=
ze4 { font-size: 0.385728em; }

.katex .fontsize-ensurer.reset-size10.size5, .katex .sizing.reset-size10.si=
ze5 { font-size: 0.433944em; }

.katex .fontsize-ensurer.reset-size10.size6, .katex .sizing.reset-size10.si=
ze6 { font-size: 0.48216em; }

.katex .fontsize-ensurer.reset-size10.size7, .katex .sizing.reset-size10.si=
ze7 { font-size: 0.578592em; }

.katex .fontsize-ensurer.reset-size10.size8, .katex .sizing.reset-size10.si=
ze8 { font-size: 0.694311em; }

.katex .fontsize-ensurer.reset-size10.size9, .katex .sizing.reset-size10.si=
ze9 { font-size: 0.833173em; }

.katex .fontsize-ensurer.reset-size10.size10, .katex .sizing.reset-size10.s=
ize10 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size10.size11, .katex .sizing.reset-size10.s=
ize11 { font-size: 1.19961em; }

.katex .fontsize-ensurer.reset-size11.size1, .katex .sizing.reset-size11.si=
ze1 { font-size: 0.200965em; }

.katex .fontsize-ensurer.reset-size11.size2, .katex .sizing.reset-size11.si=
ze2 { font-size: 0.241158em; }

.katex .fontsize-ensurer.reset-size11.size3, .katex .sizing.reset-size11.si=
ze3 { font-size: 0.28135em; }

.katex .fontsize-ensurer.reset-size11.size4, .katex .sizing.reset-size11.si=
ze4 { font-size: 0.321543em; }

.katex .fontsize-ensurer.reset-size11.size5, .katex .sizing.reset-size11.si=
ze5 { font-size: 0.361736em; }

.katex .fontsize-ensurer.reset-size11.size6, .katex .sizing.reset-size11.si=
ze6 { font-size: 0.401929em; }

.katex .fontsize-ensurer.reset-size11.size7, .katex .sizing.reset-size11.si=
ze7 { font-size: 0.482315em; }

.katex .fontsize-ensurer.reset-size11.size8, .katex .sizing.reset-size11.si=
ze8 { font-size: 0.578778em; }

.katex .fontsize-ensurer.reset-size11.size9, .katex .sizing.reset-size11.si=
ze9 { font-size: 0.694534em; }

.katex .fontsize-ensurer.reset-size11.size10, .katex .sizing.reset-size11.s=
ize10 { font-size: 0.833601em; }

.katex .fontsize-ensurer.reset-size11.size11, .katex .sizing.reset-size11.s=
ize11 { font-size: 1em; }

.katex .delimsizing.size1 { font-family: KaTeX_Size1; }

.katex .delimsizing.size2 { font-family: KaTeX_Size2; }

.katex .delimsizing.size3 { font-family: KaTeX_Size3; }

.katex .delimsizing.size4 { font-family: KaTeX_Size4; }

.katex .delimsizing.mult .delim-size1 > span { font-family: KaTeX_Size1; }

.katex .delimsizing.mult .delim-size4 > span { font-family: KaTeX_Size4; }

.katex .nulldelimiter { display: inline-block; width: 0.12em; }

.katex .delimcenter, .katex .op-symbol { position: relative; }

.katex .op-symbol.small-op { font-family: KaTeX_Size1; }

.katex .op-symbol.large-op { font-family: KaTeX_Size2; }

.katex .accent > .vlist-t, .katex .op-limits > .vlist-t { text-align: cente=
r; }

.katex .accent .accent-body { position: relative; }

.katex .accent .accent-body:not(.accent-full) { width: 0px; }

.katex .overlay { display: block; }

.katex .mtable .vertical-separator { display: inline-block; min-width: 1px;=
 }

.katex .mtable .arraycolsep { display: inline-block; }

.katex .mtable .col-align-c > .vlist-t { text-align: center; }

.katex .mtable .col-align-l > .vlist-t { text-align: left; }

.katex .mtable .col-align-r > .vlist-t { text-align: right; }

.katex .svg-align { text-align: left; }

.katex svg { fill: currentcolor; stroke: currentcolor; fill-rule: nonzero; =
fill-opacity: 1; stroke-width: 1; stroke-linecap: butt; stroke-linejoin: mi=
ter; stroke-miterlimit: 4; stroke-dasharray: none; stroke-dashoffset: 0; st=
roke-opacity: 1; display: block; height: inherit; position: absolute; width=
: 100%; }

.katex svg path { stroke: none; }

.katex img { border-style: none; max-height: none; max-width: none; min-hei=
ght: 0px; min-width: 0px; }

.katex .stretchy { display: block; overflow: hidden; position: relative; wi=
dth: 100%; }

.katex .stretchy::after, .katex .stretchy::before { content: ""; }

.katex .hide-tail { overflow: hidden; position: relative; width: 100%; }

.katex .halfarrow-left { left: 0px; overflow: hidden; position: absolute; w=
idth: 50.2%; }

.katex .halfarrow-right { overflow: hidden; position: absolute; right: 0px;=
 width: 50.2%; }

.katex .brace-left { left: 0px; overflow: hidden; position: absolute; width=
: 25.1%; }

.katex .brace-center { left: 25%; overflow: hidden; position: absolute; wid=
th: 50%; }

.katex .brace-right { overflow: hidden; position: absolute; right: 0px; wid=
th: 25.1%; }

.katex .x-arrow-pad { padding: 0px 0.5em; }

.katex .cd-arrow-pad { padding: 0px 0.55556em 0px 0.27778em; }

.katex .mover, .katex .munder, .katex .x-arrow { text-align: center; }

.katex .boxpad { padding: 0px 0.3em; }

.katex .fbox, .katex .fcolorbox { border: 0.04em solid; box-sizing: border-=
box; }

.katex .cancel-pad { padding: 0px 0.2em; }

.katex .cancel-lap { margin-left: -0.2em; margin-right: -0.2em; }

.katex .sout { border-bottom-style: solid; border-bottom-width: 0.08em; }

.katex .angl { border-right: 0.049em solid; border-top: 0.049em solid; box-=
sizing: border-box; margin-right: 0.03889em; }

.katex .anglpad { padding: 0px 0.03889em; }

.katex .eqn-num::before { content: "(" counter(katexEqnNo) ")"; counter-inc=
rement: katexEqnNo 1; }

.katex .mml-eqn-num::before { content: "(" counter(mmlEqnNo) ")"; counter-i=
ncrement: mmlEqnNo 1; }

.katex .mtr-glue { width: 50%; }

.katex .cd-vert-arrow { display: inline-block; position: relative; }

.katex .cd-label-left { display: inline-block; position: absolute; right: c=
alc(50% + 0.3em); text-align: left; }

.katex .cd-label-right { display: inline-block; left: calc(50% + 0.3em); po=
sition: absolute; text-align: right; }

.katex-display { display: block; margin: 1em 0px; text-align: center; }

.katex-display > .katex { display: block; text-align: center; white-space: =
nowrap; }

.katex-display > .katex > .katex-html { display: block; position: relative;=
 }

.katex-display > .katex > .katex-html > .tag { position: absolute; right: 0=
px; }

.katex-display.leqno > .katex > .katex-html > .tag { left: 0px; right: auto=
; }

.katex-display.fleqn > .katex { padding-left: 2em; text-align: left; }

body { counter-reset: katexEqnNo 0 mmlEqnNo 0; }

.no-scrollbar.svelte-1khe2ts { }

.no-scrollbar.svelte-1khe2ts::-webkit-scrollbar { display: none; }

p.svelte-121hp7c::after, p.svelte-121hp7c::before { content: normal; }
------MultipartBoundary--xhwtFZq0UDxOmF7548m6subkWxGIdLYuwRmj2FBwDc----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://z-cdn.chatglm.cn/z-ai/frontend/prod-fe-1.0.78/_app/immutable/assets/Switch.CyLKLEmt.css

@charset "utf-8";

.modal-content.svelte-fq1rhy { animation: 0.1s ease-out 0s 1 normal forward=
s running svelte-fq1rhy-scaleUp; }

@keyframes svelte-fq1rhy-scaleUp {=20
  0% { transform: scale(0.985); opacity: 0; }
  100% { transform: scale(1); opacity: 1; }
}
------MultipartBoundary--xhwtFZq0UDxOmF7548m6subkWxGIdLYuwRmj2FBwDc----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://z-cdn.chatglm.cn/z-ai/frontend/prod-fe-1.0.78/_app/immutable/assets/ConfirmDialog.kaSBQ3kP.css

@charset "utf-8";

@keyframes svelte-fq1rhy-scaleUp {=20
  0% { transform: scale(0.985); opacity: 0; }
  100% { transform: scale(1); opacity: 1; }
}
------MultipartBoundary--xhwtFZq0UDxOmF7548m6subkWxGIdLYuwRmj2FBwDc----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://z-cdn.chatglm.cn/z-ai/frontend/prod-fe-1.0.78/_app/immutable/assets/0.CT_5QzTf.css

@charset "utf-8";

@layer properties {
  @supports ((-webkit-hyphens:none) and (not (margin-trim:inline))) or ((-m=
oz-orient:inline) and (not (color:rgb(from red r g b)))) {
  *, ::before, ::after, ::backdrop { --tw-translate-x: 0; --tw-translate-y:=
 0; --tw-translate-z: 0; --tw-rotate-x: initial; --tw-rotate-y: initial; --=
tw-rotate-z: initial; --tw-skew-x: initial; --tw-skew-y: initial; --tw-spac=
e-y-reverse: 0; --tw-space-x-reverse: 0; --tw-border-style: solid; --tw-gra=
dient-position: initial; --tw-gradient-from: #0000; --tw-gradient-via: #000=
0; --tw-gradient-to: #0000; --tw-gradient-stops: initial; --tw-gradient-via=
-stops: initial; --tw-gradient-from-position: 0%; --tw-gradient-via-positio=
n: 50%; --tw-gradient-to-position: 100%; --tw-leading: initial; --tw-font-w=
eight: initial; --tw-tracking: initial; --tw-shadow: 0 0 #0000; --tw-shadow=
-color: initial; --tw-shadow-alpha: 100%; --tw-inset-shadow: 0 0 #0000; --t=
w-inset-shadow-color: initial; --tw-inset-shadow-alpha: 100%; --tw-ring-col=
or: initial; --tw-ring-shadow: 0 0 #0000; --tw-inset-ring-color: initial; -=
-tw-inset-ring-shadow: 0 0 #0000; --tw-ring-inset: initial; --tw-ring-offse=
t-width: 0px; --tw-ring-offset-color: #fff; --tw-ring-offset-shadow: 0 0 #0=
000; --tw-outline-style: solid; --tw-blur: initial; --tw-brightness: initia=
l; --tw-contrast: initial; --tw-grayscale: initial; --tw-hue-rotate: initia=
l; --tw-invert: initial; --tw-opacity: initial; --tw-saturate: initial; --t=
w-sepia: initial; --tw-drop-shadow: initial; --tw-drop-shadow-color: initia=
l; --tw-drop-shadow-alpha: 100%; --tw-drop-shadow-size: initial; --tw-backd=
rop-blur: initial; --tw-backdrop-brightness: initial; --tw-backdrop-contras=
t: initial; --tw-backdrop-grayscale: initial; --tw-backdrop-hue-rotate: ini=
tial; --tw-backdrop-invert: initial; --tw-backdrop-opacity: initial; --tw-b=
ackdrop-saturate: initial; --tw-backdrop-sepia: initial; --tw-duration: ini=
tial; --tw-ease: initial; --tw-contain-size: initial; --tw-contain-layout: =
initial; --tw-contain-paint: initial; --tw-contain-style: initial; --tw-sca=
le-x: 1; --tw-scale-y: 1; --tw-scale-z: 1; }
}
}

@layer theme {
  :root, :host { --font-mono: ui-monospace,SFMono-Regular,Menlo,Monaco,Cons=
olas,"Liberation Mono","Courier New",monospace; --color-red-50: rgb(254, 24=
2, 242); --color-red-100: rgb(255, 226, 226); --color-red-200: rgb(255, 202=
, 202); --color-red-300: rgb(255, 163, 164); --color-red-400: rgb(255, 101,=
 104); --color-red-500: rgb(251, 44, 54); --color-red-600: rgb(228, 0, 22);=
 --color-red-700: rgb(191, 0, 15); --color-red-800: rgb(159, 7, 18); --colo=
r-red-900: rgb(130, 24, 26); --color-orange-200: rgb(255, 215, 168); --colo=
r-orange-800: rgb(159, 45, 0); --color-amber-50: rgb(255, 251, 235); --colo=
r-amber-200: rgb(254, 230, 133); --color-amber-400: rgb(250, 188, 0); --col=
or-amber-600: rgb(218, 119, 0); --color-amber-800: rgb(149, 61, 0); --color=
-amber-900: rgb(123, 51, 6); --color-yellow-100: rgb(254, 249, 194); --colo=
r-yellow-200: rgb(255, 240, 133); --color-yellow-400: rgb(247, 201, 0); --c=
olor-yellow-500: rgb(234, 179, 0); --color-yellow-700: rgb(162, 98, 0); --c=
olor-yellow-800: rgb(135, 76, 0); --color-yellow-900: rgb(115, 62, 10); --c=
olor-green-100: rgb(220, 252, 231); --color-green-200: rgb(185, 248, 207); =
--color-green-300: rgb(123, 241, 168); --color-green-400: rgb(5, 223, 114);=
 --color-green-500: rgb(0, 198, 90); --color-green-600: rgb(0, 164, 71); --=
color-green-700: rgb(0, 129, 58); --color-green-800: rgb(1, 102, 48); --col=
or-green-900: rgb(13, 84, 43); --color-emerald-500: rgb(0, 185, 129); --col=
or-emerald-700: rgb(0, 120, 87); --color-emerald-800: rgb(0, 95, 70); --col=
or-teal-50: rgb(240, 253, 250); --color-teal-200: rgb(150, 247, 228); --col=
or-teal-500: rgb(0, 185, 166); --color-teal-800: rgb(0, 95, 90); --color-te=
al-900: rgb(11, 79, 74); --color-sky-500: rgb(0, 165, 234); --color-blue-50=
: rgb(239, 246, 255); --color-blue-100: rgb(219, 234, 254); --color-blue-20=
0: rgb(190, 219, 255); --color-blue-300: rgb(145, 197, 255); --color-blue-4=
00: rgb(86, 162, 255); --color-blue-500: rgb(50, 128, 255); --color-blue-60=
0: rgb(21, 93, 252); --color-blue-700: rgb(20, 71, 230); --color-blue-800: =
rgb(25, 60, 184); --color-blue-900: rgb(28, 57, 142); --color-purple-100: r=
gb(243, 232, 255); --color-purple-200: rgb(233, 213, 255); --color-purple-5=
00: rgb(171, 78, 255); --color-purple-800: rgb(110, 17, 176); --color-purpl=
e-900: rgb(89, 22, 139); --color-rose-500: rgb(255, 35, 87); --color-stone-=
700: rgb(68, 64, 59); --color-black: #000; --color-white: #fff; --spacing: =
.25rem; --text-xs: .75rem; --text-xs--line-height: calc(1/.75); --text-sm: =
.875rem; --text-sm--line-height: calc(1.25/.875); --text-base: 1rem; --text=
-base--line-height: 1.5; --text-lg: 1.125rem; --text-lg--line-height: calc(=
1.75/1.125); --text-xl: 1.25rem; --text-xl--line-height: calc(1.75/1.25); -=
-text-2xl: 1.5rem; --text-2xl--line-height: calc(2/1.5); --text-3xl: 1.875r=
em; --text-3xl--line-height: 1.2; --text-4xl: 2.25rem; --text-4xl--line-hei=
ght: calc(2.5/2.25); --text-5xl: 3rem; --text-5xl--line-height: 1; --text-6=
xl: 3.75rem; --text-6xl--line-height: 1; --text-7xl: 4.5rem; --text-7xl--li=
ne-height: 1; --font-weight-normal: 400; --font-weight-medium: 500; --font-=
weight-semibold: 600; --font-weight-bold: 700; --tracking-normal: 0em; --tr=
acking-wider: .05em; --tracking-widest: .1em; --leading-relaxed: 1.625; --r=
adius-xs: .125rem; --radius-sm: .25rem; --radius-md: .375rem; --radius-lg: =
.5rem; --radius-xl: .75rem; --radius-2xl: 1rem; --radius-3xl: 1.5rem; --eas=
e-out: cubic-bezier(0,0,.2,1); --ease-in-out: cubic-bezier(.4,0,.2,1); --an=
imate-spin: spin 1s linear infinite; --animate-ping: ping 1s cubic-bezier(0=
,0,.2,1)infinite; --animate-pulse: pulse 2s cubic-bezier(.4,0,.6,1)infinite=
; --blur-xs: 4px; --blur-sm: 8px; --blur-lg: 16px; --blur-xl: 24px; --blur-=
2xl: 40px; --default-transition-duration: .15s; --default-transition-timing=
-function: cubic-bezier(.4,0,.2,1); --default-mono-font-family: var(--font-=
mono); }
  @supports (color: color(display-p3 0 0 0%)) {
  :root, :host { --color-red-200: color(display-p3 .96956 .79815 .7943); --=
color-red-300: color(display-p3 .95692 .65189 .64512); --color-red-400: col=
or(display-p3 .93353 .43168 .42349); --color-red-600: color(display-p3 .830=
32 .14038 .1332); --color-red-700: color(display-p3 .69274 .11623 .10468); =
--color-orange-200: color(display-p3 .97465 .84705 .68011); --color-orange-=
800: color(display-p3 .57559 .21198 .08266); --color-amber-50: color(displa=
y-p3 .9978 .98505 .92631); --color-amber-400: color(display-p3 .95919 .7385=
2 .11827); --color-amber-600: color(display-p3 .82714 .46717 .0336); --colo=
r-amber-800: color(display-p3 .54753 .25606 .07283); --color-yellow-400: co=
lor(display-p3 .95994 .79017 .05852); --color-yellow-500: color(display-p3 =
.90365 .70306 .07454); --color-yellow-700: color(display-p3 .61315 .38666 .=
05797); --color-yellow-800: color(display-p3 .50318 .30478 .07554); --color=
-green-500: color(display-p3 .30873 .77475 .37431); --color-green-600: colo=
r(display-p3 .24388 .64082 .29481); --color-green-700: color(display-p3 .19=
836 .5018 .24533); --color-emerald-500: color(display-p3 .26711 .72685 .508=
4); --color-emerald-700: color(display-p3 .16404 .47023 .34351); --color-em=
erald-800: color(display-p3 .1354 .3714 .27756); --color-teal-500: color(di=
splay-p3 .26657 .72152 .65546); --color-teal-800: color(display-p3 .1457 .3=
6705 .35075); --color-sky-500: color(display-p3 .21911 .63903 .93148); --co=
lor-blue-200: color(display-p3 .76688 .85521 .98748); --color-blue-300: col=
or(display-p3 .60256 .76721 .99394); --color-blue-400: color(display-p3 .39=
744 .62813 .99212); --color-blue-500: color(display-p3 .26642 .49122 .98862=
); --color-purple-200: color(display-p3 .90118 .83598 .99224); --color-purp=
le-500: color(display-p3 .62952 .30089 .99082); --color-rose-500: color(dis=
play-p3 .92182 .24075 .35567); }
}
}

@layer base {
  *, ::after, ::before, ::backdrop { box-sizing: border-box; border: 0px so=
lid; margin: 0px; padding: 0px; }
  ::-webkit-file-upload-button { box-sizing: border-box; border: 0px solid;=
 margin: 0px; padding: 0px; }
  ::file-selector-button { box-sizing: border-box; border: 0px solid; margi=
n: 0px; padding: 0px; }
  html, :host { text-size-adjust: 100%; tab-size: 4; font-feature-settings:=
 normal; font-variation-settings: normal; -webkit-tap-highlight-color: tran=
sparent; font-family: MiSansLatinVF, ui-sans-serif, system-ui, sans-serif; =
line-height: 1.5; }
  hr { height: 0px; color: inherit; border-top-width: 1px; }
  abbr:where([title]) { text-decoration: underline dotted; }
  h1, h2, h3, h4, h5, h6 { font-size: inherit; font-weight: inherit; }
  a { color: inherit; text-decoration: inherit; }
  b, strong { font-weight: bolder; }
  code, kbd, samp, pre { font-family: var(--default-mono-font-family,ui-mon=
ospace,SFMono-Regular,Menlo,Monaco,Consolas,"Liberation Mono","Courier New"=
,monospace); font-feature-settings: var(--default-mono-font-feature-setting=
s,normal); font-variation-settings: var(--default-mono-font-variation-setti=
ngs,normal); font-size: 1em; }
  small { font-size: 80%; }
  sub, sup { vertical-align: baseline; font-size: 75%; line-height: 0; posi=
tion: relative; }
  sub { bottom: -0.25em; }
  sup { top: -0.5em; }
  table { text-indent: 0px; border-color: inherit; border-collapse: collaps=
e; }
  progress { vertical-align: baseline; }
  summary { display: list-item; }
  ol, ul, menu { list-style: none; }
  img, svg, video, canvas, audio, iframe, embed, object { vertical-align: m=
iddle; display: block; }
  img, video { max-width: 100%; height: auto; }
  button, input, select, optgroup, textarea { font: inherit; letter-spacing=
: inherit; color: inherit; opacity: 1; background-color: rgba(0, 0, 0, 0); =
border-radius: 0px; }
  ::-webkit-file-upload-button { font: inherit; letter-spacing: inherit; co=
lor: inherit; opacity: 1; background-color: rgba(0, 0, 0, 0); border-radius=
: 0px; }
  ::file-selector-button { font: inherit; letter-spacing: inherit; color: i=
nherit; opacity: 1; background-color: rgba(0, 0, 0, 0); border-radius: 0px;=
 }
  :where(select:is([multiple], [size])) optgroup { font-weight: bolder; }
  :where(select:is([multiple], [size])) optgroup option { padding-inline-st=
art: 20px; }
  ::-webkit-file-upload-button { margin-inline-end: 4px; }
  ::file-selector-button { margin-inline-end: 4px; }
  ::placeholder { opacity: 1; }
  @supports (not (-webkit-appearance:-apple-pay-button)) or (contain-intrin=
sic-size:1px) {
  ::placeholder { color: currentcolor; }
  @supports (color:color-mix(in lab,red,red)) {
  ::placeholder { color: color-mix(in oklab, currentcolor, transparent); }
}
}
  textarea { resize: vertical; }
  ::-webkit-search-decoration { appearance: none; }
  ::-webkit-date-and-time-value { min-height: 1lh; text-align: inherit; }
  ::-webkit-datetime-edit { display: inline-flex; }
  ::-webkit-datetime-edit-fields-wrapper { padding: 0px; }
  ::-webkit-datetime-edit { padding-block: 0px; }
  ::-webkit-datetime-edit-year-field { padding-block: 0px; }
  ::-webkit-datetime-edit-month-field { padding-block: 0px; }
  ::-webkit-datetime-edit-day-field { padding-block: 0px; }
  ::-webkit-datetime-edit-hour-field { padding-block: 0px; }
  ::-webkit-datetime-edit-minute-field { padding-block: 0px; }
  ::-webkit-datetime-edit-second-field { padding-block: 0px; }
  ::-webkit-datetime-edit-millisecond-field { padding-block: 0px; }
  ::-webkit-datetime-edit-meridiem-field { padding-block: 0px; }
  button, input:where([type=3D"button"], [type=3D"reset"], [type=3D"submit"=
]) { appearance: button; }
  ::-webkit-file-upload-button { appearance: button; }
  ::file-selector-button { appearance: button; }
  ::-webkit-inner-spin-button { height: auto; }
  ::-webkit-outer-spin-button { height: auto; }
  [hidden]:where(:not([hidden=3D"until-found"])) { display: none !important=
; }
  *, ::after, ::before, ::backdrop { border-color: var(--color-gray-200,cur=
rentColor); }
  ::-webkit-file-upload-button { border-color: var(--color-gray-200,current=
Color); }
  ::file-selector-button { border-color: var(--color-gray-200,currentColor)=
; }
  html { font-family: ui-sans-serif, system-ui, sans-serif; }
  pre { white-space: pre-wrap; font-family: monospace; }
  button { cursor: pointer; }
  input::placeholder, textarea::placeholder { color: var(--color-gray-400,#=
b4b4b4); }
}

@layer components;

@layer utilities {
  .\@container { container-type: inline-size; }
  .pointer-events-auto { pointer-events: auto; }
  .pointer-events-none { pointer-events: none; }
  .collapse { visibility: collapse; }
  .invisible { visibility: hidden; }
  .visible { visibility: visible; }
  .absolute { position: absolute; }
  .fixed { position: fixed; }
  .relative { position: relative; }
  .static { position: static; }
  .sticky { position: sticky; }
  .inset-0 { inset: calc(var(--spacing)*0); }
  .inset-x-0 { inset-inline: calc(var(--spacing)*0); }
  .inset-y-0 { inset-block: calc(var(--spacing)*0); }
  .end-2 { inset-inline-end: calc(var(--spacing)*2); }
  .-top-1 { top: calc(var(--spacing)*-1); }
  .-top-2 { top: calc(var(--spacing)*-2); }
  .-top-12 { top: calc(var(--spacing)*-12); }
  .top-0 { top: calc(var(--spacing)*0); }
  .top-0\.5 { top: calc(var(--spacing)*.5); }
  .top-1 { top: calc(var(--spacing)*1); }
  .top-1\.5 { top: calc(var(--spacing)*1.5); }
  .top-1\/2 { top: 50%; }
  .top-2 { top: calc(var(--spacing)*2); }
  .top-3 { top: calc(var(--spacing)*3); }
  .top-4 { top: calc(var(--spacing)*4); }
  .top-7 { top: calc(var(--spacing)*7); }
  .top-8 { top: calc(var(--spacing)*8); }
  .top-12 { top: calc(var(--spacing)*12); }
  .top-full { top: 100%; }
  .-right-1 { right: calc(var(--spacing)*-1); }
  .-right-2 { right: calc(var(--spacing)*-2); }
  .-right-4 { right: calc(var(--spacing)*-4); }
  .right-0 { right: calc(var(--spacing)*0); }
  .right-0\.5 { right: calc(var(--spacing)*.5); }
  .right-1 { right: calc(var(--spacing)*1); }
  .right-1\.5 { right: calc(var(--spacing)*1.5); }
  .right-2 { right: calc(var(--spacing)*2); }
  .right-2\.5 { right: calc(var(--spacing)*2.5); }
  .right-3 { right: calc(var(--spacing)*3); }
  .right-4 { right: calc(var(--spacing)*4); }
  .right-7 { right: calc(var(--spacing)*7); }
  .right-\[8px\] { right: 8px; }
  .-bottom-7 { bottom: calc(var(--spacing)*-7); }
  .bottom-0 { bottom: calc(var(--spacing)*0); }
  .bottom-1 { bottom: calc(var(--spacing)*1); }
  .bottom-12 { bottom: calc(var(--spacing)*12); }
  .-left-2 { left: calc(var(--spacing)*-2); }
  .-left-4 { left: calc(var(--spacing)*-4); }
  .left-0 { left: calc(var(--spacing)*0); }
  .left-1\/2 { left: 50%; }
  .left-3 { left: calc(var(--spacing)*3); }
  .z-0 { z-index: 0; }
  .z-1 { z-index: 1; }
  .z-10 { z-index: 10; }
  .z-11 { z-index: 11; }
  .z-20 { z-index: 20; }
  .z-30 { z-index: 30; }
  .z-40 { z-index: 40; }
  .z-50 { z-index: 50; }
  .z-999 { z-index: 999; }
  .z-9999 { z-index: 9999; }
  .z-99999 { z-index: 99999; }
  .z-99999999 { z-index: 99999999; }
  .z-\[-1\] { z-index: -1; }
  .col-span-1 { grid-column: span 1 / span 1; }
  .col-span-2 { grid-column: span 2 / span 2; }
  .container { width: 100%; }
  @media (min-width: 40rem) {
  .container { max-width: 40rem; }
}
  @media (min-width: 48rem) {
  .container { max-width: 48rem; }
}
  @media (min-width: 64rem) {
  .container { max-width: 64rem; }
}
  @media (min-width: 80rem) {
  .container { max-width: 80rem; }
}
  @media (min-width: 96rem) {
  .container { max-width: 96rem; }
}
  .m-0\.5 { margin: calc(var(--spacing)*.5); }
  .m-1 { margin: calc(var(--spacing)*1); }
  .m-1\.5 { margin: calc(var(--spacing)*1.5); }
  .m-10 { margin: calc(var(--spacing)*10); }
  .m-auto { margin: auto; }
  .-mx-0\.5 { margin-inline: calc(var(--spacing)*-.5); }
  .-mx-2 { margin-inline: calc(var(--spacing)*-2); }
  .mx-0 { margin-inline: calc(var(--spacing)*0); }
  .mx-1 { margin-inline: calc(var(--spacing)*1); }
  .mx-2 { margin-inline: calc(var(--spacing)*2); }
  .mx-2\.5 { margin-inline: calc(var(--spacing)*2.5); }
  .mx-3\.5 { margin-inline: calc(var(--spacing)*3.5); }
  .mx-4 { margin-inline: calc(var(--spacing)*4); }
  .mx-5 { margin-inline: calc(var(--spacing)*5); }
  .mx-\[1px\] { margin-inline: 1px; }
  .mx-\[20\%\] { margin-inline: 20%; }
  .mx-auto { margin-inline: auto; }
  .my-0\.5 { margin-block: calc(var(--spacing)*.5); }
  .my-1 { margin-block: calc(var(--spacing)*1); }
  .my-1\.5 { margin-block: calc(var(--spacing)*1.5); }
  .my-2 { margin-block: calc(var(--spacing)*2); }
  .my-2\.5 { margin-block: calc(var(--spacing)*2.5); }
  .my-3 { margin-block: calc(var(--spacing)*3); }
  .my-4 { margin-block: calc(var(--spacing)*4); }
  .my-10 { margin-block: calc(var(--spacing)*10); }
  .my-16 { margin-block: calc(var(--spacing)*16); }
  .my-auto { margin-block: auto; }
  .-mt-1 { margin-top: calc(var(--spacing)*-1); }
  .-mt-2 { margin-top: calc(var(--spacing)*-2); }
  .-mt-8 { margin-top: calc(var(--spacing)*-8); }
  .mt-0\.5 { margin-top: calc(var(--spacing)*.5); }
  .mt-1 { margin-top: calc(var(--spacing)*1); }
  .mt-1\.5 { margin-top: calc(var(--spacing)*1.5); }
  .mt-2 { margin-top: calc(var(--spacing)*2); }
  .mt-2\.5 { margin-top: calc(var(--spacing)*2.5); }
  .mt-3 { margin-top: calc(var(--spacing)*3); }
  .mt-3\.5 { margin-top: calc(var(--spacing)*3.5); }
  .mt-4 { margin-top: calc(var(--spacing)*4); }
  .mt-6 { margin-top: calc(var(--spacing)*6); }
  .mt-8 { margin-top: calc(var(--spacing)*8); }
  .mt-\[1px\] { margin-top: 1px; }
  .mt-\[6px\] { margin-top: 6px; }
  .mt-\[15\%\] { margin-top: 15%; }
  .mt-\[100px\] { margin-top: 100px; }
  .mt-auto { margin-top: auto; }
  .-mr-1 { margin-right: calc(var(--spacing)*-1); }
  .mr-0\.5 { margin-right: calc(var(--spacing)*.5); }
  .mr-1 { margin-right: calc(var(--spacing)*1); }
  .mr-1\.5 { margin-right: calc(var(--spacing)*1.5); }
  .mr-2 { margin-right: calc(var(--spacing)*2); }
  .mr-2\.5 { margin-right: calc(var(--spacing)*2.5); }
  .mr-3 { margin-right: calc(var(--spacing)*3); }
  .mr-4 { margin-right: calc(var(--spacing)*4); }
  .mr-5 { margin-right: calc(var(--spacing)*5); }
  .mr-10 { margin-right: calc(var(--spacing)*10); }
  .mr-14 { margin-right: calc(var(--spacing)*14); }
  .mr-\[25px\] { margin-right: 25px; }
  .-mb-1 { margin-bottom: calc(var(--spacing)*-1); }
  .-mb-2 { margin-bottom: calc(var(--spacing)*-2); }
  .-mb-8 { margin-bottom: calc(var(--spacing)*-8); }
  .mb-0\.5 { margin-bottom: calc(var(--spacing)*.5); }
  .mb-1 { margin-bottom: calc(var(--spacing)*1); }
  .mb-1\.5 { margin-bottom: calc(var(--spacing)*1.5); }
  .mb-2 { margin-bottom: calc(var(--spacing)*2); }
  .mb-2\.5 { margin-bottom: calc(var(--spacing)*2.5); }
  .mb-3 { margin-bottom: calc(var(--spacing)*3); }
  .mb-3\.5 { margin-bottom: calc(var(--spacing)*3.5); }
  .mb-4 { margin-bottom: calc(var(--spacing)*4); }
  .mb-5 { margin-bottom: calc(var(--spacing)*5); }
  .mb-6 { margin-bottom: calc(var(--spacing)*6); }
  .mb-8 { margin-bottom: calc(var(--spacing)*8); }
  .mb-\[6px\] { margin-bottom: 6px; }
  .mb-\[12px\] { margin-bottom: 12px; }
  .-ml-1\.5 { margin-left: calc(var(--spacing)*-1.5); }
  .ml-0\.5 { margin-left: calc(var(--spacing)*.5); }
  .ml-1 { margin-left: calc(var(--spacing)*1); }
  .ml-1\.5 { margin-left: calc(var(--spacing)*1.5); }
  .ml-1\.75 { margin-left: calc(var(--spacing)*1.75); }
  .ml-2 { margin-left: calc(var(--spacing)*2); }
  .ml-3 { margin-left: calc(var(--spacing)*3); }
  .ml-4 { margin-left: calc(var(--spacing)*4); }
  .ml-5 { margin-left: calc(var(--spacing)*5); }
  .ml-\[4\.5rem\] { margin-left: 4.5rem; }
  .ml-\[25px\] { margin-left: 25px; }
  .ml-auto { margin-left: auto; }
  .line-clamp-1 { -webkit-line-clamp: 1; -webkit-box-orient: vertical; disp=
lay: -webkit-box; overflow: hidden; }
  .line-clamp-2 { -webkit-line-clamp: 2; -webkit-box-orient: vertical; disp=
lay: -webkit-box; overflow: hidden; }
  .line-clamp-3 { -webkit-line-clamp: 3; -webkit-box-orient: vertical; disp=
lay: -webkit-box; overflow: hidden; }
  .block { display: block; }
  .contents { display: contents; }
  .flex { display: flex; }
  .grid { display: grid; }
  .hidden { display: none; }
  .inline { display: inline; }
  .inline-block { display: inline-block; }
  .inline-flex { display: inline-flex; }
  .table { display: table; }
  .aspect-16\/9, .aspect-\[16\/9\] { aspect-ratio: 16 / 9; }
  .aspect-square { aspect-ratio: 1 / 1; }
  .size-1 { width: calc(var(--spacing)*1); height: calc(var(--spacing)*1); =
}
  .size-1\.5 { width: calc(var(--spacing)*1.5); height: calc(var(--spacing)=
*1.5); }
  .size-2 { width: calc(var(--spacing)*2); height: calc(var(--spacing)*2); =
}
  .size-2\.5 { width: calc(var(--spacing)*2.5); height: calc(var(--spacing)=
*2.5); }
  .size-3 { width: calc(var(--spacing)*3); height: calc(var(--spacing)*3); =
}
  .size-3\.5 { width: calc(var(--spacing)*3.5); height: calc(var(--spacing)=
*3.5); }
  .size-4 { width: calc(var(--spacing)*4); height: calc(var(--spacing)*4); =
}
  .size-4\.5 { width: calc(var(--spacing)*4.5); height: calc(var(--spacing)=
*4.5); }
  .size-5 { width: calc(var(--spacing)*5); height: calc(var(--spacing)*5); =
}
  .size-5\.5 { width: calc(var(--spacing)*5.5); height: calc(var(--spacing)=
*5.5); }
  .size-6 { width: calc(var(--spacing)*6); height: calc(var(--spacing)*6); =
}
  .size-7 { width: calc(var(--spacing)*7); height: calc(var(--spacing)*7); =
}
  .size-7\.5 { width: calc(var(--spacing)*7.5); height: calc(var(--spacing)=
*7.5); }
  .size-8 { width: calc(var(--spacing)*8); height: calc(var(--spacing)*8); =
}
  .size-10 { width: calc(var(--spacing)*10); height: calc(var(--spacing)*10=
); }
  .size-11 { width: calc(var(--spacing)*11); height: calc(var(--spacing)*11=
); }
  .size-12 { width: calc(var(--spacing)*12); height: calc(var(--spacing)*12=
); }
  .size-14 { width: calc(var(--spacing)*14); height: calc(var(--spacing)*14=
); }
  .size-16 { width: calc(var(--spacing)*16); height: calc(var(--spacing)*16=
); }
  .size-72 { width: calc(var(--spacing)*72); height: calc(var(--spacing)*72=
); }
  .size-\[1\.1rem\] { width: 1.1rem; height: 1.1rem; }
  .size-\[2\.7rem\] { width: 2.7rem; height: 2.7rem; }
  .size-\[18px\] { width: 18px; height: 18px; }
  .size-\[79px\] { width: 79px; height: 79px; }
  .h-0 { height: calc(var(--spacing)*0); }
  .h-1 { height: calc(var(--spacing)*1); }
  .h-1\.5 { height: calc(var(--spacing)*1.5); }
  .h-2 { height: calc(var(--spacing)*2); }
  .h-3 { height: calc(var(--spacing)*3); }
  .h-3\.5 { height: calc(var(--spacing)*3.5); }
  .h-4 { height: calc(var(--spacing)*4); }
  .h-5 { height: calc(var(--spacing)*5); }
  .h-5\.5 { height: calc(var(--spacing)*5.5); }
  .h-6 { height: calc(var(--spacing)*6); }
  .h-7 { height: calc(var(--spacing)*7); }
  .h-8 { height: calc(var(--spacing)*8); }
  .h-10 { height: calc(var(--spacing)*10); }
  .h-12 { height: calc(var(--spacing)*12); }
  .h-16 { height: calc(var(--spacing)*16); }
  .h-20 { height: calc(var(--spacing)*20); }
  .h-32 { height: calc(var(--spacing)*32); }
  .h-40 { height: calc(var(--spacing)*40); }
  .h-50 { height: calc(var(--spacing)*50); }
  .h-64 { height: calc(var(--spacing)*64); }
  .h-80 { height: calc(var(--spacing)*80); }
  .h-96 { height: calc(var(--spacing)*96); }
  .h-\[1px\] { height: 1px; }
  .h-\[2\.5rem\] { height: 2.5rem; }
  .h-\[20px\] { height: 20px; }
  .h-\[22px\] { height: 22px; }
  .h-\[28rem\] { height: 28rem; }
  .h-\[32px\] { height: 32px; }
  .h-\[48px\] { height: 48px; }
  .h-\[50\%\] { height: 50%; }
  .h-\[70vh\] { height: 70vh; }
  .h-\[100dvh\] { height: 100dvh; }
  .h-\[720px\] { height: 720px; }
  .h-auto { height: auto; }
  .h-fit { height: fit-content; }
  .h-full { height: 100%; }
  .h-px { height: 1px; }
  .h-screen { height: 100vh; }
  .max-h-40 { max-height: calc(var(--spacing)*40); }
  .max-h-48 { max-height: calc(var(--spacing)*48); }
  .max-h-60 { max-height: calc(var(--spacing)*60); }
  .max-h-80 { max-height: calc(var(--spacing)*80); }
  .max-h-96 { max-height: calc(var(--spacing)*96); }
  .max-h-\[22rem\] { max-height: 22rem; }
  .max-h-\[28rem\] { max-height: 28rem; }
  .max-h-\[32rem\] { max-height: 32rem; }
  .max-h-\[70vh\] { max-height: 70vh; }
  .max-h-\[75vh\] { max-height: 75vh; }
  .max-h-\[100dvh\] { max-height: 100dvh; }
  .max-h-\[124px\] { max-height: 124px; }
  .max-h-\[163px\] { max-height: 163px; }
  .max-h-\[200px\] { max-height: 200px; }
  .max-h-\[300px\] { max-height: 300px; }
  .max-h-\[400px\] { max-height: 400px; }
  .max-h-\[720px\] { max-height: 720px; }
  .max-h-fit { max-height: fit-content; }
  .max-h-full { max-height: 100%; }
  .max-h-screen { max-height: 100vh; }
  .min-h-4 { min-height: calc(var(--spacing)*4); }
  .min-h-5 { min-height: calc(var(--spacing)*5); }
  .min-h-30 { min-height: calc(var(--spacing)*30); }
  .min-h-\[400px\] { min-height: 400px; }
  .min-h-fit { min-height: fit-content; }
  .min-h-full { min-height: 100%; }
  .min-h-screen { min-height: 100vh; }
  .w-0 { width: calc(var(--spacing)*0); }
  .w-1 { width: calc(var(--spacing)*1); }
  .w-1\.5 { width: calc(var(--spacing)*1.5); }
  .w-1\/3 { width: 33.3333%; }
  .w-2 { width: calc(var(--spacing)*2); }
  .w-2\/3 { width: 66.6667%; }
  .w-3 { width: calc(var(--spacing)*3); }
  .w-3\.5 { width: calc(var(--spacing)*3.5); }
  .w-3\/4 { width: 75%; }
  .w-4 { width: calc(var(--spacing)*4); }
  .w-5 { width: calc(var(--spacing)*5); }
  .w-6 { width: calc(var(--spacing)*6); }
  .w-8 { width: calc(var(--spacing)*8); }
  .w-10 { width: calc(var(--spacing)*10); }
  .w-11 { width: calc(var(--spacing)*11); }
  .w-12 { width: calc(var(--spacing)*12); }
  .w-12\.5 { width: calc(var(--spacing)*12.5); }
  .w-14 { width: calc(var(--spacing)*14); }
  .w-16 { width: calc(var(--spacing)*16); }
  .w-20 { width: calc(var(--spacing)*20); }
  .w-24 { width: calc(var(--spacing)*24); }
  .w-28 { width: calc(var(--spacing)*28); }
  .w-60 { width: calc(var(--spacing)*60); }
  .w-64 { width: calc(var(--spacing)*64); }
  .w-72 { width: calc(var(--spacing)*72); }
  .w-80 { width: calc(var(--spacing)*80); }
  .w-96 { width: calc(var(--spacing)*96); }
  .w-\[0px\] { width: 0px; }
  .w-\[1px\] { width: 1px; }
  .w-\[6\.5rem\] { width: 6.5rem; }
  .w-\[16rem\] { width: 16rem; }
  .w-\[28px\] { width: 28px; }
  .w-\[30rem\] { width: 30rem; }
  .w-\[32px\] { width: 32px; }
  .w-\[32rem\] { width: 32rem; }
  .w-\[42rem\] { width: 42rem; }
  .w-\[50\%\] { width: 50%; }
  .w-\[56rem\] { width: 56rem; }
  .w-\[260px\] { width: 260px; }
  .w-\[480px\] { width: 480px; }
  .w-\[1280px\] { width: 1280px; }
  .w-auto { width: auto; }
  .w-fit { width: fit-content; }
  .w-full { width: 100%; }
  .w-max { width: max-content; }
  .w-screen { width: 100vw; }
  .max-w-1\/2 { max-width: 50%; }
  .max-w-1\/3 { max-width: 33.3333%; }
  .max-w-3xl { max-width: 48rem; }
  .max-w-4xl { max-width: 56rem; }
  .max-w-5xl { max-width: 64rem; }
  .max-w-6xl { max-width: 72rem; }
  .max-w-40 { max-width: calc(var(--spacing)*40); }
  .max-w-48 { max-width: calc(var(--spacing)*48); }
  .max-w-80 { max-width: calc(var(--spacing)*80); }
  .max-w-90 { max-width: calc(var(--spacing)*90); }
  .max-w-96 { max-width: calc(var(--spacing)*96); }
  .max-w-\[36rem\] { max-width: 36rem; }
  .max-w-\[55px\] { max-width: 55px; }
  .max-w-\[56px\] { max-width: 56px; }
  .max-w-\[80\%\] { max-width: 80%; }
  .max-w-\[90\%\] { max-width: 90%; }
  .max-w-\[130px\] { max-width: 130px; }
  .max-w-\[160px\] { max-width: 160px; }
  .max-w-\[180px\] { max-width: 180px; }
  .max-w-\[200px\] { max-width: 200px; }
  .max-w-\[230px\] { max-width: 230px; }
  .max-w-\[240px\] { max-width: 240px; }
  .max-w-\[260px\] { max-width: 260px; }
  .max-w-\[600px\] { max-width: 600px; }
  .max-w-\[960px\] { max-width: 960px; }
  .max-w-\[1000px\] { max-width: 1000px; }
  .max-w-\[calc\(100\%-4\.5rem\)\] { max-width: calc(100% - 4.5rem); }
  .max-w-\[calc\(100vw-1rem\)\] { max-width: calc(-1rem + 100vw); }
  .max-w-fit { max-width: fit-content; }
  .max-w-full { max-width: 100%; }
  .max-w-md { max-width: 28rem; }
  .max-w-screen { max-width: 100vw; }
  .min-w-0 { min-width: calc(var(--spacing)*0); }
  .min-w-1\/4 { min-width: 25%; }
  .min-w-16 { min-width: calc(var(--spacing)*16); }
  .min-w-40 { min-width: calc(var(--spacing)*40); }
  .min-w-50 { min-width: calc(var(--spacing)*50); }
  .min-w-96 { min-width: calc(var(--spacing)*96); }
  .min-w-\[4\.5rem\] { min-width: 4.5rem; }
  .min-w-\[7rem\] { min-width: 7rem; }
  .min-w-\[100px\] { min-width: 100px; }
  .min-w-\[110px\] { min-width: 110px; }
  .min-w-\[180px\] { min-width: 180px; }
  .min-w-\[240px\] { min-width: 240px; }
  .min-w-\[320px\] { min-width: 320px; }
  .min-w-\[var\(--width\)\] { min-width: var(--width); }
  .min-w-fit { min-width: fit-content; }
  .min-w-full { min-width: 100%; }
  .flex-0 { flex: 0 1 0%; }
  .flex-1 { flex: 1 1 0%; }
  .flex-auto { flex: 1 1 auto; }
  .flex-none { flex: 0 0 auto; }
  .flex-shrink { flex-shrink: 1; }
  .flex-shrink-0 { flex-shrink: 0; }
  .shrink { flex-shrink: 1; }
  .shrink-0 { flex-shrink: 0; }
  .shrink-1 { flex-shrink: 1; }
  .flex-grow, .grow { flex-grow: 1; }
  .basis-\[100\%\] { flex-basis: 100%; }
  .table-auto { table-layout: auto; }
  .origin-center { transform-origin: 50% center; }
  .-translate-x-1 { --tw-translate-x: calc(var(--spacing)*-1); translate: v=
ar(--tw-translate-x)var(--tw-translate-y); }
  .-translate-x-1\/2 { --tw-translate-x: -50%; translate: var(--tw-translat=
e-x)var(--tw-translate-y); }
  .-translate-x-\[0\.5px\] { --tw-translate-x: -.5px; translate: var(--tw-t=
ranslate-x)var(--tw-translate-y); }
  .-translate-x-\[260px\] { --tw-translate-x: -260px; translate: var(--tw-t=
ranslate-x)var(--tw-translate-y); }
  .-translate-y-0\.5 { --tw-translate-y: calc(var(--spacing)*-.5); translat=
e: var(--tw-translate-x)var(--tw-translate-y); }
  .-translate-y-1\/2 { --tw-translate-y: -50%; translate: var(--tw-translat=
e-x)var(--tw-translate-y); }
  .-translate-y-\[1px\] { --tw-translate-y: -1px; translate: var(--tw-trans=
late-x)var(--tw-translate-y); }
  .-translate-y-\[45\%\] { --tw-translate-y: -45%; translate: var(--tw-tran=
slate-x)var(--tw-translate-y); }
  .translate-y-0\.5 { --tw-translate-y: calc(var(--spacing)*.5); translate:=
 var(--tw-translate-x)var(--tw-translate-y); }
  .translate-y-1 { --tw-translate-y: calc(var(--spacing)*1); translate: var=
(--tw-translate-x)var(--tw-translate-y); }
  .translate-y-6 { --tw-translate-y: calc(var(--spacing)*6); translate: var=
(--tw-translate-x)var(--tw-translate-y); }
  .translate-y-\[-68px\] { --tw-translate-y: -68px; translate: var(--tw-tra=
nslate-x)var(--tw-translate-y); }
  .translate-y-\[0\.5px\] { --tw-translate-y: .5px; translate: var(--tw-tra=
nslate-x)var(--tw-translate-y); }
  .translate-y-\[1px\] { --tw-translate-y: 1px; translate: var(--tw-transla=
te-x)var(--tw-translate-y); }
  .translate-y-\[2px\] { --tw-translate-y: 2px; translate: var(--tw-transla=
te-x)var(--tw-translate-y); }
  .-rotate-180 { rotate: -180deg; }
  .rotate-45 { rotate: 45deg; }
  .rotate-180 { rotate: 180deg; }
  .transform { transform: var(--tw-rotate-x,)var(--tw-rotate-y,)var(--tw-ro=
tate-z,)var(--tw-skew-x,)var(--tw-skew-y,); }
  .animate-\[blink_1s_infinite\] { animation: 1s ease 0s infinite normal no=
ne running blink; }
  .animate-ping { animation: var(--animate-ping); }
  .animate-pulse { animation: var(--animate-pulse); }
  .animate-spin { animation: var(--animate-spin); }
  .cursor-default { cursor: default; }
  .cursor-move { cursor: move; }
  .cursor-not-allowed { cursor: not-allowed; }
  .cursor-pointer { cursor: pointer; }
  .touch-auto { touch-action: auto; }
  .touch-none { touch-action: none; }
  .resize { resize: both; }
  .resize-none { resize: none; }
  .list-disc { list-style-type: disc; }
  .appearance-none { appearance: none; }
  .columns-2 { columns: 2; }
  .break-inside-avoid { break-inside: avoid; }
  .grid-cols-1 { grid-template-columns: repeat(1, minmax(0px, 1fr)); }
  .grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }
  .grid-cols-3 { grid-template-columns: repeat(3, minmax(0px, 1fr)); }
  .grid-cols-4 { grid-template-columns: repeat(4, minmax(0px, 1fr)); }
  .flex-col { flex-direction: column; }
  .flex-row { flex-direction: row; }
  .flex-row-reverse { flex-direction: row-reverse; }
  .flex-nowrap { flex-wrap: nowrap; }
  .flex-wrap { flex-wrap: wrap; }
  .items-center { align-items: center; }
  .items-center-safe { align-items: safe center; }
  .items-end { align-items: flex-end; }
  .items-start { align-items: flex-start; }
  .justify-around { justify-content: space-around; }
  .justify-between { justify-content: space-between; }
  .justify-center { justify-content: center; }
  .justify-center-safe { justify-content: safe center; }
  .justify-end { justify-content: flex-end; }
  .justify-start { justify-content: flex-start; }
  .justify-items-center-safe { justify-items: safe center; }
  .gap-0 { gap: calc(var(--spacing)*0); }
  .gap-0\.5 { gap: calc(var(--spacing)*.5); }
  .gap-1 { gap: calc(var(--spacing)*1); }
  .gap-1\.5 { gap: calc(var(--spacing)*1.5); }
  .gap-2 { gap: calc(var(--spacing)*2); }
  .gap-2\.5 { gap: calc(var(--spacing)*2.5); }
  .gap-3 { gap: calc(var(--spacing)*3); }
  .gap-4 { gap: calc(var(--spacing)*4); }
  .gap-5 { gap: calc(var(--spacing)*5); }
  .gap-6 { gap: calc(var(--spacing)*6); }
  .gap-8 { gap: calc(var(--spacing)*8); }
  .gap-25 { gap: calc(var(--spacing)*25); }
  .gap-\[8px\] { gap: 8px; }
  :where(.-space-y-0\.5 > :not(:last-child)) { --tw-space-y-reverse: 0; mar=
gin-block-start: calc(calc(var(--spacing)*-.5)*var(--tw-space-y-reverse)); =
margin-block-end: calc(calc(var(--spacing)*-.5)*calc(1 - var(--tw-space-y-r=
everse))); }
  :where(.space-y-1 > :not(:last-child)) { --tw-space-y-reverse: 0; margin-=
block-start: calc(calc(var(--spacing)*1)*var(--tw-space-y-reverse)); margin=
-block-end: calc(calc(var(--spacing)*1)*calc(1 - var(--tw-space-y-reverse))=
); }
  :where(.space-y-1\.5 > :not(:last-child)) { --tw-space-y-reverse: 0; marg=
in-block-start: calc(calc(var(--spacing)*1.5)*var(--tw-space-y-reverse)); m=
argin-block-end: calc(calc(var(--spacing)*1.5)*calc(1 - var(--tw-space-y-re=
verse))); }
  :where(.space-y-2 > :not(:last-child)) { --tw-space-y-reverse: 0; margin-=
block-start: calc(calc(var(--spacing)*2)*var(--tw-space-y-reverse)); margin=
-block-end: calc(calc(var(--spacing)*2)*calc(1 - var(--tw-space-y-reverse))=
); }
  :where(.space-y-2\.5 > :not(:last-child)) { --tw-space-y-reverse: 0; marg=
in-block-start: calc(calc(var(--spacing)*2.5)*var(--tw-space-y-reverse)); m=
argin-block-end: calc(calc(var(--spacing)*2.5)*calc(1 - var(--tw-space-y-re=
verse))); }
  :where(.space-y-3 > :not(:last-child)) { --tw-space-y-reverse: 0; margin-=
block-start: calc(calc(var(--spacing)*3)*var(--tw-space-y-reverse)); margin=
-block-end: calc(calc(var(--spacing)*3)*calc(1 - var(--tw-space-y-reverse))=
); }
  :where(.space-y-4 > :not(:last-child)) { --tw-space-y-reverse: 0; margin-=
block-start: calc(calc(var(--spacing)*4)*var(--tw-space-y-reverse)); margin=
-block-end: calc(calc(var(--spacing)*4)*calc(1 - var(--tw-space-y-reverse))=
); }
  :where(.space-y-6 > :not(:last-child)) { --tw-space-y-reverse: 0; margin-=
block-start: calc(calc(var(--spacing)*6)*var(--tw-space-y-reverse)); margin=
-block-end: calc(calc(var(--spacing)*6)*calc(1 - var(--tw-space-y-reverse))=
); }
  :where(.-space-x-4 > :not(:last-child)) { --tw-space-x-reverse: 0; margin=
-inline-start: calc(calc(var(--spacing)*-4)*var(--tw-space-x-reverse)); mar=
gin-inline-end: calc(calc(var(--spacing)*-4)*calc(1 - var(--tw-space-x-reve=
rse))); }
  :where(.space-x-1 > :not(:last-child)) { --tw-space-x-reverse: 0; margin-=
inline-start: calc(calc(var(--spacing)*1)*var(--tw-space-x-reverse)); margi=
n-inline-end: calc(calc(var(--spacing)*1)*calc(1 - var(--tw-space-x-reverse=
))); }
  :where(.space-x-1\.5 > :not(:last-child)) { --tw-space-x-reverse: 0; marg=
in-inline-start: calc(calc(var(--spacing)*1.5)*var(--tw-space-x-reverse)); =
margin-inline-end: calc(calc(var(--spacing)*1.5)*calc(1 - var(--tw-space-x-=
reverse))); }
  :where(.space-x-2 > :not(:last-child)) { --tw-space-x-reverse: 0; margin-=
inline-start: calc(calc(var(--spacing)*2)*var(--tw-space-x-reverse)); margi=
n-inline-end: calc(calc(var(--spacing)*2)*calc(1 - var(--tw-space-x-reverse=
))); }
  :where(.space-x-3 > :not(:last-child)) { --tw-space-x-reverse: 0; margin-=
inline-start: calc(calc(var(--spacing)*3)*var(--tw-space-x-reverse)); margi=
n-inline-end: calc(calc(var(--spacing)*3)*calc(1 - var(--tw-space-x-reverse=
))); }
  :where(.space-x-3\.5 > :not(:last-child)) { --tw-space-x-reverse: 0; marg=
in-inline-start: calc(calc(var(--spacing)*3.5)*var(--tw-space-x-reverse)); =
margin-inline-end: calc(calc(var(--spacing)*3.5)*calc(1 - var(--tw-space-x-=
reverse))); }
  :where(.space-x-4 > :not(:last-child)) { --tw-space-x-reverse: 0; margin-=
inline-start: calc(calc(var(--spacing)*4)*var(--tw-space-x-reverse)); margi=
n-inline-end: calc(calc(var(--spacing)*4)*calc(1 - var(--tw-space-x-reverse=
))); }
  :where(.space-x-5 > :not(:last-child)) { --tw-space-x-reverse: 0; margin-=
inline-start: calc(calc(var(--spacing)*5)*var(--tw-space-x-reverse)); margi=
n-inline-end: calc(calc(var(--spacing)*5)*calc(1 - var(--tw-space-x-reverse=
))); }
  .self-center { align-self: center; }
  .self-end { align-self: flex-end; }
  .self-start { align-self: flex-start; }
  .justify-self-end-safe { justify-self: safe flex-end; }
  .truncate { text-overflow: ellipsis; white-space: nowrap; overflow: hidde=
n; }
  .overflow-auto { overflow: auto; }
  .overflow-hidden { overflow: hidden; }
  .overflow-scroll { overflow: scroll; }
  .overflow-visible { overflow: visible; }
  .overflow-x-auto { overflow-x: auto; }
  .overflow-x-hidden { overflow-x: hidden; }
  .overflow-x-scroll { overflow-x: scroll; }
  .overflow-y-auto { overflow-y: auto; }
  .overflow-y-hidden { overflow-y: hidden; }
  .overflow-y-scroll { overflow-y: scroll; }
  .overscroll-contain { overscroll-behavior: contain; }
  .scroll-smooth { scroll-behavior: smooth; }
  .rounded { border-radius: 0.25rem; }
  .rounded-2xl { border-radius: var(--radius-2xl); }
  .rounded-3xl { border-radius: var(--radius-3xl); }
  .rounded-\[5px\] { border-radius: 5px; }
  .rounded-\[6px\] { border-radius: 6px; }
  .rounded-\[9px\] { border-radius: 9px; }
  .rounded-full { border-radius: 3.40282e+38px; }
  .rounded-lg { border-radius: var(--radius-lg); }
  .rounded-md { border-radius: var(--radius-md); }
  .rounded-none { border-radius: 0px; }
  .rounded-none\! { border-radius: 0px !important; }
  .rounded-sm { border-radius: var(--radius-sm); }
  .rounded-xl { border-radius: var(--radius-xl); }
  .rounded-xs { border-radius: var(--radius-xs); }
  .rounded-t-2xl { border-top-left-radius: var(--radius-2xl); border-top-ri=
ght-radius: var(--radius-2xl); }
  .rounded-t-lg { border-top-left-radius: var(--radius-lg); border-top-righ=
t-radius: var(--radius-lg); }
  .rounded-t-xl { border-top-left-radius: var(--radius-xl); border-top-righ=
t-radius: var(--radius-xl); }
  .rounded-l-lg { border-top-left-radius: var(--radius-lg); border-bottom-l=
eft-radius: var(--radius-lg); }
  .rounded-l-md { border-top-left-radius: var(--radius-md); border-bottom-l=
eft-radius: var(--radius-md); }
  .rounded-l-none { border-top-left-radius: 0px; border-bottom-left-radius:=
 0px; }
  .rounded-l-xl { border-top-left-radius: var(--radius-xl); border-bottom-l=
eft-radius: var(--radius-xl); }
  .rounded-r-lg { border-top-right-radius: var(--radius-lg); border-bottom-=
right-radius: var(--radius-lg); }
  .rounded-r-md { border-top-right-radius: var(--radius-md); border-bottom-=
right-radius: var(--radius-md); }
  .rounded-r-xl { border-top-right-radius: var(--radius-xl); border-bottom-=
right-radius: var(--radius-xl); }
  .rounded-tr-xl { border-top-right-radius: var(--radius-xl); }
  .rounded-b-2xl { border-bottom-right-radius: var(--radius-2xl); border-bo=
ttom-left-radius: var(--radius-2xl); }
  .rounded-b-lg { border-bottom-right-radius: var(--radius-lg); border-bott=
om-left-radius: var(--radius-lg); }
  .rounded-b-lg\! { border-bottom-right-radius: var(--radius-lg) !important=
; border-bottom-left-radius: var(--radius-lg) !important; }
  .rounded-b-xl { border-bottom-right-radius: var(--radius-xl); border-bott=
om-left-radius: var(--radius-xl); }
  .border { border-style: var(--tw-border-style); border-width: 1px; }
  .border-0 { border-style: var(--tw-border-style); border-width: 0px; }
  .border-1 { border-style: var(--tw-border-style); border-width: 1px; }
  .border-2 { border-style: var(--tw-border-style); border-width: 2px; }
  .border-\[1\.5px\] { border-style: var(--tw-border-style); border-width: =
1.5px; }
  .border-\[1px\] { border-style: var(--tw-border-style); border-width: 1px=
; }
  .border-s { border-inline-start-style: var(--tw-border-style); border-inl=
ine-start-width: 1px; }
  .border-t { border-top-style: var(--tw-border-style); border-top-width: 1=
px; }
  .border-t-0 { border-top-style: var(--tw-border-style); border-top-width:=
 0px; }
  .border-r, .border-r-1 { border-right-style: var(--tw-border-style); bord=
er-right-width: 1px; }
  .border-b, .border-b-1 { border-bottom-style: var(--tw-border-style); bor=
der-bottom-width: 1px; }
  .border-b-2 { border-bottom-style: var(--tw-border-style); border-bottom-=
width: 2px; }
  .border-b-\[1\.5px\] { border-bottom-style: var(--tw-border-style); borde=
r-bottom-width: 1.5px; }
  .border-l-0 { border-left-style: var(--tw-border-style); border-left-widt=
h: 0px; }
  .border-l-2 { border-left-style: var(--tw-border-style); border-left-widt=
h: 2px; }
  .border-l-3 { border-left-style: var(--tw-border-style); border-left-widt=
h: 3px; }
  .border-l-4 { border-left-style: var(--tw-border-style); border-left-widt=
h: 4px; }
  .border-dashed { --tw-border-style: dashed; border-style: dashed; }
  .border-none { --tw-border-style: none; border-style: none; }
  .border-\[\#0068E00A\] { border-color: rgba(0, 104, 224, 0.04); }
  .border-\[\#DAEEFF0A\] { border-color: rgba(218, 238, 255, 0.04); }
  .border-\[\#E5E5E5\] { border-color: rgb(229, 229, 229); }
  .border-\[\#E8E9EB\] { border-color: rgb(232, 233, 235); }
  .border-amber-200 { border-color: var(--color-amber-200); }
  .border-black\/5 { border-color: rgba(0, 0, 0, 0.05); }
  @supports (color:color-mix(in lab,red,red)) {
  .border-black\/5 { border-color: color-mix(in oklab,var(--color-black)5%,=
transparent); }
}
  .border-black\/10 { border-color: rgba(0, 0, 0, 0.1); }
  @supports (color:color-mix(in lab,red,red)) {
  .border-black\/10 { border-color: color-mix(in oklab,var(--color-black)10=
%,transparent); }
}
  .border-black\/20 { border-color: rgba(0, 0, 0, 0.2); }
  @supports (color:color-mix(in lab,red,red)) {
  .border-black\/20 { border-color: color-mix(in oklab,var(--color-black)20=
%,transparent); }
}
  .border-black\/30 { border-color: rgba(0, 0, 0, 0.3); }
  @supports (color:color-mix(in lab,red,red)) {
  .border-black\/30 { border-color: color-mix(in oklab,var(--color-black)30=
%,transparent); }
}
  .border-black\/50 { border-color: rgba(0, 0, 0, 0.5); }
  @supports (color:color-mix(in lab,red,red)) {
  .border-black\/50 { border-color: color-mix(in oklab,var(--color-black)50=
%,transparent); }
}
  .border-blue-200 { border-color: var(--color-blue-200); }
  .border-blue-500 { border-color: var(--color-blue-500); }
  .border-emerald-500 { border-color: var(--color-emerald-500); }
  .border-gray-50 { border-color: var(--color-gray-50,#f9f9f9); }
  .border-gray-100 { border-color: var(--color-gray-100,#ececec); }
  .border-gray-200 { border-color: var(--color-gray-200,#e3e3e3); }
  .border-gray-300, .border-gray-300\/30 { border-color: var(--color-gray-3=
00,#cdcdcd); }
  @supports (color:color-mix(in lab,red,red)) {
  .border-gray-300\/30 { border-color: color-mix(in oklab,var(--color-gray-=
300,#cdcdcd)30%,transparent); }
}
  .border-gray-900 { border-color: var(--color-gray-900,#171717); }
  .border-purple-500 { border-color: var(--color-purple-500); }
  .border-red-200 { border-color: var(--color-red-200); }
  .border-red-500 { border-color: var(--color-red-500); }
  .border-red-600\/10 { border-color: rgba(228, 0, 20, 0.1); }
  @supports (color:color-mix(in lab,red,red)) {
  .border-red-600\/10 { border-color: color-mix(in oklab,var(--color-red-60=
0)10%,transparent); }
}
  .border-rose-500 { border-color: var(--color-rose-500); }
  .border-sky-500 { border-color: var(--color-sky-500); }
  .border-teal-500 { border-color: var(--color-teal-500); }
  .border-transparent { border-color: rgba(0, 0, 0, 0); }
  .border-white { border-color: var(--color-white); }
  .border-white\/20 { border-color: rgba(255, 255, 255, 0.2); }
  @supports (color:color-mix(in lab,red,red)) {
  .border-white\/20 { border-color: color-mix(in oklab,var(--color-white)20=
%,transparent); }
}
  .border-yellow-500 { border-color: var(--color-yellow-500); }
  .border-t-transparent { border-top-color: rgba(0, 0, 0, 0); }
  .border-b-gray-800 { border-bottom-color: var(--color-gray-800,#333); }
  .bg-\[\#1c6727\] { background-color: rgb(28, 103, 39); }
  .bg-\[\#484A58\] { background-color: rgb(72, 74, 88); }
  .bg-\[\#43444F\] { background-color: rgb(67, 68, 79); }
  .bg-\[\#44454f\] { background-color: rgb(68, 69, 79); }
  .bg-\[\#DAEEFF\] { background-color: rgb(218, 238, 255); }
  .bg-\[\#E8ECF0\] { background-color: rgb(232, 236, 240); }
  .bg-\[\#F0F0F0\] { background-color: rgb(240, 240, 240); }
  .bg-\[\#F2F4F6\] { background-color: rgb(242, 244, 246); }
  .bg-\[\#F2F4F8\] { background-color: rgb(242, 244, 248); }
  .bg-\[\#F4F6F8\] { background-color: rgb(244, 246, 248); }
  .bg-\[\#F5F6F8\] { background-color: rgb(245, 246, 248); }
  .bg-\[\#F7F9FA\] { background-color: rgb(247, 249, 250); }
  .bg-amber-50 { background-color: var(--color-amber-50); }
  .bg-black { background-color: var(--color-black); }
  .bg-black\/0 { background-color: rgba(0, 0, 0, 0); }
  @supports (color:color-mix(in lab,red,red)) {
  .bg-black\/0 { background-color: color-mix(in oklab,var(--color-black)0%,=
transparent); }
}
  .bg-black\/5 { background-color: rgba(0, 0, 0, 0.05); }
  @supports (color:color-mix(in lab,red,red)) {
  .bg-black\/5 { background-color: color-mix(in oklab,var(--color-black)5%,=
transparent); }
}
  .bg-black\/10 { background-color: rgba(0, 0, 0, 0.1); }
  @supports (color:color-mix(in lab,red,red)) {
  .bg-black\/10 { background-color: color-mix(in oklab,var(--color-black)10=
%,transparent); }
}
  .bg-black\/20 { background-color: rgba(0, 0, 0, 0.2); }
  @supports (color:color-mix(in lab,red,red)) {
  .bg-black\/20 { background-color: color-mix(in oklab,var(--color-black)20=
%,transparent); }
}
  .bg-black\/50 { background-color: rgba(0, 0, 0, 0.5); }
  @supports (color:color-mix(in lab,red,red)) {
  .bg-black\/50 { background-color: color-mix(in oklab,var(--color-black)50=
%,transparent); }
}
  .bg-black\/60 { background-color: rgba(0, 0, 0, 0.6); }
  @supports (color:color-mix(in lab,red,red)) {
  .bg-black\/60 { background-color: color-mix(in oklab,var(--color-black)60=
%,transparent); }
}
  .bg-black\/80 { background-color: rgba(0, 0, 0, 0.8); }
  @supports (color:color-mix(in lab,red,red)) {
  .bg-black\/80 { background-color: color-mix(in oklab,var(--color-black)80=
%,transparent); }
}
  .bg-blue-50 { background-color: var(--color-blue-50); }
  .bg-blue-100 { background-color: var(--color-blue-100); }
  .bg-blue-500 { background-color: var(--color-blue-500); }
  .bg-blue-500\/20 { background-color: rgba(48, 128, 255, 0.2); }
  @supports (color:color-mix(in lab,red,red)) {
  .bg-blue-500\/20 { background-color: color-mix(in oklab,var(--color-blue-=
500)20%,transparent); }
}
  .bg-blue-600 { background-color: var(--color-blue-600); }
  .bg-emerald-700 { background-color: var(--color-emerald-700); }
  .bg-gray-50, .bg-gray-50\/50 { background-color: var(--color-gray-50,#f9f=
9f9); }
  @supports (color:color-mix(in lab,red,red)) {
  .bg-gray-50\/50 { background-color: color-mix(in oklab,var(--color-gray-5=
0,#f9f9f9)50%,transparent); }
}
  .bg-gray-100, .bg-gray-100\/10 { background-color: var(--color-gray-100,#=
ececec); }
  @supports (color:color-mix(in lab,red,red)) {
  .bg-gray-100\/10 { background-color: color-mix(in oklab,var(--color-gray-=
100,#ececec)10%,transparent); }
}
  .bg-gray-100\/40 { background-color: var(--color-gray-100,#ececec); }
  @supports (color:color-mix(in lab,red,red)) {
  .bg-gray-100\/40 { background-color: color-mix(in oklab,var(--color-gray-=
100,#ececec)40%,transparent); }
}
  .bg-gray-100\/50 { background-color: var(--color-gray-100,#ececec); }
  @supports (color:color-mix(in lab,red,red)) {
  .bg-gray-100\/50 { background-color: color-mix(in oklab,var(--color-gray-=
100,#ececec)50%,transparent); }
}
  .bg-gray-100\/70 { background-color: var(--color-gray-100,#ececec); }
  @supports (color:color-mix(in lab,red,red)) {
  .bg-gray-100\/70 { background-color: color-mix(in oklab,var(--color-gray-=
100,#ececec)70%,transparent); }
}
  .bg-gray-200 { background-color: var(--color-gray-200,#e3e3e3); }
  .bg-gray-300 { background-color: var(--color-gray-300,#cdcdcd); }
  .bg-gray-400 { background-color: var(--color-gray-400,#b4b4b4); }
  .bg-gray-500, .bg-gray-500\/20 { background-color: var(--color-gray-500,#=
9b9b9b); }
  @supports (color:color-mix(in lab,red,red)) {
  .bg-gray-500\/20 { background-color: color-mix(in oklab,var(--color-gray-=
500,#9b9b9b)20%,transparent); }
}
  .bg-gray-700, .bg-gray-700\/10 { background-color: var(--color-gray-700,#=
4e4e4e); }
  @supports (color:color-mix(in lab,red,red)) {
  .bg-gray-700\/10 { background-color: color-mix(in oklab,var(--color-gray-=
700,#4e4e4e)10%,transparent); }
}
  .bg-gray-800, .bg-gray-800\/40 { background-color: var(--color-gray-800,#=
333); }
  @supports (color:color-mix(in lab,red,red)) {
  .bg-gray-800\/40 { background-color: color-mix(in oklab,var(--color-gray-=
800,#333)40%,transparent); }
}
  .bg-gray-850 { background-color: var(--color-gray-850,#262626); }
  .bg-gray-900 { background-color: var(--color-gray-900,#171717); }
  .bg-green-100 { background-color: var(--color-green-100); }
  .bg-green-200 { background-color: var(--color-green-200); }
  .bg-green-400 { background-color: var(--color-green-400); }
  .bg-green-500 { background-color: var(--color-green-500); }
  .bg-green-500\/10 { background-color: rgba(0, 199, 88, 0.1); }
  @supports (color:color-mix(in lab,red,red)) {
  .bg-green-500\/10 { background-color: color-mix(in oklab,var(--color-gree=
n-500)10%,transparent); }
}
  .bg-green-500\/20 { background-color: rgba(0, 199, 88, 0.2); }
  @supports (color:color-mix(in lab,red,red)) {
  .bg-green-500\/20 { background-color: color-mix(in oklab,var(--color-gree=
n-500)20%,transparent); }
}
  .bg-orange-200 { background-color: var(--color-orange-200); }
  .bg-purple-100 { background-color: var(--color-purple-100); }
  .bg-red-50 { background-color: var(--color-red-50); }
  .bg-red-100 { background-color: var(--color-red-100); }
  .bg-red-200 { background-color: var(--color-red-200); }
  .bg-red-500 { background-color: var(--color-red-500); }
  .bg-red-500\/20 { background-color: rgba(251, 44, 54, 0.2); }
  @supports (color:color-mix(in lab,red,red)) {
  .bg-red-500\/20 { background-color: color-mix(in oklab,var(--color-red-50=
0)20%,transparent); }
}
  .bg-red-600 { background-color: var(--color-red-600); }
  .bg-red-600\/10 { background-color: rgba(228, 0, 20, 0.1); }
  @supports (color:color-mix(in lab,red,red)) {
  .bg-red-600\/10 { background-color: color-mix(in oklab,var(--color-red-60=
0)10%,transparent); }
}
  .bg-teal-50 { background-color: var(--color-teal-50); }
  .bg-transparent { background-color: rgba(0, 0, 0, 0); }
  .bg-white { background-color: var(--color-white); }
  .bg-white\/5 { background-color: rgba(255, 255, 255, 0.05); }
  @supports (color:color-mix(in lab,red,red)) {
  .bg-white\/5 { background-color: color-mix(in oklab,var(--color-white)5%,=
transparent); }
}
  .bg-white\/10 { background-color: rgba(255, 255, 255, 0.1); }
  @supports (color:color-mix(in lab,red,red)) {
  .bg-white\/10 { background-color: color-mix(in oklab,var(--color-white)10=
%,transparent); }
}
  .bg-white\/20 { background-color: rgba(255, 255, 255, 0.2); }
  @supports (color:color-mix(in lab,red,red)) {
  .bg-white\/20 { background-color: color-mix(in oklab,var(--color-white)20=
%,transparent); }
}
  .bg-white\/60 { background-color: rgba(255, 255, 255, 0.6); }
  @supports (color:color-mix(in lab,red,red)) {
  .bg-white\/60 { background-color: color-mix(in oklab,var(--color-white)60=
%,transparent); }
}
  .bg-white\/70 { background-color: rgba(255, 255, 255, 0.7); }
  @supports (color:color-mix(in lab,red,red)) {
  .bg-white\/70 { background-color: color-mix(in oklab,var(--color-white)70=
%,transparent); }
}
  .bg-white\/80 { background-color: rgba(255, 255, 255, 0.8); }
  @supports (color:color-mix(in lab,red,red)) {
  .bg-white\/80 { background-color: color-mix(in oklab,var(--color-white)80=
%,transparent); }
}
  .bg-white\/90 { background-color: rgba(255, 255, 255, 0.9); }
  @supports (color:color-mix(in lab,red,red)) {
  .bg-white\/90 { background-color: color-mix(in oklab,var(--color-white)90=
%,transparent); }
}
  .bg-yellow-100 { background-color: var(--color-yellow-100); }
  .bg-yellow-200 { background-color: var(--color-yellow-200); }
  .bg-yellow-500 { background-color: var(--color-yellow-500); }
  .bg-yellow-500\/20 { background-color: rgba(237, 178, 0, 0.2); }
  @supports (color:color-mix(in lab,red,red)) {
  .bg-yellow-500\/20 { background-color: color-mix(in oklab,var(--color-yel=
low-500)20%,transparent); }
}
  .bg-linear-138 { --tw-gradient-position: 138deg; background-image: linear=
-gradient(var(--tw-gradient-stops)); }
  @supports (background-image:linear-gradient(in lab,red,red)) {
  .bg-linear-138 { --tw-gradient-position: 138deg in oklab; }
}
  .bg-linear-to-b { --tw-gradient-position: to bottom; background-image: li=
near-gradient(var(--tw-gradient-stops)); }
  @supports (background-image:linear-gradient(in lab,red,red)) {
  .bg-linear-to-b { --tw-gradient-position: to bottom in oklab; }
}
  .bg-linear-to-l { --tw-gradient-position: to left; background-image: line=
ar-gradient(var(--tw-gradient-stops)); }
  @supports (background-image:linear-gradient(in lab,red,red)) {
  .bg-linear-to-l { --tw-gradient-position: to left in oklab; }
}
  .bg-linear-to-t { --tw-gradient-position: to top; background-image: linea=
r-gradient(var(--tw-gradient-stops)); }
  @supports (background-image:linear-gradient(in lab,red,red)) {
  .bg-linear-to-t { --tw-gradient-position: to top in oklab; }
}
  .bg-gradient-to-b { --tw-gradient-position: to bottom in oklab; backgroun=
d-image: linear-gradient(var(--tw-gradient-stops)); }
  .bg-gradient-to-t { --tw-gradient-position: to top in oklab; background-i=
mage: linear-gradient(var(--tw-gradient-stops)); }
  .bg-\[url\(https\:\/\/z-cdn\.chatglm\.cn\/z-ai\/static\/logo\.svg\)\] { b=
ackground-image: url("https://z-cdn.chatglm.cn/z-ai/static/logo.svg"); }
  .bg-none { background-image: none; }
  .from-\[\#1A1919\] { --tw-gradient-from: #1a1919; --tw-gradient-stops: va=
r(--tw-gradient-via-stops,var(--tw-gradient-position),var(--tw-gradient-fro=
m)var(--tw-gradient-from-position),var(--tw-gradient-to)var(--tw-gradient-t=
o-position)); }
  .from-\[\#F4F6F8\] { --tw-gradient-from: #f4f6f8; --tw-gradient-stops: va=
r(--tw-gradient-via-stops,var(--tw-gradient-position),var(--tw-gradient-fro=
m)var(--tw-gradient-from-position),var(--tw-gradient-to)var(--tw-gradient-t=
o-position)); }
  .from-\[\#FBFCFDAC\] { --tw-gradient-from: #fbfcfdac; --tw-gradient-stops=
: var(--tw-gradient-via-stops,var(--tw-gradient-position),var(--tw-gradient=
-from)var(--tw-gradient-from-position),var(--tw-gradient-to)var(--tw-gradie=
nt-to-position)); }
  .from-black { --tw-gradient-from: var(--color-black); --tw-gradient-stops=
: var(--tw-gradient-via-stops,var(--tw-gradient-position),var(--tw-gradient=
-from)var(--tw-gradient-from-position),var(--tw-gradient-to)var(--tw-gradie=
nt-to-position)); }
  .from-white { --tw-gradient-from: var(--color-white); --tw-gradient-stops=
: var(--tw-gradient-via-stops,var(--tw-gradient-position),var(--tw-gradient=
-from)var(--tw-gradient-from-position),var(--tw-gradient-to)var(--tw-gradie=
nt-to-position)); }
  .from-20\% { --tw-gradient-from-position: 20%; }
  .from-80\% { --tw-gradient-from-position: 80%; }
  .via-\[\#F4F6F8\] { --tw-gradient-via: #f4f6f8; --tw-gradient-via-stops: =
var(--tw-gradient-position),var(--tw-gradient-from)var(--tw-gradient-from-p=
osition),var(--tw-gradient-via)var(--tw-gradient-via-position),var(--tw-gra=
dient-to)var(--tw-gradient-to-position); --tw-gradient-stops: var(--tw-grad=
ient-via-stops); }
  .via-white { --tw-gradient-via: var(--color-white); --tw-gradient-via-sto=
ps: var(--tw-gradient-position),var(--tw-gradient-from)var(--tw-gradient-fr=
om-position),var(--tw-gradient-via)var(--tw-gradient-via-position),var(--tw=
-gradient-to)var(--tw-gradient-to-position); --tw-gradient-stops: var(--tw-=
gradient-via-stops); }
  .via-50\% { --tw-gradient-via-position: 50%; }
  .to-\[\#64646B\] { --tw-gradient-to: #64646b; --tw-gradient-stops: var(--=
tw-gradient-via-stops,var(--tw-gradient-position),var(--tw-gradient-from)va=
r(--tw-gradient-from-position),var(--tw-gradient-to)var(--tw-gradient-to-po=
sition)); }
  .to-transparent { --tw-gradient-to: transparent; --tw-gradient-stops: var=
(--tw-gradient-via-stops,var(--tw-gradient-position),var(--tw-gradient-from=
)var(--tw-gradient-from-position),var(--tw-gradient-to)var(--tw-gradient-to=
-position)); }
  .to-white\/85 { --tw-gradient-to: #ffffffd9; --tw-gradient-stops: var(--t=
w-gradient-via-stops,var(--tw-gradient-position),var(--tw-gradient-from)var=
(--tw-gradient-from-position),var(--tw-gradient-to)var(--tw-gradient-to-pos=
ition)); }
  @supports (color:color-mix(in lab,red,red)) {
  .to-white\/85 { --tw-gradient-to: color-mix(in oklab,var(--color-white)85=
%,transparent); }
}
  .bg-contain { background-size: contain; }
  .bg-cover { background-size: cover; }
  .bg-fixed { background-attachment: fixed; }
  .bg-center { background-position: 50% center; }
  .bg-no-repeat { background-repeat: no-repeat; }
  .object-contain { object-fit: contain; }
  .object-cover { object-fit: cover; }
  .object-scale-down { object-fit: scale-down; }
  .object-center { object-position: center center; }
  .p-0 { padding: calc(var(--spacing)*0); }
  .p-0\.5 { padding: calc(var(--spacing)*.5); }
  .p-1 { padding: calc(var(--spacing)*1); }
  .p-1\.5 { padding: calc(var(--spacing)*1.5); }
  .p-1\.75 { padding: calc(var(--spacing)*1.75); }
  .p-2 { padding: calc(var(--spacing)*2); }
  .p-2\.5 { padding: calc(var(--spacing)*2.5); }
  .p-3 { padding: calc(var(--spacing)*3); }
  .p-4 { padding: calc(var(--spacing)*4); }
  .p-5 { padding: calc(var(--spacing)*5); }
  .p-6 { padding: calc(var(--spacing)*6); }
  .p-8 { padding: calc(var(--spacing)*8); }
  .p-10 { padding: calc(var(--spacing)*10); }
  .p-\[7px\] { padding: 7px; }
  .p-\[40px\] { padding: 40px; }
  .px-0\.5 { padding-inline: calc(var(--spacing)*.5); }
  .px-1 { padding-inline: calc(var(--spacing)*1); }
  .px-1\.5 { padding-inline: calc(var(--spacing)*1.5); }
  .px-2 { padding-inline: calc(var(--spacing)*2); }
  .px-2\.5 { padding-inline: calc(var(--spacing)*2.5); }
  .px-3 { padding-inline: calc(var(--spacing)*3); }
  .px-3\! { padding-inline: calc(var(--spacing)*3) !important; }
  .px-3\.5 { padding-inline: calc(var(--spacing)*3.5); }
  .px-4 { padding-inline: calc(var(--spacing)*4); }
  .px-4\.5 { padding-inline: calc(var(--spacing)*4.5); }
  .px-5 { padding-inline: calc(var(--spacing)*5); }
  .px-6 { padding-inline: calc(var(--spacing)*6); }
  .px-8 { padding-inline: calc(var(--spacing)*8); }
  .px-10 { padding-inline: calc(var(--spacing)*10); }
  .px-\[1\.75rem\] { padding-inline: 1.75rem; }
  .px-\[3px\] { padding-inline: 3px; }
  .px-\[11px\] { padding-inline: 11px; }
  .px-\[16px\] { padding-inline: 16px; }
  .py-0\.5 { padding-block: calc(var(--spacing)*.5); }
  .py-1 { padding-block: calc(var(--spacing)*1); }
  .py-1\.5 { padding-block: calc(var(--spacing)*1.5); }
  .py-1\.5\! { padding-block: calc(var(--spacing)*1.5) !important; }
  .py-2 { padding-block: calc(var(--spacing)*2); }
  .py-2\.5 { padding-block: calc(var(--spacing)*2.5); }
  .py-2\.25 { padding-block: calc(var(--spacing)*2.25); }
  .py-3 { padding-block: calc(var(--spacing)*3); }
  .py-3\.5 { padding-block: calc(var(--spacing)*3.5); }
  .py-4 { padding-block: calc(var(--spacing)*4); }
  .py-5 { padding-block: calc(var(--spacing)*5); }
  .py-6 { padding-block: calc(var(--spacing)*6); }
  .py-8 { padding-block: calc(var(--spacing)*8); }
  .py-16 { padding-block: calc(var(--spacing)*16); }
  .py-\[0\.2px\] { padding-block: 0.2px; }
  .py-\[6px\] { padding-block: 6px; }
  .py-\[7px\] { padding-block: 7px; }
  .py-\[9px\] { padding-block: 9px; }
  .pt-0\.5 { padding-top: calc(var(--spacing)*.5); }
  .pt-1 { padding-top: calc(var(--spacing)*1); }
  .pt-1\.5 { padding-top: calc(var(--spacing)*1.5); }
  .pt-2 { padding-top: calc(var(--spacing)*2); }
  .pt-3 { padding-top: calc(var(--spacing)*3); }
  .pt-4 { padding-top: calc(var(--spacing)*4); }
  .pt-5 { padding-top: calc(var(--spacing)*5); }
  .pt-6 { padding-top: calc(var(--spacing)*6); }
  .pt-7 { padding-top: calc(var(--spacing)*7); }
  .pt-8 { padding-top: calc(var(--spacing)*8); }
  .pt-64 { padding-top: calc(var(--spacing)*64); }
  .pr-0 { padding-right: calc(var(--spacing)*0); }
  .pr-0\.5 { padding-right: calc(var(--spacing)*.5); }
  .pr-1 { padding-right: calc(var(--spacing)*1); }
  .pr-1\.5 { padding-right: calc(var(--spacing)*1.5); }
  .pr-2 { padding-right: calc(var(--spacing)*2); }
  .pr-2\.5 { padding-right: calc(var(--spacing)*2.5); }
  .pr-3 { padding-right: calc(var(--spacing)*3); }
  .pr-4 { padding-right: calc(var(--spacing)*4); }
  .pr-5 { padding-right: calc(var(--spacing)*5); }
  .pr-8 { padding-right: calc(var(--spacing)*8); }
  .pr-10 { padding-right: calc(var(--spacing)*10); }
  .pb-0 { padding-bottom: calc(var(--spacing)*0); }
  .pb-0\.5 { padding-bottom: calc(var(--spacing)*.5); }
  .pb-1 { padding-bottom: calc(var(--spacing)*1); }
  .pb-1\.5 { padding-bottom: calc(var(--spacing)*1.5); }
  .pb-2 { padding-bottom: calc(var(--spacing)*2); }
  .pb-2\.5 { padding-bottom: calc(var(--spacing)*2.5); }
  .pb-3 { padding-bottom: calc(var(--spacing)*3); }
  .pb-4 { padding-bottom: calc(var(--spacing)*4); }
  .pb-5 { padding-bottom: calc(var(--spacing)*5); }
  .pb-6 { padding-bottom: calc(var(--spacing)*6); }
  .pb-8 { padding-bottom: calc(var(--spacing)*8); }
  .pb-10 { padding-bottom: calc(var(--spacing)*10); }
  .pb-12 { padding-bottom: calc(var(--spacing)*12); }
  .pb-16 { padding-bottom: calc(var(--spacing)*16); }
  .pb-20 { padding-bottom: calc(var(--spacing)*20); }
  .pb-44 { padding-bottom: calc(var(--spacing)*44); }
  .pb-\[1px\] { padding-bottom: 1px; }
  .pb-safe-bottom { padding-bottom: env(safe-area-inset-bottom); }
  .pl-1 { padding-left: calc(var(--spacing)*1); }
  .pl-1\.5 { padding-left: calc(var(--spacing)*1.5); }
  .pl-2 { padding-left: calc(var(--spacing)*2); }
  .pl-2\.5 { padding-left: calc(var(--spacing)*2.5); }
  .pl-3 { padding-left: calc(var(--spacing)*3); }
  .pl-4 { padding-left: calc(var(--spacing)*4); }
  .pl-5 { padding-left: calc(var(--spacing)*5); }
  .pl-7 { padding-left: calc(var(--spacing)*7); }
  .pl-8 { padding-left: calc(var(--spacing)*8); }
  .text-center { text-align: center; }
  .text-left { text-align: left; }
  .text-right { text-align: right; }
  .text-start { text-align: start; }
  .font-mono { font-family: var(--font-mono); }
  .text-2xl { font-size: var(--text-2xl); line-height: var(--tw-leading,var=
(--text-2xl--line-height)); }
  .text-3xl { font-size: var(--text-3xl); line-height: var(--tw-leading,var=
(--text-3xl--line-height)); }
  .text-4xl { font-size: var(--text-4xl); line-height: var(--tw-leading,var=
(--text-4xl--line-height)); }
  .text-5xl { font-size: var(--text-5xl); line-height: var(--tw-leading,var=
(--text-5xl--line-height)); }
  .text-6xl { font-size: var(--text-6xl); line-height: var(--tw-leading,var=
(--text-6xl--line-height)); }
  .text-base { font-size: var(--text-base); line-height: var(--tw-leading,v=
ar(--text-base--line-height)); }
  .text-lg { font-size: var(--text-lg); line-height: var(--tw-leading,var(-=
-text-lg--line-height)); }
  .text-sm { font-size: var(--text-sm); line-height: var(--tw-leading,var(-=
-text-sm--line-height)); }
  .text-xl { font-size: var(--text-xl); line-height: var(--tw-leading,var(-=
-text-xl--line-height)); }
  .text-xs { font-size: var(--text-xs); line-height: var(--tw-leading,var(-=
-text-xs--line-height)); }
  .text-\[0\.7rem\] { font-size: 0.7rem; }
  .text-\[10px\] { font-size: 10px; }
  .text-\[13px\] { font-size: 13px; }
  .text-\[24px\] { font-size: 24px; }
  .text-\[28px\] { font-size: 28px; }
  .text-\[40px\] { font-size: 40px; }
  .leading-4 { --tw-leading: calc(var(--spacing)*4); line-height: calc(var(=
--spacing)*4); }
  .leading-5 { --tw-leading: calc(var(--spacing)*5); line-height: calc(var(=
--spacing)*5); }
  .leading-6 { --tw-leading: calc(var(--spacing)*6); line-height: calc(var(=
--spacing)*6); }
  .leading-none { --tw-leading: 1; line-height: 1; }
  .leading-relaxed { --tw-leading: var(--leading-relaxed); line-height: var=
(--leading-relaxed); }
  .font-bold { --tw-font-weight: var(--font-weight-bold); font-weight: var(=
--font-weight-bold); }
  .font-medium { --tw-font-weight: var(--font-weight-medium); font-weight: =
var(--font-weight-medium); }
  .font-normal { --tw-font-weight: var(--font-weight-normal); font-weight: =
var(--font-weight-normal); }
  .font-semibold { --tw-font-weight: var(--font-weight-semibold); font-weig=
ht: var(--font-weight-semibold); }
  .tracking-wider { --tw-tracking: var(--tracking-wider); letter-spacing: v=
ar(--tracking-wider); }
  .tracking-widest { --tw-tracking: var(--tracking-widest); letter-spacing:=
 var(--tracking-widest); }
  .text-nowrap { text-wrap: nowrap; }
  .text-wrap { text-wrap: wrap; }
  .break-normal { overflow-wrap: normal; word-break: normal; }
  .break-all { word-break: break-all; }
  .text-ellipsis { text-overflow: ellipsis; }
  .whitespace-nowrap { white-space: nowrap; }
  .whitespace-pre-line { white-space: pre-line; }
  .whitespace-pre-wrap { white-space: pre-wrap; }
  .text-\[\#2ddc44\] { color: rgb(45, 220, 68); }
  .text-\[\#1296DB\] { color: rgb(18, 150, 219); }
  .text-\[\#8945E9\] { color: rgb(137, 69, 233); }
  .text-\[\#44454f\] { color: rgb(68, 69, 79); }
  .text-\[\#F07010\] { color: rgb(240, 112, 16); }
  .text-\[\#FF161A\] { color: rgb(255, 22, 26); }
  .text-\[\#FF4098\] { color: rgb(255, 64, 152); }
  .text-\[rgb\(49\,49\,50\)\] { color: rgb(49, 49, 50); }
  .text-amber-600 { color: var(--color-amber-600); }
  .text-black { color: var(--color-black); }
  .text-black\/10 { color: rgba(0, 0, 0, 0.1); }
  @supports (color:color-mix(in lab,red,red)) {
  .text-black\/10 { color: color-mix(in oklab,var(--color-black)10%,transpa=
rent); }
}
  .text-black\/30 { color: rgba(0, 0, 0, 0.3); }
  @supports (color:color-mix(in lab,red,red)) {
  .text-black\/30 { color: color-mix(in oklab,var(--color-black)30%,transpa=
rent); }
}
  .text-black\/40 { color: rgba(0, 0, 0, 0.4); }
  @supports (color:color-mix(in lab,red,red)) {
  .text-black\/40 { color: color-mix(in oklab,var(--color-black)40%,transpa=
rent); }
}
  .text-black\/50 { color: rgba(0, 0, 0, 0.5); }
  @supports (color:color-mix(in lab,red,red)) {
  .text-black\/50 { color: color-mix(in oklab,var(--color-black)50%,transpa=
rent); }
}
  .text-black\/60 { color: rgba(0, 0, 0, 0.6); }
  @supports (color:color-mix(in lab,red,red)) {
  .text-black\/60 { color: color-mix(in oklab,var(--color-black)60%,transpa=
rent); }
}
  .text-black\/80 { color: rgba(0, 0, 0, 0.8); }
  @supports (color:color-mix(in lab,red,red)) {
  .text-black\/80 { color: color-mix(in oklab,var(--color-black)80%,transpa=
rent); }
}
  .text-black\/90 { color: rgba(0, 0, 0, 0.9); }
  @supports (color:color-mix(in lab,red,red)) {
  .text-black\/90 { color: color-mix(in oklab,var(--color-black)90%,transpa=
rent); }
}
  .text-blue-400 { color: var(--color-blue-400); }
  .text-blue-500 { color: var(--color-blue-500); }
  .text-blue-600 { color: var(--color-blue-600); }
  .text-blue-700 { color: var(--color-blue-700); }
  .text-blue-800 { color: var(--color-blue-800); }
  .text-blue-900 { color: var(--color-blue-900); }
  .text-emerald-500 { color: var(--color-emerald-500); }
  .text-gray-100 { color: var(--color-gray-100,#ececec); }
  .text-gray-300 { color: var(--color-gray-300,#cdcdcd); }
  .text-gray-400 { color: var(--color-gray-400,#b4b4b4); }
  .text-gray-500 { color: var(--color-gray-500,#9b9b9b); }
  .text-gray-600 { color: var(--color-gray-600,#676767); }
  .text-gray-700 { color: var(--color-gray-700,#4e4e4e); }
  .text-gray-800 { color: var(--color-gray-800,#333); }
  .text-gray-850 { color: var(--color-gray-850,#262626); }
  .text-gray-900 { color: var(--color-gray-900,#171717); }
  .text-green-400 { color: var(--color-green-400); }
  .text-green-500 { color: var(--color-green-500); }
  .text-green-600 { color: var(--color-green-600); }
  .text-green-700 { color: var(--color-green-700); }
  .text-green-800 { color: var(--color-green-800); }
  .text-orange-800 { color: var(--color-orange-800); }
  .text-purple-500 { color: var(--color-purple-500); }
  .text-purple-800 { color: var(--color-purple-800); }
  .text-red-500 { color: var(--color-red-500); }
  .text-red-600 { color: var(--color-red-600); }
  .text-red-700 { color: var(--color-red-700); }
  .text-red-800 { color: var(--color-red-800); }
  .text-rose-500 { color: var(--color-rose-500); }
  .text-sky-500 { color: var(--color-sky-500); }
  .text-teal-800 { color: var(--color-teal-800); }
  .text-white { color: var(--color-white); }
  .text-white\/80 { color: rgba(255, 255, 255, 0.8); }
  @supports (color:color-mix(in lab,red,red)) {
  .text-white\/80 { color: color-mix(in oklab,var(--color-white)80%,transpa=
rent); }
}
  .text-yellow-500 { color: var(--color-yellow-500); }
  .text-yellow-700 { color: var(--color-yellow-700); }
  .text-yellow-800 { color: var(--color-yellow-800); }
  .capitalize { text-transform: capitalize; }
  .lowercase { text-transform: lowercase; }
  .uppercase { text-transform: uppercase; }
  .italic { font-style: italic; }
  .no-underline { text-decoration-line: none; }
  .underline { text-decoration-line: underline; }
  .underline-offset-2 { text-underline-offset: 2px; }
  .placeholder-gray-400::placeholder { color: var(--color-gray-400,#b4b4b4)=
; }
  .opacity-0 { opacity: 0; }
  .opacity-20 { opacity: 0.2; }
  .opacity-25 { opacity: 0.25; }
  .opacity-50 { opacity: 0.5; }
  .opacity-60 { opacity: 0.6; }
  .opacity-75 { opacity: 0.75; }
  .opacity-100 { opacity: 1; }
  .shadow-2xl { --tw-shadow: 0 25px 50px -12px var(--tw-shadow-color,#00000=
040); box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--=
tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow); }
  .shadow-\[0_0_16px_0_\#0000000A\] { --tw-shadow: 0 0 16px 0 var(--tw-shad=
ow-color,#0000000a); box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring=
-shadow),var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow=
); }
  .shadow-lg { --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color,#0000001=
a),0 4px 6px -4px var(--tw-shadow-color,#0000001a); box-shadow: var(--tw-in=
set-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--=
tw-ring-shadow),var(--tw-shadow); }
  .shadow-md { --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color,#0000001a)=
,0 2px 4px -2px var(--tw-shadow-color,#0000001a); box-shadow: var(--tw-inse=
t-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw=
-ring-shadow),var(--tw-shadow); }
  .shadow-sm { --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color,#0000001a),0 =
1px 2px -1px var(--tw-shadow-color,#0000001a); box-shadow: var(--tw-inset-s=
hadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(--tw-ri=
ng-shadow),var(--tw-shadow); }
  .shadow-xl { --tw-shadow: 0 20px 25px -5px var(--tw-shadow-color,#0000001=
a),0 8px 10px -6px var(--tw-shadow-color,#0000001a); box-shadow: var(--tw-i=
nset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-shadow),var(-=
-tw-ring-shadow),var(--tw-shadow); }
  .shadow-xs { --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color,#0000000d); b=
ox-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring=
-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow); }
  .outline-hidden { --tw-outline-style: none; outline-style: none; }
  @media (forced-colors: active) {
  .outline-hidden { outline-offset: 2px; outline: rgba(0, 0, 0, 0) solid 2p=
x; }
}
  .outline { outline-style: var(--tw-outline-style); outline-width: 1px; }
  .outline-0 { outline-style: var(--tw-outline-style); outline-width: 0px; =
}
  .outline-1 { outline-style: var(--tw-outline-style); outline-width: 1px; =
}
  .outline-\[1\.5px\] { outline-style: var(--tw-outline-style); outline-wid=
th: 1.5px; }
  .-outline-offset-1 { outline-offset: -1px; }
  .outline-black { outline-color: var(--color-black); }
  .outline-gray-100 { outline-color: var(--color-gray-100,#ececec); }
  .outline-gray-200 { outline-color: var(--color-gray-200,#e3e3e3); }
  .outline-gray-300 { outline-color: var(--color-gray-300,#cdcdcd); }
  .outline-red-300 { outline-color: var(--color-red-300); }
  .blur { --tw-blur: blur(8px); filter: var(--tw-blur,)var(--tw-brightness,=
)var(--tw-contrast,)var(--tw-grayscale,)var(--tw-hue-rotate,)var(--tw-inver=
t,)var(--tw-saturate,)var(--tw-sepia,)var(--tw-drop-shadow,); }
  .blur-sm { --tw-blur: blur(var(--blur-sm)); filter: var(--tw-blur,)var(--=
tw-brightness,)var(--tw-contrast,)var(--tw-grayscale,)var(--tw-hue-rotate,)=
var(--tw-invert,)var(--tw-saturate,)var(--tw-sepia,)var(--tw-drop-shadow,);=
 }
  .invert { --tw-invert: invert(100%); filter: var(--tw-blur,)var(--tw-brig=
htness,)var(--tw-contrast,)var(--tw-grayscale,)var(--tw-hue-rotate,)var(--t=
w-invert,)var(--tw-saturate,)var(--tw-sepia,)var(--tw-drop-shadow,); }
  .filter { filter: var(--tw-blur,)var(--tw-brightness,)var(--tw-contrast,)=
var(--tw-grayscale,)var(--tw-hue-rotate,)var(--tw-invert,)var(--tw-saturate=
,)var(--tw-sepia,)var(--tw-drop-shadow,); }
  .backdrop-blur-2xl { --tw-backdrop-blur: blur(var(--blur-2xl)); backdrop-=
filter: var(--tw-backdrop-blur,)var(--tw-backdrop-brightness,)var(--tw-back=
drop-contrast,)var(--tw-backdrop-grayscale,)var(--tw-backdrop-hue-rotate,)v=
ar(--tw-backdrop-invert,)var(--tw-backdrop-opacity,)var(--tw-backdrop-satur=
ate,)var(--tw-backdrop-sepia,); }
  .backdrop-blur-lg { --tw-backdrop-blur: blur(var(--blur-lg)); backdrop-fi=
lter: var(--tw-backdrop-blur,)var(--tw-backdrop-brightness,)var(--tw-backdr=
op-contrast,)var(--tw-backdrop-grayscale,)var(--tw-backdrop-hue-rotate,)var=
(--tw-backdrop-invert,)var(--tw-backdrop-opacity,)var(--tw-backdrop-saturat=
e,)var(--tw-backdrop-sepia,); }
  .backdrop-blur-sm { --tw-backdrop-blur: blur(var(--blur-sm)); backdrop-fi=
lter: var(--tw-backdrop-blur,)var(--tw-backdrop-brightness,)var(--tw-backdr=
op-contrast,)var(--tw-backdrop-grayscale,)var(--tw-backdrop-hue-rotate,)var=
(--tw-backdrop-invert,)var(--tw-backdrop-opacity,)var(--tw-backdrop-saturat=
e,)var(--tw-backdrop-sepia,); }
  .backdrop-blur-xl { --tw-backdrop-blur: blur(var(--blur-xl)); backdrop-fi=
lter: var(--tw-backdrop-blur,)var(--tw-backdrop-brightness,)var(--tw-backdr=
op-contrast,)var(--tw-backdrop-grayscale,)var(--tw-backdrop-hue-rotate,)var=
(--tw-backdrop-invert,)var(--tw-backdrop-opacity,)var(--tw-backdrop-saturat=
e,)var(--tw-backdrop-sepia,); }
  .backdrop-blur-xs { --tw-backdrop-blur: blur(var(--blur-xs)); backdrop-fi=
lter: var(--tw-backdrop-blur,)var(--tw-backdrop-brightness,)var(--tw-backdr=
op-contrast,)var(--tw-backdrop-grayscale,)var(--tw-backdrop-hue-rotate,)var=
(--tw-backdrop-invert,)var(--tw-backdrop-opacity,)var(--tw-backdrop-saturat=
e,)var(--tw-backdrop-sepia,); }
  .backdrop-filter { backdrop-filter: var(--tw-backdrop-blur,)var(--tw-back=
drop-brightness,)var(--tw-backdrop-contrast,)var(--tw-backdrop-grayscale,)v=
ar(--tw-backdrop-hue-rotate,)var(--tw-backdrop-invert,)var(--tw-backdrop-op=
acity,)var(--tw-backdrop-saturate,)var(--tw-backdrop-sepia,); }
  .transition { transition-property: color, background-color, border-color,=
 outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --=
tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translat=
e, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter; transit=
ion-timing-function: var(--tw-ease,var(--default-transition-timing-function=
)); transition-duration: var(--tw-duration,var(--default-transition-duratio=
n)); }
  .transition-all { transition-property: all; transition-timing-function: v=
ar(--tw-ease,var(--default-transition-timing-function)); transition-duratio=
n: var(--tw-duration,var(--default-transition-duration)); }
  .transition-colors { transition-property: color, background-color, border=
-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-f=
rom, --tw-gradient-via, --tw-gradient-to; transition-timing-function: var(-=
-tw-ease,var(--default-transition-timing-function)); transition-duration: v=
ar(--tw-duration,var(--default-transition-duration)); }
  .transition-opacity { transition-property: opacity; transition-timing-fun=
ction: var(--tw-ease,var(--default-transition-timing-function)); transition=
-duration: var(--tw-duration,var(--default-transition-duration)); }
  .transition-shadow { transition-property: box-shadow; transition-timing-f=
unction: var(--tw-ease,var(--default-transition-timing-function)); transiti=
on-duration: var(--tw-duration,var(--default-transition-duration)); }
  .transition-transform { transition-property: transform, translate, scale,=
 rotate; transition-timing-function: var(--tw-ease,var(--default-transition=
-timing-function)); transition-duration: var(--tw-duration,var(--default-tr=
ansition-duration)); }
  .duration-75 { --tw-duration: 75ms; transition-duration: 75ms; }
  .duration-100 { --tw-duration: .1s; transition-duration: 0.1s; }
  .duration-200 { --tw-duration: .2s; transition-duration: 0.2s; }
  .duration-300 { --tw-duration: .3s; transition-duration: 0.3s; }
  .duration-1000 { --tw-duration: 1s; transition-duration: 1s; }
  .ease-in-out { --tw-ease: var(--ease-in-out); transition-timing-function:=
 var(--ease-in-out); }
  .ease-out { --tw-ease: var(--ease-out); transition-timing-function: var(-=
-ease-out); }
  .contain-paint { --tw-contain-paint: paint; contain: var(--tw-contain-siz=
e,)var(--tw-contain-layout,)var(--tw-contain-paint,)var(--tw-contain-style,=
); }
  .outline-none { --tw-outline-style: none; outline-style: none; }
  .select-none { user-select: none; }
  .group-hover\:visible:is(:where(.group):hover *) { visibility: visible; }
  .group-hover\:scale-105:is(:where(.group):hover *) { --tw-scale-x: 105%; =
--tw-scale-y: 105%; --tw-scale-z: 105%; scale: var(--tw-scale-x)var(--tw-sc=
ale-y); }
  .group-hover\:bg-black\/20:is(:where(.group):hover *) { background-color:=
 rgba(0, 0, 0, 0.2); }
  @supports (color:color-mix(in lab,red,red)) {
  .group-hover\:bg-black\/20:is(:where(.group):hover *) { background-color:=
 color-mix(in oklab,var(--color-black)20%,transparent); }
}
  .group-hover\:bg-gray-600:is(:where(.group):hover *) { background-color: =
var(--color-gray-600,#676767); }
  .group-hover\:text-gray-600:is(:where(.group):hover *) { color: var(--col=
or-gray-600,#676767); }
  .group-hover\:opacity-20:is(:where(.group):hover *) { opacity: 0.2; }
  .group-hover\:opacity-100:is(:where(.group):hover *) { opacity: 1; }
  .group-hover\/item\:flex:is(:where(.group\/item):hover *) { display: flex=
; }
  .group-hover\/item\:hidden:is(:where(.group\/item):hover *) { display: no=
ne; }
  .group-hover\/item\:text-gray-600:is(:where(.group\/item):hover *) { colo=
r: var(--color-gray-600,#676767); }
  .group-hover\/tags\:visible:is(:where(.group\/tags):hover *) { visibility=
: visible; }
  .first-letter\:capitalize::first-letter { text-transform: capitalize; }
  .placeholder\:text-gray-300::placeholder { color: var(--color-gray-300,#c=
dcdcd); }
  .placeholder\:opacity-50::placeholder { opacity: 0.5; }
  .hover\:animate-\[pulse_0\.2s_ease-in-out_infinite\]:hover { animation: 0=
.2s ease-in-out 0s infinite normal none running pulse; }
  .hover\:border-black\/40:hover { border-color: rgba(0, 0, 0, 0.4); }
  @supports (color:color-mix(in lab,red,red)) {
  .hover\:border-black\/40:hover { border-color: color-mix(in oklab,var(--c=
olor-black)40%,transparent); }
}
  .hover\:border-gray-300:hover { border-color: var(--color-gray-300,#cdcdc=
d); }
  .hover\:bg-\[\#3a3b45\]:hover { background-color: rgb(58, 59, 69); }
  .hover\:bg-\[\#5A5C66\]:hover { background-color: rgb(90, 92, 102); }
  .hover\:bg-\[\#1296DB\]\/10:hover { background-color: rgba(18, 150, 219, =
0.1); }
  .hover\:bg-\[\#8945E9\]\/10:hover { background-color: rgba(137, 69, 233, =
0.1); }
  .hover\:bg-\[\#44454f\]\/80:hover { background-color: rgba(68, 69, 79, 0.=
8); }
  .hover\:bg-\[\#DAEEFF\]:hover { background-color: rgb(218, 238, 255); }
  .hover\:bg-\[\#E6E8EA\]:hover { background-color: rgb(230, 232, 234); }
  .hover\:bg-\[\#ECEEF0\]:hover { background-color: rgb(236, 238, 240); }
  .hover\:bg-\[\#F0F0F0\]:hover { background-color: rgb(240, 240, 240); }
  .hover\:bg-\[\#F2F4F6\]:hover { background-color: rgb(242, 244, 246); }
  .hover\:bg-\[\#F4F6F8\]:hover { background-color: rgb(244, 246, 248); }
  .hover\:bg-\[\#F07010\]\/10:hover { background-color: rgba(240, 112, 16, =
0.1); }
  .hover\:bg-\[\#FF161A\]\/10:hover { background-color: rgba(255, 22, 26, 0=
.1); }
  .hover\:bg-\[\#FF4098\]\/10:hover { background-color: rgba(255, 64, 152, =
0.1); }
  .hover\:bg-black\/2:hover { background-color: rgba(0, 0, 0, 0.02); }
  @supports (color:color-mix(in lab,red,red)) {
  .hover\:bg-black\/2:hover { background-color: color-mix(in oklab,var(--co=
lor-black)2%,transparent); }
}
  .hover\:bg-black\/5:hover { background-color: rgba(0, 0, 0, 0.05); }
  @supports (color:color-mix(in lab,red,red)) {
  .hover\:bg-black\/5:hover { background-color: color-mix(in oklab,var(--co=
lor-black)5%,transparent); }
}
  .hover\:bg-black\/10:hover { background-color: rgba(0, 0, 0, 0.1); }
  @supports (color:color-mix(in lab,red,red)) {
  .hover\:bg-black\/10:hover { background-color: color-mix(in oklab,var(--c=
olor-black)10%,transparent); }
}
  .hover\:bg-black\/20:hover { background-color: rgba(0, 0, 0, 0.2); }
  @supports (color:color-mix(in lab,red,red)) {
  .hover\:bg-black\/20:hover { background-color: color-mix(in oklab,var(--c=
olor-black)20%,transparent); }
}
  .hover\:bg-black\/50:hover { background-color: rgba(0, 0, 0, 0.5); }
  @supports (color:color-mix(in lab,red,red)) {
  .hover\:bg-black\/50:hover { background-color: color-mix(in oklab,var(--c=
olor-black)50%,transparent); }
}
  .hover\:bg-black\/60:hover { background-color: rgba(0, 0, 0, 0.6); }
  @supports (color:color-mix(in lab,red,red)) {
  .hover\:bg-black\/60:hover { background-color: color-mix(in oklab,var(--c=
olor-black)60%,transparent); }
}
  .hover\:bg-blue-50:hover { background-color: var(--color-blue-50); }
  .hover\:bg-blue-100:hover { background-color: var(--color-blue-100); }
  .hover\:bg-blue-700:hover { background-color: var(--color-blue-700); }
  .hover\:bg-emerald-800:hover { background-color: var(--color-emerald-800)=
; }
  .hover\:bg-gray-50:hover { background-color: var(--color-gray-50,#f9f9f9)=
; }
  .hover\:bg-gray-100:hover { background-color: var(--color-gray-100,#ecece=
c); }
  .hover\:bg-gray-200:hover { background-color: var(--color-gray-200,#e3e3e=
3); }
  .hover\:bg-gray-300:hover { background-color: var(--color-gray-300,#cdcdc=
d); }
  .hover\:bg-gray-400:hover { background-color: var(--color-gray-400,#b4b4b=
4); }
  .hover\:bg-gray-700\/10:hover { background-color: var(--color-gray-700,#4=
e4e4e); }
  @supports (color:color-mix(in lab,red,red)) {
  .hover\:bg-gray-700\/10:hover { background-color: color-mix(in oklab,var(=
--color-gray-700,#4e4e4e)10%,transparent); }
}
  .hover\:bg-gray-700\/90:hover { background-color: var(--color-gray-700,#4=
e4e4e); }
  @supports (color:color-mix(in lab,red,red)) {
  .hover\:bg-gray-700\/90:hover { background-color: color-mix(in oklab,var(=
--color-gray-700,#4e4e4e)90%,transparent); }
}
  .hover\:bg-gray-800:hover { background-color: var(--color-gray-800,#333);=
 }
  .hover\:bg-gray-850:hover { background-color: var(--color-gray-850,#26262=
6); }
  .hover\:bg-gray-900:hover { background-color: var(--color-gray-900,#17171=
7); }
  .hover\:bg-red-50:hover { background-color: var(--color-red-50); }
  .hover\:bg-red-100:hover { background-color: var(--color-red-100); }
  .hover\:bg-red-700:hover { background-color: var(--color-red-700); }
  .hover\:bg-white:hover { background-color: var(--color-white); }
  .hover\:bg-white\/10:hover { background-color: rgba(255, 255, 255, 0.1); =
}
  @supports (color:color-mix(in lab,red,red)) {
  .hover\:bg-white\/10:hover { background-color: color-mix(in oklab,var(--c=
olor-white)10%,transparent); }
}
  .hover\:bg-white\/50:hover { background-color: rgba(255, 255, 255, 0.5); =
}
  @supports (color:color-mix(in lab,red,red)) {
  .hover\:bg-white\/50:hover { background-color: color-mix(in oklab,var(--c=
olor-white)50%,transparent); }
}
  .hover\:font-medium:hover { --tw-font-weight: var(--font-weight-medium); =
font-weight: var(--font-weight-medium); }
  .hover\:text-\[\#47\,48\,48\]:hover { }
  .hover\:text-black:hover { color: var(--color-black); }
  .hover\:text-blue-300:hover { color: var(--color-blue-300); }
  .hover\:text-blue-600:hover { color: var(--color-blue-600); }
  .hover\:text-blue-800:hover { color: var(--color-blue-800); }
  .hover\:text-gray-500:hover { color: var(--color-gray-500,#9b9b9b); }
  .hover\:text-gray-600:hover { color: var(--color-gray-600,#676767); }
  .hover\:text-gray-700:hover { color: var(--color-gray-700,#4e4e4e); }
  .hover\:text-red-600:hover { color: var(--color-red-600); }
  .hover\:text-white:hover { color: var(--color-white); }
  .hover\:underline:hover { text-decoration-line: underline; }
  .hover\:opacity-50:hover { opacity: 0.5; }
  .hover\:opacity-80:hover { opacity: 0.8; }
  .hover\:opacity-90:hover { opacity: 0.9; }
  .hover\:opacity-100:hover { opacity: 1; }
  .hover\:shadow-lg:hover { --tw-shadow: 0 10px 15px -3px var(--tw-shadow-c=
olor,#0000001a),0 4px 6px -4px var(--tw-shadow-color,#0000001a); box-shadow=
: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-s=
hadow),var(--tw-ring-shadow),var(--tw-shadow); }
  .hover\:shadow-md:hover { --tw-shadow: 0 4px 6px -1px var(--tw-shadow-col=
or,#0000001a),0 2px 4px -2px var(--tw-shadow-color,#0000001a); box-shadow: =
var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offset-sha=
dow),var(--tw-ring-shadow),var(--tw-shadow); }
  .hover\:outline-gray-500:hover { outline-color: var(--color-gray-500,#9b9=
b9b); }
  .focus\:border-gray-700:focus { border-color: var(--color-gray-700,#4e4e4=
e); }
  .focus\:border-transparent:focus { border-color: rgba(0, 0, 0, 0); }
  .focus\:bg-gray-50:focus { background-color: var(--color-gray-50,#f9f9f9)=
; }
  .focus\:ring-0:focus { --tw-ring-shadow: var(--tw-ring-inset,)0 0 0 calc(=
0px + var(--tw-ring-offset-width))var(--tw-ring-color,currentcolor); box-sh=
adow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offs=
et-shadow),var(--tw-ring-shadow),var(--tw-shadow); }
  .focus\:ring-2:focus { --tw-ring-shadow: var(--tw-ring-inset,)0 0 0 calc(=
2px + var(--tw-ring-offset-width))var(--tw-ring-color,currentcolor); box-sh=
adow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offs=
et-shadow),var(--tw-ring-shadow),var(--tw-shadow); }
  .focus\:ring-4:focus { --tw-ring-shadow: var(--tw-ring-inset,)0 0 0 calc(=
4px + var(--tw-ring-offset-width))var(--tw-ring-color,currentcolor); box-sh=
adow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offs=
et-shadow),var(--tw-ring-shadow),var(--tw-shadow); }
  .focus\:ring-blue-300:focus { --tw-ring-color: var(--color-blue-300); }
  .focus\:ring-blue-500:focus { --tw-ring-color: var(--color-blue-500); }
  .focus\:outline-hidden:focus { --tw-outline-style: none; outline-style: n=
one; }
  @media (forced-colors: active) {
  .focus\:outline-hidden:focus { outline-offset: 2px; outline: rgba(0, 0, 0=
, 0) solid 2px; }
}
  .focus\:outline-none:focus { --tw-outline-style: none; outline-style: non=
e; }
  .focus-visible\:ring-1:focus-visible { --tw-ring-shadow: var(--tw-ring-in=
set,)0 0 0 calc(1px + var(--tw-ring-offset-width))var(--tw-ring-color,curre=
ntcolor); box-shadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),va=
r(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow); }
  .active\:scale-98:active { --tw-scale-x: 98%; --tw-scale-y: 98%; --tw-sca=
le-z: 98%; scale: var(--tw-scale-x)var(--tw-scale-y); }
  .active\:bg-\[\#F2F4F6\]:active { background-color: rgb(242, 244, 246); }
  .active\:text-black:active { color: var(--color-black); }
  .disabled\:cursor-not-allowed:disabled { cursor: not-allowed; }
  .disabled\:bg-black\/30:disabled { background-color: rgba(0, 0, 0, 0.3); =
}
  @supports (color:color-mix(in lab,red,red)) {
  .disabled\:bg-black\/30:disabled { background-color: color-mix(in oklab,v=
ar(--color-black)30%,transparent); }
}
  .disabled\:bg-blue-400:disabled { background-color: var(--color-blue-400)=
; }
  .disabled\:bg-gray-50:disabled { background-color: var(--color-gray-50,#f=
9f9f9); }
  .disabled\:bg-gray-500:disabled { background-color: var(--color-gray-500,=
#9b9b9b); }
  .disabled\:bg-none\!:disabled { background-image: none !important; }
  .disabled\:text-black\/30:disabled { color: rgba(0, 0, 0, 0.3); }
  @supports (color:color-mix(in lab,red,red)) {
  .disabled\:text-black\/30:disabled { color: color-mix(in oklab,var(--colo=
r-black)30%,transparent); }
}
  .disabled\:text-gray-300:disabled { color: var(--color-gray-300,#cdcdcd);=
 }
  .disabled\:text-gray-400:disabled { color: var(--color-gray-400,#b4b4b4);=
 }
  .disabled\:text-gray-500:disabled { color: var(--color-gray-500,#9b9b9b);=
 }
  .disabled\:text-gray-600:disabled { color: var(--color-gray-600,#676767);=
 }
  .disabled\:opacity-50:disabled { opacity: 0.5; }
  .hover\:disabled\:bg-transparent:hover:disabled { background-color: rgba(=
0, 0, 0, 0); }
  .data-hovered\:bg-\[\#F4F6F8\][data-hovered] { background-color: rgb(244,=
 246, 248); }
  .data-selected\:bg-gray-50[data-selected] { background-color: var(--color=
-gray-50,#f9f9f9); }
  .data-selected\:text-gray-700[data-selected] { color: var(--color-gray-70=
0,#4e4e4e); }
  .data-selected\:hover\:bg-gray-100[data-selected]:hover { background-colo=
r: var(--color-gray-100,#ececec); }
  .data-\[autoThink\=3Dfalse\]\:hover\:bg-black\/5[data-autothink=3D"false"=
]:hover { background-color: rgba(0, 0, 0, 0.05); }
  @supports (color:color-mix(in lab,red,red)) {
  .data-\[autoThink\=3Dfalse\]\:hover\:bg-black\/5[data-autothink=3D"false"=
]:hover { background-color: color-mix(in oklab,var(--color-black)5%,transpa=
rent); }
}
  .data-\[autoThink\=3Dtrue\]\:border-\[\#0068E00A\][data-autothink=3D"true=
"] { border-color: rgba(0, 104, 224, 0.04); }
  .data-\[autoThink\=3Dtrue\]\:bg-\[\#DAEEFF\][data-autothink=3D"true"] { b=
ackground-color: rgb(218, 238, 255); }
  .data-\[collapsed\=3Dtrue\]\:max-h-\[124px\][data-collapsed=3D"true"] { m=
ax-height: 124px; }
  .data-\[collapsed\=3Dtrue\]\:-rotate-180[data-collapsed=3D"true"] { rotat=
e: -180deg; }
  .data-\[expanded\=3Dfalse\]\:max-h-\[128px\][data-expanded=3D"false"] { m=
ax-height: 128px; }
  .data-\[expanded\=3Dfalse\]\:overflow-y-auto[data-expanded=3D"false"] { o=
verflow-y: auto; }
  .data-\[expanded\=3Dtrue\]\:rotate-90[data-expanded=3D"true"] { rotate: 9=
0deg; }
  .data-\[highlighted\]\:bg-\[\#F4F6F8\][data-highlighted] { background-col=
or: rgb(244, 246, 248); }
  .data-\[mediaMobile\=3Dfalse\]\:top-0[data-mediamobile=3D"false"] { top: =
calc(var(--spacing)*0); }
  .data-\[mediaMobile\=3Dfalse\]\:flex-wrap[data-mediamobile=3D"false"] { f=
lex-wrap: wrap; }
  .data-\[mediaMobile\=3Dfalse\]\:overflow-hidden[data-mediamobile=3D"false=
"] { overflow: hidden; }
  .data-\[mediaMobile\=3Dtrue\]\:bottom-0[data-mediamobile=3D"true"] { bott=
om: calc(var(--spacing)*0); }
  .data-\[mediaMobile\=3Dtrue\]\:overflow-x-auto[data-mediamobile=3D"true"]=
 { overflow-x: auto; }
  .data-\[open\=3Dtrue\]\:rotate-180[data-open=3D"true"] { rotate: 180deg; =
}
  .data-\[priority\=3Dhigh\]\:border-\[\#E8485033\][data-priority=3D"high"]=
 { border-color: rgba(232, 72, 80, 0.2); }
  .data-\[priority\=3Dhigh\]\:bg-\[\#E848501A\][data-priority=3D"high"] { b=
ackground-color: rgba(232, 72, 80, 0.1); }
  .data-\[priority\=3Dhigh\]\:text-\[\#B60F18\][data-priority=3D"high"] { c=
olor: rgb(182, 15, 24); }
  .data-\[priority\=3Dlow\]\:border-\[\#28B4A033\][data-priority=3D"low"] {=
 border-color: rgba(40, 180, 160, 0.2); }
  .data-\[priority\=3Dlow\]\:bg-\[\#28B4A01A\][data-priority=3D"low"] { bac=
kground-color: rgba(40, 180, 160, 0.1); }
  .data-\[priority\=3Dlow\]\:text-\[\#009983\][data-priority=3D"low"] { col=
or: rgb(0, 153, 131); }
  .data-\[priority\=3Dmedium\]\:border-\[\#FB860333\][data-priority=3D"medi=
um"] { border-color: rgba(251, 134, 3, 0.2); }
  .data-\[priority\=3Dmedium\]\:bg-\[\#FB86031A\][data-priority=3D"medium"]=
 { background-color: rgba(251, 134, 3, 0.1); }
  .data-\[priority\=3Dmedium\]\:text-\[\#80603C\][data-priority=3D"medium"]=
 { color: rgb(128, 96, 60); }
  .data-\[selected\]\:bg-\[\#F2F4F8\][data-selected] { background-color: rg=
b(242, 244, 248); }
  .data-\[selected\=3Dtrue\]\:bg-\[\#F4F6F8\][data-selected=3D"true"] { bac=
kground-color: rgb(244, 246, 248); }
  .data-\[selected\=3Dtrue\]\:bg-black\/10[data-selected=3D"true"] { backgr=
ound-color: rgba(0, 0, 0, 0.1); }
  @supports (color:color-mix(in lab,red,red)) {
  .data-\[selected\=3Dtrue\]\:bg-black\/10[data-selected=3D"true"] { backgr=
ound-color: color-mix(in oklab,var(--color-black)10%,transparent); }
}
  .data-\[selected\=3Dtrue\]\:bg-blue-100[data-selected=3D"true"] { backgro=
und-color: var(--color-blue-100); }
  .data-\[selected\=3Dtrue\]\:group-hover\:bg-transparent[data-selected=3D"=
true"]:is(:where(.group):hover *) { background-color: rgba(0, 0, 0, 0); }
  .data-\[state\=3Dactive\]\:bg-\[\#F4F6F8\][data-state=3D"active"] { backg=
round-color: rgb(244, 246, 248); }
  .data-\[state\=3Dactive\]\:bg-black[data-state=3D"active"] { background-c=
olor: var(--color-black); }
  .data-\[state\=3Dactive\]\:text-black\/80[data-state=3D"active"] { color:=
 rgba(0, 0, 0, 0.8); }
  @supports (color:color-mix(in lab,red,red)) {
  .data-\[state\=3Dactive\]\:text-black\/80[data-state=3D"active"] { color:=
 color-mix(in oklab,var(--color-black)80%,transparent); }
}
  .data-\[state\=3Dactive\]\:text-white[data-state=3D"active"] { color: var=
(--color-white); }
  .data-\[state\=3Dchecked\]\:translate-x-5\.5[data-state=3D"checked"] { --=
tw-translate-x: calc(var(--spacing)*5.5); translate: var(--tw-translate-x)v=
ar(--tw-translate-y); }
  .data-\[state\=3Don\]\:bg-\[\#F2F4F6\][data-state=3D"on"] { background-co=
lor: rgb(242, 244, 246); }
  .data-\[state\=3Don\]\:text-black[data-state=3D"on"] { color: var(--color=
-black); }
  .data-\[state\=3Dunchecked\]\:translate-x-0[data-state=3D"unchecked"] { -=
-tw-translate-x: calc(var(--spacing)*0); translate: var(--tw-translate-x)va=
r(--tw-translate-y); }
  .data-\[status\=3Dcompleted\]\:text-black\/40[data-status=3D"completed"] =
{ color: rgba(0, 0, 0, 0.4); }
  @supports (color:color-mix(in lab,red,red)) {
  .data-\[status\=3Dcompleted\]\:text-black\/40[data-status=3D"completed"] =
{ color: color-mix(in oklab,var(--color-black)40%,transparent); }
}
  .data-\[status\=3Dcompleted\]\:line-through[data-status=3D"completed"] { =
text-decoration-line: line-through; }
  .data-\[status\=3Din\\\\_progress\]\:font-medium[data-status=3D"in_progre=
ss"], .data-\[status\=3Din\\_progress\]\:font-medium[data-status=3D"in_prog=
ress"] { --tw-font-weight: var(--font-weight-medium); font-weight: var(--fo=
nt-weight-medium); }
  @media not all and (min-width: 48rem) {
  .max-md\:text-xs { font-size: var(--text-xs); line-height: var(--tw-leadi=
ng,var(--text-xs--line-height)); }
  .max-md\:text-\[24px\] { font-size: 24px; }
}
  @media not all and (min-width: 40rem) {
  .max-sm\:gap-2 { gap: calc(var(--spacing)*2); }
}
  @media (min-width: 40rem) {
  .sm\:inline { display: inline; }
  .sm\:max-w-md { max-width: 28rem; }
  .sm\:flex-row { flex-direction: row; }
  .sm\:items-center { align-items: center; }
  .sm\:items-start { align-items: flex-start; }
  .sm\:justify-between { justify-content: space-between; }
  .sm\:justify-center { justify-content: center; }
  .sm\:gap-6 { gap: calc(var(--spacing)*6); }
  :where(.sm\:space-x-6 > :not(:last-child)) { --tw-space-x-reverse: 0; mar=
gin-inline-start: calc(calc(var(--spacing)*6)*var(--tw-space-x-reverse)); m=
argin-inline-end: calc(calc(var(--spacing)*6)*calc(1 - var(--tw-space-x-rev=
erse))); }
  .sm\:text-2xl { font-size: var(--text-2xl); line-height: var(--tw-leading=
,var(--text-2xl--line-height)); }
  .sm\:opacity-0 { opacity: 0; }
}
  @media (min-width: 48rem) {
  .md\:relative { position: relative; }
  .md\:left-\[260px\] { left: 260px; }
  .md\:mb-0 { margin-bottom: calc(var(--spacing)*0); }
  .md\:ml-0 { margin-left: calc(var(--spacing)*0); }
  .md\:flex { display: flex; }
  .md\:hidden { display: none; }
  .md\:size-60 { width: calc(var(--spacing)*60); height: calc(var(--spacing=
)*60); }
  .md\:h-10 { height: calc(var(--spacing)*10); }
  .md\:h-12 { height: calc(var(--spacing)*12); }
  .md\:min-h-\[32rem\] { min-height: 32rem; }
  .md\:w-40 { width: calc(var(--spacing)*40); }
  .md\:w-\[calc\(100\%-260px\)\] { width: calc(100% - 260px); }
  .md\:max-w-\[calc\(100\%-260px\)\] { max-width: calc(100% - 260px); }
  .md\:min-w-\[280px\] { min-width: 280px; }
  .md\:flex-none { flex: 0 0 auto; }
  .md\:translate-x-\[260px\] { --tw-translate-x: 260px; translate: var(--tw=
-translate-x)var(--tw-translate-y); }
  .md\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }
  .md\:flex-col { flex-direction: column; }
  .md\:flex-row { flex-direction: row; }
  .md\:items-center { align-items: center; }
  .md\:gap-1 { gap: calc(var(--spacing)*1); }
  .md\:gap-6 { gap: calc(var(--spacing)*6); }
  :where(.md\:space-x-4 > :not(:last-child)) { --tw-space-x-reverse: 0; mar=
gin-inline-start: calc(calc(var(--spacing)*4)*var(--tw-space-x-reverse)); m=
argin-inline-end: calc(calc(var(--spacing)*4)*calc(1 - var(--tw-space-x-rev=
erse))); }
  .md\:self-center { align-self: center; }
  .md\:self-start { align-self: flex-start; }
  .md\:p-10 { padding: calc(var(--spacing)*10); }
  .md\:px-0 { padding-inline: calc(var(--spacing)*0); }
  .md\:pr-0 { padding-right: calc(var(--spacing)*0); }
}
  @media (min-width: 64rem) {
  .lg\:mt-0 { margin-top: calc(var(--spacing)*0); }
  .lg\:mt-1 { margin-top: calc(var(--spacing)*1); }
  .lg\:h-\[22rem\] { height: 22rem; }
  .lg\:max-h-\[22rem\] { max-height: 22rem; }
  .lg\:max-h-full { max-height: 100%; }
  .lg\:w-40 { width: calc(var(--spacing)*40); }
  .lg\:flex-none { flex: 0 0 auto; }
  .lg\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }
  .lg\:flex-col { flex-direction: column; }
  .lg\:flex-row { flex-direction: row; }
  .lg\:gap-1 { gap: calc(var(--spacing)*1); }
  :where(.lg\:space-x-4 > :not(:last-child)) { --tw-space-x-reverse: 0; mar=
gin-inline-start: calc(calc(var(--spacing)*4)*var(--tw-space-x-reverse)); m=
argin-inline-end: calc(calc(var(--spacing)*4)*calc(1 - var(--tw-space-x-rev=
erse))); }
  .lg\:px-20 { padding-inline: calc(var(--spacing)*20); }
  .lg\:text-7xl { font-size: var(--text-7xl); line-height: var(--tw-leading=
,var(--text-7xl--line-height)); }
}
  @container not (min-width: 510px) {
  .\@max-\[510px\]\:hidden { display: none; }
  .\@max-\[510px\]\:aspect-square { aspect-ratio: 1 / 1; }
  .\@max-\[510px\]\:max-w-\[145px\] { max-width: 145px; }
  .\@max-\[510px\]\:p-1\.5 { padding: calc(var(--spacing)*1.5); }
}
  @container not (min-width: 32rem) {
  .\@max-lg\:size-4 { width: calc(var(--spacing)*4); height: calc(var(--spa=
cing)*4); }
  .\@max-lg\:px-2 { padding-inline: calc(var(--spacing)*2); }
  .\@max-lg\:py-1 { padding-block: calc(var(--spacing)*1); }
  .\@max-lg\:text-sm { font-size: var(--text-sm); line-height: var(--tw-lea=
ding,var(--text-sm--line-height)); }
}
  @container not (min-width: 28rem) {
  .\@max-md\:top-2 { top: calc(var(--spacing)*2); }
  .\@max-md\:right-2 { right: calc(var(--spacing)*2); }
  .\@max-md\:left-2 { left: calc(var(--spacing)*2); }
  .\@max-md\:mt-3 { margin-top: calc(var(--spacing)*3); }
  .\@max-md\:hidden { display: none; }
  .\@max-md\:size-3 { width: calc(var(--spacing)*3); height: calc(var(--spa=
cing)*3); }
  .\@max-md\:px-2 { padding-inline: calc(var(--spacing)*2); }
  .\@max-md\:px-2\.5 { padding-inline: calc(var(--spacing)*2.5); }
  .\@max-md\:py-0\.5 { padding-block: calc(var(--spacing)*.5); }
  .\@max-md\:py-1 { padding-block: calc(var(--spacing)*1); }
  .\@max-md\:text-xs { font-size: var(--text-xs); line-height: var(--tw-lea=
ding,var(--text-xs--line-height)); }
  .\@max-md\:text-\[24px\] { font-size: 24px; }
}
  @container (min-width: 24rem) {
  .\@sm\:block { display: block; }
  .\@sm\:gap-3\.5 { gap: calc(var(--spacing)*3.5); }
}
  @container (min-width: 28rem) {
  .\@md\:max-w-3xl { max-width: 48rem; }
}
  @container (min-width: 36rem) {
  .\@xl\:block { display: block; }
  .\@xl\:px-2\.5 { padding-inline: calc(var(--spacing)*2.5); }
  .\@xl\:px-3 { padding-inline: calc(var(--spacing)*3); }
}
  @container (min-width: 42rem) {
  .\@2xl\:px-20 { padding-inline: calc(var(--spacing)*20); }
}
  .ltr\:mr-3:where(:dir(ltr), [dir=3D"ltr"], [dir=3D"ltr"] *) { margin-righ=
t: calc(var(--spacing)*3); }
  .rtl\:ml-3:where(:dir(rtl), [dir=3D"rtl"], [dir=3D"rtl"] *) { margin-left=
: calc(var(--spacing)*3); }
  .dark\:rounded-lg:is(.dark *) { border-radius: var(--radius-lg); }
  .dark\:rounded-md:is(.dark *) { border-radius: var(--radius-md); }
  .dark\:border:is(.dark *) { border-style: var(--tw-border-style); border-=
width: 1px; }
  .dark\:border-none:is(.dark *) { --tw-border-style: none; border-style: n=
one; }
  .dark\:border-\[\#3C3E3F\]:is(.dark *) { border-color: rgb(60, 62, 63); }
  .dark\:border-\[\#009FFF0A\]:is(.dark *) { border-color: rgba(0, 159, 255=
, 0.04); }
  .dark\:border-\[\#27282A\]:is(.dark *) { border-color: rgb(39, 40, 42); }
  .dark\:border-amber-800:is(.dark *) { border-color: var(--color-amber-800=
); }
  .dark\:border-black:is(.dark *) { border-color: var(--color-black); }
  .dark\:border-blue-700:is(.dark *) { border-color: var(--color-blue-700);=
 }
  .dark\:border-gray-600:is(.dark *) { border-color: var(--color-gray-600,#=
676767); }
  .dark\:border-gray-700:is(.dark *), .dark\:border-gray-700\/10:is(.dark *=
) { border-color: var(--color-gray-700,#4e4e4e); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:border-gray-700\/10:is(.dark *) { border-color: color-mix(in oklab=
,var(--color-gray-700,#4e4e4e)10%,transparent); }
}
  .dark\:border-gray-700\/40:is(.dark *) { border-color: var(--color-gray-7=
00,#4e4e4e); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:border-gray-700\/40:is(.dark *) { border-color: color-mix(in oklab=
,var(--color-gray-700,#4e4e4e)40%,transparent); }
}
  .dark\:border-gray-700\/50:is(.dark *) { border-color: var(--color-gray-7=
00,#4e4e4e); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:border-gray-700\/50:is(.dark *) { border-color: color-mix(in oklab=
,var(--color-gray-700,#4e4e4e)50%,transparent); }
}
  .dark\:border-gray-800:is(.dark *) { border-color: var(--color-gray-800,#=
333); }
  .dark\:border-gray-850:is(.dark *) { border-color: var(--color-gray-850,#=
262626); }
  .dark\:border-gray-900:is(.dark *) { border-color: var(--color-gray-900,#=
171717); }
  .dark\:border-red-800:is(.dark *) { border-color: var(--color-red-800); }
  .dark\:border-white:is(.dark *) { border-color: var(--color-white); }
  .dark\:border-white\/5:is(.dark *) { border-color: rgba(255, 255, 255, 0.=
05); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:border-white\/5:is(.dark *) { border-color: color-mix(in oklab,var=
(--color-white)5%,transparent); }
}
  .dark\:border-white\/10:is(.dark *) { border-color: rgba(255, 255, 255, 0=
.1); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:border-white\/10:is(.dark *) { border-color: color-mix(in oklab,va=
r(--color-white)10%,transparent); }
}
  .dark\:border-white\/20:is(.dark *) { border-color: rgba(255, 255, 255, 0=
.2); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:border-white\/20:is(.dark *) { border-color: color-mix(in oklab,va=
r(--color-white)20%,transparent); }
}
  .dark\:border-white\/30:is(.dark *) { border-color: rgba(255, 255, 255, 0=
.3); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:border-white\/30:is(.dark *) { border-color: color-mix(in oklab,va=
r(--color-white)30%,transparent); }
}
  .dark\:border-white\/50:is(.dark *) { border-color: rgba(255, 255, 255, 0=
.5); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:border-white\/50:is(.dark *) { border-color: color-mix(in oklab,va=
r(--color-white)50%,transparent); }
}
  .dark\:bg-\[\#0C0E10\]:is(.dark *) { background-color: rgb(12, 14, 16); }
  .dark\:bg-\[\#1a1a1a\]:is(.dark *) { background-color: rgb(26, 26, 26); }
  .dark\:bg-\[\#3C3E40\]:is(.dark *) { background-color: rgb(60, 62, 64); }
  .dark\:bg-\[\#484A58\]:is(.dark *) { background-color: rgb(72, 74, 88); }
  .dark\:bg-\[\#16181A\]:is(.dark *) { background-color: rgb(22, 24, 26); }
  .dark\:bg-\[\#17181A\]:is(.dark *) { background-color: rgb(23, 24, 26); }
  .dark\:bg-\[\#25282A\]:is(.dark *) { background-color: rgb(37, 40, 42); }
  .dark\:bg-\[\#26282A\]:is(.dark *) { background-color: rgb(38, 40, 42); }
  .dark\:bg-\[\#33363d\]:is(.dark *) { background-color: rgb(51, 54, 61); }
  .dark\:bg-\[\#37383B\]:is(.dark *) { background-color: rgb(55, 56, 59); }
  .dark\:bg-\[\#141618\]:is(.dark *) { background-color: rgb(20, 22, 24); }
  .dark\:bg-\[\#141718\]:is(.dark *) { background-color: rgb(20, 23, 24); }
  .dark\:bg-\[\#202123\]:is(.dark *) { background-color: rgb(32, 33, 35); }
  .dark\:bg-amber-900\/30:is(.dark *) { background-color: rgba(123, 51, 6, =
0.3); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:bg-amber-900\/30:is(.dark *) { background-color: color-mix(in okla=
b,var(--color-amber-900)30%,transparent); }
}
  .dark\:bg-black:is(.dark *) { background-color: var(--color-black); }
  .dark\:bg-black\/5:is(.dark *) { background-color: rgba(0, 0, 0, 0.05); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:bg-black\/5:is(.dark *) { background-color: color-mix(in oklab,var=
(--color-black)5%,transparent); }
}
  .dark\:bg-black\/10:is(.dark *) { background-color: rgba(0, 0, 0, 0.1); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:bg-black\/10:is(.dark *) { background-color: color-mix(in oklab,va=
r(--color-black)10%,transparent); }
}
  .dark\:bg-black\/30:is(.dark *) { background-color: rgba(0, 0, 0, 0.3); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:bg-black\/30:is(.dark *) { background-color: color-mix(in oklab,va=
r(--color-black)30%,transparent); }
}
  .dark\:bg-black\/40:is(.dark *) { background-color: rgba(0, 0, 0, 0.4); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:bg-black\/40:is(.dark *) { background-color: color-mix(in oklab,va=
r(--color-black)40%,transparent); }
}
  .dark\:bg-black\/70:is(.dark *) { background-color: rgba(0, 0, 0, 0.7); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:bg-black\/70:is(.dark *) { background-color: color-mix(in oklab,va=
r(--color-black)70%,transparent); }
}
  .dark\:bg-black\/80:is(.dark *) { background-color: rgba(0, 0, 0, 0.8); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:bg-black\/80:is(.dark *) { background-color: color-mix(in oklab,va=
r(--color-black)80%,transparent); }
}
  .dark\:bg-blue-600:is(.dark *) { background-color: var(--color-blue-600);=
 }
  .dark\:bg-blue-800:is(.dark *) { background-color: var(--color-blue-800);=
 }
  .dark\:bg-blue-800\/50:is(.dark *) { background-color: rgba(25, 60, 184, =
0.5); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:bg-blue-800\/50:is(.dark *) { background-color: color-mix(in oklab=
,var(--color-blue-800)50%,transparent); }
}
  .dark\:bg-blue-900:is(.dark *) { background-color: var(--color-blue-900);=
 }
  .dark\:bg-blue-900\/20:is(.dark *) { background-color: rgba(28, 57, 142, =
0.2); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:bg-blue-900\/20:is(.dark *) { background-color: color-mix(in oklab=
,var(--color-blue-900)20%,transparent); }
}
  .dark\:bg-blue-900\/30:is(.dark *) { background-color: rgba(28, 57, 142, =
0.3); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:bg-blue-900\/30:is(.dark *) { background-color: color-mix(in oklab=
,var(--color-blue-900)30%,transparent); }
}
  .dark\:bg-gray-100:is(.dark *), .dark\:bg-gray-100\/10:is(.dark *) { back=
ground-color: var(--color-gray-100,#ececec); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:bg-gray-100\/10:is(.dark *) { background-color: color-mix(in oklab=
,var(--color-gray-100,#ececec)10%,transparent); }
}
  .dark\:bg-gray-200:is(.dark *) { background-color: var(--color-gray-200,#=
e3e3e3); }
  .dark\:bg-gray-300:is(.dark *) { background-color: var(--color-gray-300,#=
cdcdcd); }
  .dark\:bg-gray-400:is(.dark *) { background-color: var(--color-gray-400,#=
b4b4b4); }
  .dark\:bg-gray-500\/20:is(.dark *) { background-color: var(--color-gray-5=
00,#9b9b9b); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:bg-gray-500\/20:is(.dark *) { background-color: color-mix(in oklab=
,var(--color-gray-500,#9b9b9b)20%,transparent); }
}
  .dark\:bg-gray-600:is(.dark *), .dark\:bg-gray-600\/70:is(.dark *) { back=
ground-color: var(--color-gray-600,#676767); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:bg-gray-600\/70:is(.dark *) { background-color: color-mix(in oklab=
,var(--color-gray-600,#676767)70%,transparent); }
}
  .dark\:bg-gray-700:is(.dark *), .dark\:bg-gray-700\/20:is(.dark *) { back=
ground-color: var(--color-gray-700,#4e4e4e); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:bg-gray-700\/20:is(.dark *) { background-color: color-mix(in oklab=
,var(--color-gray-700,#4e4e4e)20%,transparent); }
}
  .dark\:bg-gray-700\/50:is(.dark *) { background-color: var(--color-gray-7=
00,#4e4e4e); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:bg-gray-700\/50:is(.dark *) { background-color: color-mix(in oklab=
,var(--color-gray-700,#4e4e4e)50%,transparent); }
}
  .dark\:bg-gray-800:is(.dark *), .dark\:bg-gray-800\/50:is(.dark *) { back=
ground-color: var(--color-gray-800,#333); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:bg-gray-800\/50:is(.dark *) { background-color: color-mix(in oklab=
,var(--color-gray-800,#333)50%,transparent); }
}
  .dark\:bg-gray-800\/90:is(.dark *) { background-color: var(--color-gray-8=
00,#333); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:bg-gray-800\/90:is(.dark *) { background-color: color-mix(in oklab=
,var(--color-gray-800,#333)90%,transparent); }
}
  .dark\:bg-gray-850:is(.dark *) { background-color: var(--color-gray-850,#=
262626); }
  .dark\:bg-gray-900:is(.dark *), .dark\:bg-gray-900\/20:is(.dark *) { back=
ground-color: var(--color-gray-900,#171717); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:bg-gray-900\/20:is(.dark *) { background-color: color-mix(in oklab=
,var(--color-gray-900,#171717)20%,transparent); }
}
  .dark\:bg-gray-900\/50:is(.dark *) { background-color: var(--color-gray-9=
00,#171717); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:bg-gray-900\/50:is(.dark *) { background-color: color-mix(in oklab=
,var(--color-gray-900,#171717)50%,transparent); }
}
  .dark\:bg-gray-950:is(.dark *) { background-color: var(--color-gray-950,#=
0d0d0d); }
  .dark\:bg-green-800:is(.dark *) { background-color: var(--color-green-800=
); }
  .dark\:bg-green-800\/50:is(.dark *) { background-color: rgba(1, 102, 48, =
0.5); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:bg-green-800\/50:is(.dark *) { background-color: color-mix(in okla=
b,var(--color-green-800)50%,transparent); }
}
  .dark\:bg-green-900:is(.dark *) { background-color: var(--color-green-900=
); }
  .dark\:bg-orange-800:is(.dark *) { background-color: var(--color-orange-8=
00); }
  .dark\:bg-purple-900:is(.dark *) { background-color: var(--color-purple-9=
00); }
  .dark\:bg-red-800:is(.dark *) { background-color: var(--color-red-800); }
  .dark\:bg-red-800\/50:is(.dark *) { background-color: rgba(159, 7, 18, 0.=
5); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:bg-red-800\/50:is(.dark *) { background-color: color-mix(in oklab,=
var(--color-red-800)50%,transparent); }
}
  .dark\:bg-red-900:is(.dark *) { background-color: var(--color-red-900); }
  .dark\:bg-red-900\/20:is(.dark *) { background-color: rgba(130, 24, 26, 0=
.2); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:bg-red-900\/20:is(.dark *) { background-color: color-mix(in oklab,=
var(--color-red-900)20%,transparent); }
}
  .dark\:bg-red-900\/30:is(.dark *) { background-color: rgba(130, 24, 26, 0=
.3); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:bg-red-900\/30:is(.dark *) { background-color: color-mix(in oklab,=
var(--color-red-900)30%,transparent); }
}
  .dark\:bg-stone-700:is(.dark *) { background-color: var(--color-stone-700=
); }
  .dark\:bg-teal-900\/20:is(.dark *) { background-color: rgba(11, 79, 74, 0=
.2); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:bg-teal-900\/20:is(.dark *) { background-color: color-mix(in oklab=
,var(--color-teal-900)20%,transparent); }
}
  .dark\:bg-transparent:is(.dark *) { background-color: rgba(0, 0, 0, 0); }
  .dark\:bg-white:is(.dark *) { background-color: var(--color-white); }
  .dark\:bg-white\/5:is(.dark *) { background-color: rgba(255, 255, 255, 0.=
05); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:bg-white\/5:is(.dark *) { background-color: color-mix(in oklab,var=
(--color-white)5%,transparent); }
}
  .dark\:bg-white\/10:is(.dark *) { background-color: rgba(255, 255, 255, 0=
.1); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:bg-white\/10:is(.dark *) { background-color: color-mix(in oklab,va=
r(--color-white)10%,transparent); }
}
  .dark\:bg-white\/15:is(.dark *) { background-color: rgba(255, 255, 255, 0=
.15); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:bg-white\/15:is(.dark *) { background-color: color-mix(in oklab,va=
r(--color-white)15%,transparent); }
}
  .dark\:bg-white\/20:is(.dark *) { background-color: rgba(255, 255, 255, 0=
.2); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:bg-white\/20:is(.dark *) { background-color: color-mix(in oklab,va=
r(--color-white)20%,transparent); }
}
  .dark\:bg-white\/30:is(.dark *) { background-color: rgba(255, 255, 255, 0=
.3); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:bg-white\/30:is(.dark *) { background-color: color-mix(in oklab,va=
r(--color-white)30%,transparent); }
}
  .dark\:bg-white\/50:is(.dark *) { background-color: rgba(255, 255, 255, 0=
.5); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:bg-white\/50:is(.dark *) { background-color: color-mix(in oklab,va=
r(--color-white)50%,transparent); }
}
  .dark\:bg-white\/80:is(.dark *) { background-color: rgba(255, 255, 255, 0=
.8); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:bg-white\/80:is(.dark *) { background-color: color-mix(in oklab,va=
r(--color-white)80%,transparent); }
}
  .dark\:bg-yellow-800:is(.dark *) { background-color: var(--color-yellow-8=
00); }
  .dark\:bg-yellow-900\/20:is(.dark *) { background-color: rgba(115, 62, 10=
, 0.2); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:bg-yellow-900\/20:is(.dark *) { background-color: color-mix(in okl=
ab,var(--color-yellow-900)20%,transparent); }
}
  .dark\:from-\[\#111415BC\]:is(.dark *) { --tw-gradient-from: #111415bc; -=
-tw-gradient-stops: var(--tw-gradient-via-stops,var(--tw-gradient-position)=
,var(--tw-gradient-from)var(--tw-gradient-from-position),var(--tw-gradient-=
to)var(--tw-gradient-to-position)); }
  .dark\:from-\[\#141618\]:is(.dark *) { --tw-gradient-from: #141618; --tw-=
gradient-stops: var(--tw-gradient-via-stops,var(--tw-gradient-position),var=
(--tw-gradient-from)var(--tw-gradient-from-position),var(--tw-gradient-to)v=
ar(--tw-gradient-to-position)); }
  .dark\:from-gray-900:is(.dark *) { --tw-gradient-from: var(--color-gray-9=
00,#171717); --tw-gradient-stops: var(--tw-gradient-via-stops,var(--tw-grad=
ient-position),var(--tw-gradient-from)var(--tw-gradient-from-position),var(=
--tw-gradient-to)var(--tw-gradient-to-position)); }
  .dark\:via-\[\#141618\]:is(.dark *) { --tw-gradient-via: #141618; --tw-gr=
adient-via-stops: var(--tw-gradient-position),var(--tw-gradient-from)var(--=
tw-gradient-from-position),var(--tw-gradient-via)var(--tw-gradient-via-posi=
tion),var(--tw-gradient-to)var(--tw-gradient-to-position); --tw-gradient-st=
ops: var(--tw-gradient-via-stops); }
  .dark\:via-gray-900:is(.dark *) { --tw-gradient-via: var(--color-gray-900=
,#171717); --tw-gradient-via-stops: var(--tw-gradient-position),var(--tw-gr=
adient-from)var(--tw-gradient-from-position),var(--tw-gradient-via)var(--tw=
-gradient-via-position),var(--tw-gradient-to)var(--tw-gradient-to-position)=
; --tw-gradient-stops: var(--tw-gradient-via-stops); }
  .dark\:to-gray-900\/90:is(.dark *) { --tw-gradient-to: var(--color-gray-9=
00,#171717); --tw-gradient-stops: var(--tw-gradient-via-stops,var(--tw-grad=
ient-position),var(--tw-gradient-from)var(--tw-gradient-from-position),var(=
--tw-gradient-to)var(--tw-gradient-to-position)); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:to-gray-900\/90:is(.dark *) { --tw-gradient-to: color-mix(in oklab=
,var(--color-gray-900,#171717)90%,transparent); }
}
  .dark\:to-transparent:is(.dark *) { --tw-gradient-to: transparent; --tw-g=
radient-stops: var(--tw-gradient-via-stops,var(--tw-gradient-position),var(=
--tw-gradient-from)var(--tw-gradient-from-position),var(--tw-gradient-to)va=
r(--tw-gradient-to-position)); }
  .dark\:pb-4:is(.dark *) { padding-bottom: calc(var(--spacing)*4); }
  .dark\:text-amber-400:is(.dark *) { color: var(--color-amber-400); }
  .dark\:text-black:is(.dark *) { color: var(--color-black); }
  .dark\:text-black\/30:is(.dark *) { color: rgba(0, 0, 0, 0.3); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:text-black\/30:is(.dark *) { color: color-mix(in oklab,var(--color=
-black)30%,transparent); }
}
  .dark\:text-blue-100:is(.dark *) { color: var(--color-blue-100); }
  .dark\:text-blue-200:is(.dark *) { color: var(--color-blue-200); }
  .dark\:text-blue-300:is(.dark *) { color: var(--color-blue-300); }
  .dark\:text-blue-400:is(.dark *) { color: var(--color-blue-400); }
  .dark\:text-gray-100:is(.dark *) { color: var(--color-gray-100,#ececec); =
}
  .dark\:text-gray-200:is(.dark *) { color: var(--color-gray-200,#e3e3e3); =
}
  .dark\:text-gray-300:is(.dark *) { color: var(--color-gray-300,#cdcdcd); =
}
  .dark\:text-gray-400:is(.dark *) { color: var(--color-gray-400,#b4b4b4); =
}
  .dark\:text-gray-500:is(.dark *) { color: var(--color-gray-500,#9b9b9b); =
}
  .dark\:text-gray-600:is(.dark *) { color: var(--color-gray-600,#676767); =
}
  .dark\:text-gray-700:is(.dark *) { color: var(--color-gray-700,#4e4e4e); =
}
  .dark\:text-gray-800:is(.dark *) { color: var(--color-gray-800,#333); }
  .dark\:text-gray-900:is(.dark *) { color: var(--color-gray-900,#171717); =
}
  .dark\:text-green-200:is(.dark *) { color: var(--color-green-200); }
  .dark\:text-green-300:is(.dark *) { color: var(--color-green-300); }
  .dark\:text-green-400:is(.dark *) { color: var(--color-green-400); }
  .dark\:text-orange-200:is(.dark *) { color: var(--color-orange-200); }
  .dark\:text-purple-200:is(.dark *) { color: var(--color-purple-200); }
  .dark\:text-red-200:is(.dark *) { color: var(--color-red-200); }
  .dark\:text-red-300:is(.dark *) { color: var(--color-red-300); }
  .dark\:text-red-400:is(.dark *) { color: var(--color-red-400); }
  .dark\:text-teal-200:is(.dark *) { color: var(--color-teal-200); }
  .dark\:text-white:is(.dark *) { color: var(--color-white); }
  .dark\:text-white\/10:is(.dark *) { color: rgba(255, 255, 255, 0.1); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:text-white\/10:is(.dark *) { color: color-mix(in oklab,var(--color=
-white)10%,transparent); }
}
  .dark\:text-white\/30:is(.dark *) { color: rgba(255, 255, 255, 0.3); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:text-white\/30:is(.dark *) { color: color-mix(in oklab,var(--color=
-white)30%,transparent); }
}
  .dark\:text-white\/40:is(.dark *) { color: rgba(255, 255, 255, 0.4); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:text-white\/40:is(.dark *) { color: color-mix(in oklab,var(--color=
-white)40%,transparent); }
}
  .dark\:text-white\/50:is(.dark *) { color: rgba(255, 255, 255, 0.5); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:text-white\/50:is(.dark *) { color: color-mix(in oklab,var(--color=
-white)50%,transparent); }
}
  .dark\:text-white\/60:is(.dark *) { color: rgba(255, 255, 255, 0.6); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:text-white\/60:is(.dark *) { color: color-mix(in oklab,var(--color=
-white)60%,transparent); }
}
  .dark\:text-white\/70:is(.dark *) { color: rgba(255, 255, 255, 0.7); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:text-white\/70:is(.dark *) { color: color-mix(in oklab,var(--color=
-white)70%,transparent); }
}
  .dark\:text-white\/80:is(.dark *) { color: rgba(255, 255, 255, 0.8); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:text-white\/80:is(.dark *) { color: color-mix(in oklab,var(--color=
-white)80%,transparent); }
}
  .dark\:text-white\/90:is(.dark *) { color: rgba(255, 255, 255, 0.9); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:text-white\/90:is(.dark *) { color: color-mix(in oklab,var(--color=
-white)90%,transparent); }
}
  .dark\:text-yellow-200:is(.dark *) { color: var(--color-yellow-200); }
  .dark\:text-yellow-400:is(.dark *) { color: var(--color-yellow-400); }
  .dark\:placeholder-gray-500:is(.dark *)::placeholder { color: var(--color=
-gray-500,#9b9b9b); }
  .dark\:opacity-50:is(.dark *) { opacity: 0.5; }
  .dark\:shadow-lg:is(.dark *) { --tw-shadow: 0 10px 15px -3px var(--tw-sha=
dow-color,#0000001a),0 4px 6px -4px var(--tw-shadow-color,#0000001a); box-s=
hadow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-off=
set-shadow),var(--tw-ring-shadow),var(--tw-shadow); }
  .dark\:ring-offset-gray-800:is(.dark *) { --tw-ring-offset-color: var(--c=
olor-gray-800,#333); }
  .dark\:outline-gray-600:is(.dark *) { outline-color: var(--color-gray-600=
,#676767); }
  .dark\:outline-gray-800:is(.dark *) { outline-color: var(--color-gray-800=
,#333); }
  .dark\:outline-gray-850:is(.dark *) { outline-color: var(--color-gray-850=
,#262626); }
  .dark\:outline-red-800:is(.dark *) { outline-color: var(--color-red-800);=
 }
  .dark\:invert:is(.dark *) { --tw-invert: invert(100%); filter: var(--tw-b=
lur,)var(--tw-brightness,)var(--tw-contrast,)var(--tw-grayscale,)var(--tw-h=
ue-rotate,)var(--tw-invert,)var(--tw-saturate,)var(--tw-sepia,)var(--tw-dro=
p-shadow,); }
  .dark\:invert-\[80\%\]:is(.dark *) { --tw-invert: invert(80%); filter: va=
r(--tw-blur,)var(--tw-brightness,)var(--tw-contrast,)var(--tw-grayscale,)va=
r(--tw-hue-rotate,)var(--tw-invert,)var(--tw-saturate,)var(--tw-sepia,)var(=
--tw-drop-shadow,); }
  .dark\:group-hover\:bg-gray-200:is(.dark *):is(:where(.group):hover *) { =
background-color: var(--color-gray-200,#e3e3e3); }
  .dark\:group-hover\:text-white:is(.dark *):is(:where(.group):hover *), .d=
ark\:group-hover\/item\:text-white:is(.dark *):is(:where(.group\/item):hove=
r *) { color: var(--color-white); }
  .dark\:placeholder\:text-gray-700:is(.dark *)::placeholder { color: var(-=
-color-gray-700,#4e4e4e); }
  .dark\:placeholder\:text-white\/40:is(.dark *)::placeholder { color: rgba=
(255, 255, 255, 0.4); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:placeholder\:text-white\/40:is(.dark *)::placeholder { color: colo=
r-mix(in oklab,var(--color-white)40%,transparent); }
}
  .dark\:hover\:border-gray-600:is(.dark *):hover { border-color: var(--col=
or-gray-600,#676767); }
  .dark\:hover\:border-white\/40:is(.dark *):hover { border-color: rgba(255=
, 255, 255, 0.4); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:hover\:border-white\/40:is(.dark *):hover { border-color: color-mi=
x(in oklab,var(--color-white)40%,transparent); }
}
  .dark\:hover\:bg-\[\#3C3E40\]:is(.dark *):hover { background-color: rgb(6=
0, 62, 64); }
  .dark\:hover\:bg-\[\#5A5C68\]:is(.dark *):hover { background-color: rgb(9=
0, 92, 104); }
  .dark\:hover\:bg-\[\#36383A\]:is(.dark *):hover { background-color: rgb(5=
4, 56, 58); }
  .dark\:hover\:bg-\[\#37383A\]:is(.dark *):hover { background-color: rgb(5=
5, 56, 58); }
  .dark\:hover\:bg-\[\#525461\]:is(.dark *):hover { background-color: rgb(8=
2, 84, 97); }
  .dark\:hover\:bg-\[\#DAEEFF2A\]:is(.dark *):hover { background-color: rgb=
a(218, 238, 255, 0.165); }
  .dark\:hover\:bg-black\/30:is(.dark *):hover { background-color: rgba(0, =
0, 0, 0.3); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:hover\:bg-black\/30:is(.dark *):hover { background-color: color-mi=
x(in oklab,var(--color-black)30%,transparent); }
}
  .dark\:hover\:bg-blue-700:is(.dark *):hover { background-color: var(--col=
or-blue-700); }
  .dark\:hover\:bg-blue-800:is(.dark *):hover { background-color: var(--col=
or-blue-800); }
  .dark\:hover\:bg-blue-900:is(.dark *):hover { background-color: var(--col=
or-blue-900); }
  .dark\:hover\:bg-gray-100:is(.dark *):hover, .dark\:hover\:bg-gray-100\/1=
0:is(.dark *):hover { background-color: var(--color-gray-100,#ececec); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:hover\:bg-gray-100\/10:is(.dark *):hover { background-color: color=
-mix(in oklab,var(--color-gray-100,#ececec)10%,transparent); }
}
  .dark\:hover\:bg-gray-100\/20:is(.dark *):hover { background-color: var(-=
-color-gray-100,#ececec); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:hover\:bg-gray-100\/20:is(.dark *):hover { background-color: color=
-mix(in oklab,var(--color-gray-100,#ececec)20%,transparent); }
}
  .dark\:hover\:bg-gray-300:is(.dark *):hover { background-color: var(--col=
or-gray-300,#cdcdcd); }
  .dark\:hover\:bg-gray-500:is(.dark *):hover { background-color: var(--col=
or-gray-500,#9b9b9b); }
  .dark\:hover\:bg-gray-600:is(.dark *):hover { background-color: var(--col=
or-gray-600,#676767); }
  .dark\:hover\:bg-gray-700:is(.dark *):hover, .dark\:hover\:bg-gray-700\/7=
0:is(.dark *):hover { background-color: var(--color-gray-700,#4e4e4e); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:hover\:bg-gray-700\/70:is(.dark *):hover { background-color: color=
-mix(in oklab,var(--color-gray-700,#4e4e4e)70%,transparent); }
}
  .dark\:hover\:bg-gray-800:is(.dark *):hover { background-color: var(--col=
or-gray-800,#333); }
  .dark\:hover\:bg-gray-850:is(.dark *):hover { background-color: var(--col=
or-gray-850,#262626); }
  .dark\:hover\:bg-gray-900:is(.dark *):hover { background-color: var(--col=
or-gray-900,#171717); }
  .dark\:hover\:bg-gray-950:is(.dark *):hover { background-color: var(--col=
or-gray-950,#0d0d0d); }
  .dark\:hover\:bg-red-900:is(.dark *):hover { background-color: var(--colo=
r-red-900); }
  .dark\:hover\:bg-red-900\/30:is(.dark *):hover { background-color: rgba(1=
30, 24, 26, 0.3); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:hover\:bg-red-900\/30:is(.dark *):hover { background-color: color-=
mix(in oklab,var(--color-red-900)30%,transparent); }
}
  .dark\:hover\:bg-white:is(.dark *):hover { background-color: var(--color-=
white); }
  .dark\:hover\:bg-white\/5:is(.dark *):hover { background-color: rgba(255,=
 255, 255, 0.05); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:hover\:bg-white\/5:is(.dark *):hover { background-color: color-mix=
(in oklab,var(--color-white)5%,transparent); }
}
  .dark\:hover\:bg-white\/10:is(.dark *):hover { background-color: rgba(255=
, 255, 255, 0.1); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:hover\:bg-white\/10:is(.dark *):hover { background-color: color-mi=
x(in oklab,var(--color-white)10%,transparent); }
}
  .hover\:dark\:bg-white\/15:hover:is(.dark *) { background-color: rgba(255=
, 255, 255, 0.15); }
  @supports (color:color-mix(in lab,red,red)) {
  .hover\:dark\:bg-white\/15:hover:is(.dark *) { background-color: color-mi=
x(in oklab,var(--color-white)15%,transparent); }
}
  .dark\:hover\:text-blue-100:is(.dark *):hover { color: var(--color-blue-1=
00); }
  .dark\:hover\:text-blue-300:is(.dark *):hover { color: var(--color-blue-3=
00); }
  .dark\:hover\:text-blue-400:is(.dark *):hover { color: var(--color-blue-4=
00); }
  .dark\:hover\:text-gray-100:is(.dark *):hover { color: var(--color-gray-1=
00,#ececec); }
  .dark\:hover\:text-gray-300:is(.dark *):hover { color: var(--color-gray-3=
00,#cdcdcd); }
  .dark\:hover\:text-gray-400:is(.dark *):hover { color: var(--color-gray-4=
00,#b4b4b4); }
  .dark\:hover\:text-red-400:is(.dark *):hover { color: var(--color-red-400=
); }
  .dark\:hover\:text-white:is(.dark *):hover { color: var(--color-white); }
  .dark\:focus\:border-gray-700:is(.dark *):focus { border-color: var(--col=
or-gray-700,#4e4e4e); }
  .dark\:focus\:bg-gray-700:is(.dark *):focus { background-color: var(--col=
or-gray-700,#4e4e4e); }
  .dark\:focus\:ring-blue-600:is(.dark *):focus { --tw-ring-color: var(--co=
lor-blue-600); }
  .dark\:focus\:ring-blue-800:is(.dark *):focus { --tw-ring-color: var(--co=
lor-blue-800); }
  .dark\:active\:text-white:is(.dark *):active { color: var(--color-white);=
 }
  .dark\:disabled\:bg-gray-600:is(.dark *):disabled { background-color: var=
(--color-gray-600,#676767); }
  .disabled\:dark\:bg-gray-500:disabled:is(.dark *) { background-color: var=
(--color-gray-500,#9b9b9b); }
  .disabled\:dark\:bg-gray-900:disabled:is(.dark *) { background-color: var=
(--color-gray-900,#171717); }
  .dark\:disabled\:text-gray-500:is(.dark *):disabled { color: var(--color-=
gray-500,#9b9b9b); }
  .dark\:disabled\:text-gray-700:is(.dark *):disabled { color: var(--color-=
gray-700,#4e4e4e); }
  .dark\:disabled\:text-white\/40:is(.dark *):disabled { color: rgba(255, 2=
55, 255, 0.4); }
  @supports (color:color-mix(in lab,red,red)) {
  .dark\:disabled\:text-white\/40:is(.dark *):disabled { color: color-mix(i=
n oklab,var(--color-white)40%,transparent); }
}
  .disabled\:dark\:text-white\/30:disabled:is(.dark *) { color: rgba(255, 2=
55, 255, 0.3); }
  @supports (color:color-mix(in lab,red,red)) {
  .disabled\:dark\:text-white\/30:disabled:is(.dark *) { color: color-mix(i=
n oklab,var(--color-white)30%,transparent); }
}
  .dark\:hover\:disabled\:bg-transparent:is(.dark *):hover:disabled { backg=
round-color: rgba(0, 0, 0, 0); }
  .dark\:data-hovered\:bg-gray-800:is(.dark *)[data-hovered] { background-c=
olor: var(--color-gray-800,#333); }
  .dark\:data-selected\:bg-gray-850:is(.dark *)[data-selected] { background=
-color: var(--color-gray-850,#262626); }
  .dark\:data-selected\:text-gray-50:is(.dark *)[data-selected] { color: va=
r(--color-gray-50,#f9f9f9); }
  .dark\:data-selected\:hover\:bg-gray-800:is(.dark *)[data-selected]:hover=
 { background-color: var(--color-gray-800,#333); }
  .data-\[autoThink\=3Dfalse\]\:dark\:hover\:bg-white\/5[data-autothink=3D"=
false"]:is(.dark *):hover { background-color: rgba(255, 255, 255, 0.05); }
  @supports (color:color-mix(in lab,red,red)) {
  .data-\[autoThink\=3Dfalse\]\:dark\:hover\:bg-white\/5[data-autothink=3D"=
false"]:is(.dark *):hover { background-color: color-mix(in oklab,var(--colo=
r-white)5%,transparent); }
}
  .data-\[autoThink\=3Dtrue\]\:dark\:border-white\/10[data-autothink=3D"tru=
e"]:is(.dark *) { border-color: rgba(255, 255, 255, 0.1); }
  @supports (color:color-mix(in lab,red,red)) {
  .data-\[autoThink\=3Dtrue\]\:dark\:border-white\/10[data-autothink=3D"tru=
e"]:is(.dark *) { border-color: color-mix(in oklab,var(--color-white)10%,tr=
ansparent); }
}
  .data-\[autoThink\=3Dtrue\]\:dark\:bg-white\/10[data-autothink=3D"true"]:=
is(.dark *) { background-color: rgba(255, 255, 255, 0.1); }
  @supports (color:color-mix(in lab,red,red)) {
  .data-\[autoThink\=3Dtrue\]\:dark\:bg-white\/10[data-autothink=3D"true"]:=
is(.dark *) { background-color: color-mix(in oklab,var(--color-white)10%,tr=
ansparent); }
}
  .data-\[autoThink\=3Dtrue\]\:dark\:text-white[data-autothink=3D"true"]:is=
(.dark *) { color: var(--color-white); }
  .dark\:data-\[selected\]\:text-black:is(.dark *)[data-selected] { color: =
var(--color-black); }
  .dark\:data-\[selected\=3Dtrue\]\:bg-\[\#3C3E40\]:is(.dark *)[data-select=
ed=3D"true"] { background-color: rgb(60, 62, 64); }
  .data-\[selected\=3Dtrue\]\:dark\:bg-blue-800[data-selected=3D"true"]:is(=
.dark *) { background-color: var(--color-blue-800); }
  .data-\[selected\=3Dtrue\]\:dark\:bg-white\/10[data-selected=3D"true"]:is=
(.dark *) { background-color: rgba(255, 255, 255, 0.1); }
  @supports (color:color-mix(in lab,red,red)) {
  .data-\[selected\=3Dtrue\]\:dark\:bg-white\/10[data-selected=3D"true"]:is=
(.dark *) { background-color: color-mix(in oklab,var(--color-white)10%,tran=
sparent); }
}
  .dark\:data-\[state\=3Dactive\]\:bg-white:is(.dark *)[data-state=3D"activ=
e"] { background-color: var(--color-white); }
  .data-\[state\=3Dactive\]\:dark\:bg-white\/5[data-state=3D"active"]:is(.d=
ark *) { background-color: rgba(255, 255, 255, 0.05); }
  @supports (color:color-mix(in lab,red,red)) {
  .data-\[state\=3Dactive\]\:dark\:bg-white\/5[data-state=3D"active"]:is(.d=
ark *) { background-color: color-mix(in oklab,var(--color-white)5%,transpar=
ent); }
}
  .dark\:data-\[state\=3Dactive\]\:text-black:is(.dark *)[data-state=3D"act=
ive"] { color: var(--color-black); }
  .data-\[state\=3Dactive\]\:dark\:text-white\/80[data-state=3D"active"]:is=
(.dark *) { color: rgba(255, 255, 255, 0.8); }
  @supports (color:color-mix(in lab,red,red)) {
  .data-\[state\=3Dactive\]\:dark\:text-white\/80[data-state=3D"active"]:is=
(.dark *) { color: color-mix(in oklab,var(--color-white)80%,transparent); }
}
  .dark\:data-\[state\=3Dhighlighted\]\:bg-gray-800:is(.dark *)[data-state=
=3D"highlighted"] { background-color: var(--color-gray-800,#333); }
  .dark\:data-\[state\=3Don\]\:bg-\[\#3C3E40\]:is(.dark *)[data-state=3D"on=
"] { background-color: rgb(60, 62, 64); }
  .dark\:data-\[state\=3Don\]\:text-white:is(.dark *)[data-state=3D"on"] { =
color: var(--color-white); }
  .data-\[status\=3Dcompleted\]\:dark\:text-white\/40[data-status=3D"comple=
ted"]:is(.dark *) { color: rgba(255, 255, 255, 0.4); }
  @supports (color:color-mix(in lab,red,red)) {
  .data-\[status\=3Dcompleted\]\:dark\:text-white\/40[data-status=3D"comple=
ted"]:is(.dark *) { color: color-mix(in oklab,var(--color-white)40%,transpa=
rent); }
}
}

@property --tw-translate-x { syntax: "*"; inherits: false; initial-value: 0=
; }

@property --tw-translate-y { syntax: "*"; inherits: false; initial-value: 0=
; }

@property --tw-translate-z { syntax: "*"; inherits: false; initial-value: 0=
; }

@property --tw-rotate-x { syntax: "*"; inherits: false; }

@property --tw-rotate-y { syntax: "*"; inherits: false; }

@property --tw-rotate-z { syntax: "*"; inherits: false; }

@property --tw-skew-x { syntax: "*"; inherits: false; }

@property --tw-skew-y { syntax: "*"; inherits: false; }

@property --tw-space-y-reverse { syntax: "*"; inherits: false; initial-valu=
e: 0; }

@property --tw-space-x-reverse { syntax: "*"; inherits: false; initial-valu=
e: 0; }

@property --tw-leading { syntax: "*"; inherits: false; }

@property --tw-outline-style { syntax: "*"; inherits: false; initial-value:=
 solid; }

@property --tw-blur { syntax: "*"; inherits: false; }

@property --tw-brightness { syntax: "*"; inherits: false; }

@property --tw-contrast { syntax: "*"; inherits: false; }

@property --tw-grayscale { syntax: "*"; inherits: false; }

@property --tw-hue-rotate { syntax: "*"; inherits: false; }

@property --tw-invert { syntax: "*"; inherits: false; }

@property --tw-opacity { syntax: "*"; inherits: false; }

@property --tw-saturate { syntax: "*"; inherits: false; }

@property --tw-sepia { syntax: "*"; inherits: false; }

@property --tw-drop-shadow { syntax: "*"; inherits: false; }

@property --tw-drop-shadow-color { syntax: "*"; inherits: false; }

@property --tw-drop-shadow-alpha { syntax: "<percentage>"; inherits: false;=
 initial-value: 100%; }

@property --tw-drop-shadow-size { syntax: "*"; inherits: false; }

@property --tw-backdrop-blur { syntax: "*"; inherits: false; }

@property --tw-backdrop-brightness { syntax: "*"; inherits: false; }

@property --tw-backdrop-contrast { syntax: "*"; inherits: false; }

@property --tw-backdrop-grayscale { syntax: "*"; inherits: false; }

@property --tw-backdrop-hue-rotate { syntax: "*"; inherits: false; }

@property --tw-backdrop-invert { syntax: "*"; inherits: false; }

@property --tw-backdrop-opacity { syntax: "*"; inherits: false; }

@property --tw-backdrop-saturate { syntax: "*"; inherits: false; }

@property --tw-backdrop-sepia { syntax: "*"; inherits: false; }

@property --tw-duration { syntax: "*"; inherits: false; }

@property --tw-ease { syntax: "*"; inherits: false; }

@property --tw-contain-size { syntax: "*"; inherits: false; }

@property --tw-contain-layout { syntax: "*"; inherits: false; }

@property --tw-contain-paint { syntax: "*"; inherits: false; }

@property --tw-contain-style { syntax: "*"; inherits: false; }

@property --tw-scale-x { syntax: "*"; inherits: false; initial-value: 1; }

@property --tw-scale-y { syntax: "*"; inherits: false; initial-value: 1; }

@property --tw-scale-z { syntax: "*"; inherits: false; initial-value: 1; }

@keyframes spin {=20
  100% { transform: rotate(360deg); }
}

@keyframes ping {=20
  75%, 100% { opacity: 0; transform: scale(2); }
}

@keyframes pulse {=20
  50% { opacity: 0.5; }
}

@layer properties {
  @supports ((-webkit-hyphens:none) and (not (margin-trim:inline))) or ((-m=
oz-orient:inline) and (not (color:rgb(from red r g b)))) {
  *, ::before, ::after, ::backdrop { --tw-font-weight: initial; --tw-tracki=
ng: initial; --tw-border-style: solid; --tw-shadow: 0 0 #0000; --tw-shadow-=
color: initial; --tw-shadow-alpha: 100%; --tw-inset-shadow: 0 0 #0000; --tw=
-inset-shadow-color: initial; --tw-inset-shadow-alpha: 100%; --tw-ring-colo=
r: initial; --tw-ring-shadow: 0 0 #0000; --tw-inset-ring-color: initial; --=
tw-inset-ring-shadow: 0 0 #0000; --tw-ring-inset: initial; --tw-ring-offset=
-width: 0px; --tw-ring-offset-color: #fff; --tw-ring-offset-shadow: 0 0 #00=
00; --tw-gradient-position: initial; --tw-gradient-from: #0000; --tw-gradie=
nt-via: #0000; --tw-gradient-to: #0000; --tw-gradient-stops: initial; --tw-=
gradient-via-stops: initial; --tw-gradient-from-position: 0%; --tw-gradient=
-via-position: 50%; --tw-gradient-to-position: 100%; }
}
}

html, body { word-break: break-word; overscroll-behavior: none; overflow: h=
idden; }

code { width: auto; overflow-x: auto; }

.font-secondary { font-family: system-ui, sans-serif; }

math { margin-top: 1rem; }

.hljs pre { white-space: pre; }

input::placeholder, textarea::placeholder { }

.input-prose { --tw-prose-body: rgb(54, 65, 83); --tw-prose-headings: rgb(1=
6, 24, 40); --tw-prose-lead: rgb(74, 85, 101); --tw-prose-links: rgb(16, 24=
, 40); --tw-prose-bold: rgb(16, 24, 40); --tw-prose-counters: rgb(106, 114,=
 130); --tw-prose-bullets: rgb(209, 213, 220); --tw-prose-hr: rgb(229, 231,=
 235); --tw-prose-quotes: rgb(16, 24, 40); --tw-prose-quote-borders: rgb(22=
9, 231, 235); --tw-prose-captions: rgb(106, 114, 130); --tw-prose-kbd: rgb(=
16, 24, 40); --tw-prose-kbd-shadows: NaN NaN NaN; --tw-prose-code: rgb(16, =
24, 40); --tw-prose-pre-code: rgb(229, 231, 235); --tw-prose-pre-bg: rgb(30=
, 41, 57); --tw-prose-th-borders: rgb(209, 213, 220); --tw-prose-td-borders=
: rgb(229, 231, 235); --tw-prose-invert-body: rgb(209, 213, 220); --tw-pros=
e-invert-headings: #fff; --tw-prose-invert-lead: rgb(153, 161, 175); --tw-p=
rose-invert-links: #fff; --tw-prose-invert-bold: #fff; --tw-prose-invert-co=
unters: rgb(153, 161, 175); --tw-prose-invert-bullets: rgb(74, 85, 101); --=
tw-prose-invert-hr: rgb(54, 65, 83); --tw-prose-invert-quotes: rgb(243, 244=
, 246); --tw-prose-invert-quote-borders: rgb(54, 65, 83); --tw-prose-invert=
-captions: rgb(153, 161, 175); --tw-prose-invert-kbd: #fff; --tw-prose-inve=
rt-kbd-shadows: 255 255 255; --tw-prose-invert-code: #fff; --tw-prose-inver=
t-pre-code: rgb(209, 213, 220); --tw-prose-invert-pre-bg: #00000080; --tw-p=
rose-invert-th-borders: rgb(74, 85, 101); --tw-prose-invert-td-borders: rgb=
(54, 65, 83); white-space: pre-line; font-size: 1rem; line-height: 1.75; }

.input-prose :where(p):not(:where([class~=3D"not-prose"], [class~=3D"not-pr=
ose"] *)) { margin-top: 1.25em; margin-bottom: 1.25em; }

.input-prose :where([class~=3D"lead"]):not(:where([class~=3D"not-prose"], [=
class~=3D"not-prose"] *)) { color: var(--tw-prose-lead); margin-top: 1.2em;=
 margin-bottom: 1.2em; font-size: 1.25em; line-height: 1.6; }

.input-prose :where(a):not(:where([class~=3D"not-prose"], [class~=3D"not-pr=
ose"] *)) { color: var(--tw-prose-links); font-weight: 500; text-decoration=
: underline; }

.input-prose :where(strong):not(:where([class~=3D"not-prose"], [class~=3D"n=
ot-prose"] *)) { color: var(--tw-prose-bold); font-weight: 600; }

.input-prose :where(a strong):not(:where([class~=3D"not-prose"], [class~=3D=
"not-prose"] *)), .input-prose :where(blockquote strong):not(:where([class~=
=3D"not-prose"], [class~=3D"not-prose"] *)), .input-prose :where(thead th s=
trong):not(:where([class~=3D"not-prose"], [class~=3D"not-prose"] *)) { colo=
r: inherit; }

.input-prose :where(ol):not(:where([class~=3D"not-prose"], [class~=3D"not-p=
rose"] *)) { margin-top: 1.25em; margin-bottom: 1.25em; padding-inline-star=
t: 1.625em; list-style-type: decimal; }

.input-prose :where(ol[type=3D"A"]):not(:where([class~=3D"not-prose"], [cla=
ss~=3D"not-prose"] *)) { list-style-type: upper-alpha; }

.input-prose :where(ol[type=3D"a"]):not(:where([class~=3D"not-prose"], [cla=
ss~=3D"not-prose"] *)) { list-style-type: lower-alpha; }

.input-prose :where():not(:where([class~=3D"not-prose"], [class~=3D"not-pro=
se"] *)) { list-style-type: upper-alpha; }

.input-prose :where():not(:where([class~=3D"not-prose"], [class~=3D"not-pro=
se"] *)) { list-style-type: lower-alpha; }

.input-prose :where(ol[type=3D"I"]):not(:where([class~=3D"not-prose"], [cla=
ss~=3D"not-prose"] *)) { list-style-type: upper-roman; }

.input-prose :where(ol[type=3D"i"]):not(:where([class~=3D"not-prose"], [cla=
ss~=3D"not-prose"] *)) { list-style-type: lower-roman; }

.input-prose :where():not(:where([class~=3D"not-prose"], [class~=3D"not-pro=
se"] *)) { list-style-type: upper-roman; }

.input-prose :where():not(:where([class~=3D"not-prose"], [class~=3D"not-pro=
se"] *)) { list-style-type: lower-roman; }

.input-prose :where(ol[type=3D"1"]):not(:where([class~=3D"not-prose"], [cla=
ss~=3D"not-prose"] *)) { list-style-type: decimal; }

.input-prose :where(ul):not(:where([class~=3D"not-prose"], [class~=3D"not-p=
rose"] *)) { margin-top: 1.25em; margin-bottom: 1.25em; padding-inline-star=
t: 1.625em; list-style-type: disc; }

.input-prose :where(ol > li):not(:where([class~=3D"not-prose"], [class~=3D"=
not-prose"] *))::marker { color: var(--tw-prose-counters); font-weight: 400=
; }

.input-prose :where(ul > li):not(:where([class~=3D"not-prose"], [class~=3D"=
not-prose"] *))::marker { color: var(--tw-prose-bullets); }

.input-prose :where(dt):not(:where([class~=3D"not-prose"], [class~=3D"not-p=
rose"] *)) { color: var(--tw-prose-headings); margin-top: 1.25em; font-weig=
ht: 600; }

.input-prose :where(hr):not(:where([class~=3D"not-prose"], [class~=3D"not-p=
rose"] *)) { border-color: var(--tw-prose-hr); border-top-width: 1px; margi=
n-top: 3em; margin-bottom: 3em; }

.input-prose :where(blockquote):not(:where([class~=3D"not-prose"], [class~=
=3D"not-prose"] *)) { color: var(--tw-prose-quotes); border-inline-start-wi=
dth: 0.25rem; border-inline-start-color: var(--tw-prose-quote-borders); quo=
tes: "=E2=80=9C" "=E2=80=9D" "=E2=80=98" "=E2=80=99"; margin-top: 1.6em; ma=
rgin-bottom: 1.6em; padding-inline-start: 1em; font-style: italic; font-wei=
ght: 500; }

.input-prose :where(blockquote p:first-of-type):not(:where([class~=3D"not-p=
rose"], [class~=3D"not-prose"] *))::before { content: open-quote; }

.input-prose :where(blockquote p:last-of-type):not(:where([class~=3D"not-pr=
ose"], [class~=3D"not-prose"] *))::after { content: close-quote; }

.input-prose :where(h1):not(:where([class~=3D"not-prose"], [class~=3D"not-p=
rose"] *)) { color: var(--tw-prose-headings); margin-top: 0px; margin-botto=
m: 0.888889em; font-size: 2.25em; font-weight: 800; line-height: 1.11111; }

.input-prose :where(h1 strong):not(:where([class~=3D"not-prose"], [class~=
=3D"not-prose"] *)) { color: inherit; font-weight: 900; }

.input-prose :where(h2):not(:where([class~=3D"not-prose"], [class~=3D"not-p=
rose"] *)) { color: var(--tw-prose-headings); margin-top: 2em; margin-botto=
m: 1em; font-size: 1.5em; font-weight: 700; line-height: 1.33333; }

.input-prose :where(h2 strong):not(:where([class~=3D"not-prose"], [class~=
=3D"not-prose"] *)) { color: inherit; font-weight: 800; }

.input-prose :where(h3):not(:where([class~=3D"not-prose"], [class~=3D"not-p=
rose"] *)) { color: var(--tw-prose-headings); margin-top: 1.6em; margin-bot=
tom: 0.6em; font-size: 1.25em; font-weight: 600; line-height: 1.6; }

.input-prose :where(h3 strong):not(:where([class~=3D"not-prose"], [class~=
=3D"not-prose"] *)) { color: inherit; font-weight: 700; }

.input-prose :where(h4):not(:where([class~=3D"not-prose"], [class~=3D"not-p=
rose"] *)) { color: var(--tw-prose-headings); margin-top: 1.5em; margin-bot=
tom: 0.5em; font-weight: 600; line-height: 1.5; }

.input-prose :where(h4 strong):not(:where([class~=3D"not-prose"], [class~=
=3D"not-prose"] *)) { color: inherit; font-weight: 700; }

.input-prose :where(img):not(:where([class~=3D"not-prose"], [class~=3D"not-=
prose"] *)) { margin-top: 2em; margin-bottom: 2em; }

.input-prose :where(picture):not(:where([class~=3D"not-prose"], [class~=3D"=
not-prose"] *)) { margin-top: 2em; margin-bottom: 2em; display: block; }

.input-prose :where(video):not(:where([class~=3D"not-prose"], [class~=3D"no=
t-prose"] *)) { margin-top: 2em; margin-bottom: 2em; }

.input-prose :where(kbd):not(:where([class~=3D"not-prose"], [class~=3D"not-=
prose"] *)) { color: var(--tw-prose-kbd); box-shadow: 0 0 0 1px rgb(var(--t=
w-prose-kbd-shadows)/10%),0 3px rgb(var(--tw-prose-kbd-shadows)/10%); paddi=
ng-top: 0.1875em; padding-inline: 0.375em; padding-bottom: 0.1875em; border=
-radius: 0.3125rem; font-family: inherit; font-size: 0.875em; font-weight: =
500; }

.input-prose :where(a code):not(:where([class~=3D"not-prose"], [class~=3D"n=
ot-prose"] *)), .input-prose :where(h1 code):not(:where([class~=3D"not-pros=
e"], [class~=3D"not-prose"] *)) { color: inherit; }

.input-prose :where(h2 code):not(:where([class~=3D"not-prose"], [class~=3D"=
not-prose"] *)) { color: inherit; font-size: 0.875em; }

.input-prose :where(h3 code):not(:where([class~=3D"not-prose"], [class~=3D"=
not-prose"] *)) { color: inherit; font-size: 0.9em; }

.input-prose :where(h4 code):not(:where([class~=3D"not-prose"], [class~=3D"=
not-prose"] *)), .input-prose :where(blockquote code):not(:where([class~=3D=
"not-prose"], [class~=3D"not-prose"] *)), .input-prose :where(thead th code=
):not(:where([class~=3D"not-prose"], [class~=3D"not-prose"] *)) { color: in=
herit; }

.input-prose :where(pre code):not(:where([class~=3D"not-prose"], [class~=3D=
"not-prose"] *))::before, .input-prose :where(pre code):not(:where([class~=
=3D"not-prose"], [class~=3D"not-prose"] *))::after { content: none; }

.input-prose :where(table):not(:where([class~=3D"not-prose"], [class~=3D"no=
t-prose"] *)) { table-layout: auto; text-align: start; width: 100%; margin-=
top: 2em; margin-bottom: 2em; font-size: 0.875em; line-height: 1.71429; }

.input-prose :where(thead):not(:where([class~=3D"not-prose"], [class~=3D"no=
t-prose"] *)) { border-bottom-width: 1px; border-bottom-color: var(--tw-pro=
se-th-borders); }

.input-prose :where(thead th):not(:where([class~=3D"not-prose"], [class~=3D=
"not-prose"] *)) { color: var(--tw-prose-headings); vertical-align: bottom;=
 padding-inline: 0.571429em; padding-bottom: 0.571429em; font-weight: 600; =
}

.input-prose :where(tbody tr):not(:where([class~=3D"not-prose"], [class~=3D=
"not-prose"] *)) { border-bottom-width: 1px; border-bottom-color: var(--tw-=
prose-td-borders); }

.input-prose :where(tbody tr:last-child):not(:where([class~=3D"not-prose"],=
 [class~=3D"not-prose"] *)) { border-bottom-width: 0px; }

.input-prose :where(tbody td):not(:where([class~=3D"not-prose"], [class~=3D=
"not-prose"] *)) { vertical-align: baseline; }

.input-prose :where(tfoot):not(:where([class~=3D"not-prose"], [class~=3D"no=
t-prose"] *)) { border-top-width: 1px; border-top-color: var(--tw-prose-th-=
borders); }

.input-prose :where(tfoot td):not(:where([class~=3D"not-prose"], [class~=3D=
"not-prose"] *)) { vertical-align: top; }

.input-prose :where(figure > *):not(:where([class~=3D"not-prose"], [class~=
=3D"not-prose"] *)) { margin-top: 0px; margin-bottom: 0px; }

.input-prose :where(figcaption):not(:where([class~=3D"not-prose"], [class~=
=3D"not-prose"] *)) { color: var(--tw-prose-captions); margin-top: 0.857143=
em; font-size: 0.875em; line-height: 1.42857; }

.input-prose :where(picture > img):not(:where([class~=3D"not-prose"], [clas=
s~=3D"not-prose"] *)) { margin-top: 0px; margin-bottom: 0px; }

.input-prose :where(li):not(:where([class~=3D"not-prose"], [class~=3D"not-p=
rose"] *)) { margin-top: 0.5em; margin-bottom: 0.5em; }

.input-prose :where(ol > li):not(:where([class~=3D"not-prose"], [class~=3D"=
not-prose"] *)), .input-prose :where(ul > li):not(:where([class~=3D"not-pro=
se"], [class~=3D"not-prose"] *)) { padding-inline-start: 0.375em; }

.input-prose :where(.prose > ul > li p):not(:where([class~=3D"not-prose"], =
[class~=3D"not-prose"] *)) { margin-top: 0.75em; margin-bottom: 0.75em; }

.input-prose :where(.prose > ul > li > p:first-child):not(:where([class~=3D=
"not-prose"], [class~=3D"not-prose"] *)) { margin-top: 1.25em; }

.input-prose :where(.prose > ul > li > p:last-child):not(:where([class~=3D"=
not-prose"], [class~=3D"not-prose"] *)) { margin-bottom: 1.25em; }

.input-prose :where(.prose > ol > li > p:first-child):not(:where([class~=3D=
"not-prose"], [class~=3D"not-prose"] *)) { margin-top: 1.25em; }

.input-prose :where(.prose > ol > li > p:last-child):not(:where([class~=3D"=
not-prose"], [class~=3D"not-prose"] *)) { margin-bottom: 1.25em; }

.input-prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~=3D"not-p=
rose"], [class~=3D"not-prose"] *)) { margin-top: 0.75em; margin-bottom: 0.7=
5em; }

.input-prose :where(dl):not(:where([class~=3D"not-prose"], [class~=3D"not-p=
rose"] *)) { margin-top: 1.25em; margin-bottom: 1.25em; }

.input-prose :where(dd):not(:where([class~=3D"not-prose"], [class~=3D"not-p=
rose"] *)) { margin-top: 0.5em; padding-inline-start: 1.625em; }

.input-prose :where(hr + *):not(:where([class~=3D"not-prose"], [class~=3D"n=
ot-prose"] *)), .input-prose :where(h2 + *):not(:where([class~=3D"not-prose=
"], [class~=3D"not-prose"] *)), .input-prose :where(h3 + *):not(:where([cla=
ss~=3D"not-prose"], [class~=3D"not-prose"] *)), .input-prose :where(h4 + *)=
:not(:where([class~=3D"not-prose"], [class~=3D"not-prose"] *)) { margin-top=
: 0px; }

.input-prose :where(thead th:first-child):not(:where([class~=3D"not-prose"]=
, [class~=3D"not-prose"] *)) { padding-inline-start: 0px; }

.input-prose :where(thead th:last-child):not(:where([class~=3D"not-prose"],=
 [class~=3D"not-prose"] *)) { padding-inline-end: 0px; }

.input-prose :where(tbody td, tfoot td):not(:where([class~=3D"not-prose"], =
[class~=3D"not-prose"] *)) { padding-top: 0.571429em; padding-inline: 0.571=
429em; padding-bottom: 0.571429em; }

.input-prose :where(tbody td:first-child, tfoot td:first-child):not(:where(=
[class~=3D"not-prose"], [class~=3D"not-prose"] *)) { padding-inline-start: =
0px; }

.input-prose :where(tbody td:last-child, tfoot td:last-child):not(:where([c=
lass~=3D"not-prose"], [class~=3D"not-prose"] *)) { padding-inline-end: 0px;=
 }

.input-prose :where(figure):not(:where([class~=3D"not-prose"], [class~=3D"n=
ot-prose"] *)) { margin-top: 2em; margin-bottom: 2em; }

.input-prose :where(.prose > :first-child):not(:where([class~=3D"not-prose"=
], [class~=3D"not-prose"] *)) { margin-top: 0px; }

.input-prose :where(.prose > :last-child):not(:where([class~=3D"not-prose"]=
, [class~=3D"not-prose"] *)) { margin-bottom: 0px; }

.input-prose:is(.dark *) { --tw-prose-body: var(--tw-prose-invert-body); --=
tw-prose-headings: var(--tw-prose-invert-headings); --tw-prose-lead: var(--=
tw-prose-invert-lead); --tw-prose-links: var(--tw-prose-invert-links); --tw=
-prose-bold: var(--tw-prose-invert-bold); --tw-prose-counters: var(--tw-pro=
se-invert-counters); --tw-prose-bullets: var(--tw-prose-invert-bullets); --=
tw-prose-hr: var(--tw-prose-invert-hr); --tw-prose-quotes: var(--tw-prose-i=
nvert-quotes); --tw-prose-quote-borders: var(--tw-prose-invert-quote-border=
s); --tw-prose-captions: var(--tw-prose-invert-captions); --tw-prose-kbd: v=
ar(--tw-prose-invert-kbd); --tw-prose-kbd-shadows: var(--tw-prose-invert-kb=
d-shadows); --tw-prose-code: var(--tw-prose-invert-code); --tw-prose-pre-co=
de: var(--tw-prose-invert-pre-code); --tw-prose-pre-bg: var(--tw-prose-inve=
rt-pre-bg); --tw-prose-th-borders: var(--tw-prose-invert-th-borders); --tw-=
prose-td-borders: var(--tw-prose-invert-td-borders); }

.input-prose :where(h1, h2, h3, h4, h5, h6, th):not(:where([class~=3D"not-p=
rose"], [class~=3D"not-prose"] *)) { margin-block: calc(var(--spacing,.25re=
m)*1); --tw-font-weight: var(--font-weight-semibold,600); font-weight: var(=
--font-weight-semibold,600); }

.input-prose :where(p):not(:where([class~=3D"not-prose"], [class~=3D"not-pr=
ose"] *)), .input-prose :where(blockquote):not(:where([class~=3D"not-prose"=
], [class~=3D"not-prose"] *)), .input-prose :where(pre):not(:where([class~=
=3D"not-prose"], [class~=3D"not-prose"] *)), .input-prose :where(ol):not(:w=
here([class~=3D"not-prose"], [class~=3D"not-prose"] *)), .input-prose :wher=
e(ul):not(:where([class~=3D"not-prose"], [class~=3D"not-prose"] *)), .input=
-prose :where(li):not(:where([class~=3D"not-prose"], [class~=3D"not-prose"]=
 *)), .input-prose :where(table):not(:where([class~=3D"not-prose"], [class~=
=3D"not-prose"] *)) { margin-block: calc(var(--spacing,.25rem)*0); }

.input-prose :where(img):not(:where([class~=3D"not-prose"], [class~=3D"not-=
prose"] *)) { margin-block: calc(var(--spacing,.25rem)*1); }

.input-prose :where(hr):not(:where([class~=3D"not-prose"], [class~=3D"not-p=
rose"] *)) { margin-block: calc(var(--spacing,.25rem)*4); border-color: var=
(--color-gray-100,#ececec); }

.input-prose :where(hr):not(:where([class~=3D"not-prose"], [class~=3D"not-p=
rose"] *)):is(.dark *) { border-color: var(--color-gray-800,#333); }

.input-prose-sm { --tw-prose-body: rgb(54, 65, 83); --tw-prose-headings: rg=
b(16, 24, 40); --tw-prose-lead: rgb(74, 85, 101); --tw-prose-links: rgb(16,=
 24, 40); --tw-prose-bold: rgb(16, 24, 40); --tw-prose-counters: rgb(106, 1=
14, 130); --tw-prose-bullets: rgb(209, 213, 220); --tw-prose-hr: rgb(229, 2=
31, 235); --tw-prose-quotes: rgb(16, 24, 40); --tw-prose-quote-borders: rgb=
(229, 231, 235); --tw-prose-captions: rgb(106, 114, 130); --tw-prose-kbd: r=
gb(16, 24, 40); --tw-prose-kbd-shadows: NaN NaN NaN; --tw-prose-code: rgb(1=
6, 24, 40); --tw-prose-pre-code: rgb(229, 231, 235); --tw-prose-pre-bg: rgb=
(30, 41, 57); --tw-prose-th-borders: rgb(209, 213, 220); --tw-prose-td-bord=
ers: rgb(229, 231, 235); --tw-prose-invert-body: rgb(209, 213, 220); --tw-p=
rose-invert-headings: #fff; --tw-prose-invert-lead: rgb(153, 161, 175); --t=
w-prose-invert-links: #fff; --tw-prose-invert-bold: #fff; --tw-prose-invert=
-counters: rgb(153, 161, 175); --tw-prose-invert-bullets: rgb(74, 85, 101);=
 --tw-prose-invert-hr: rgb(54, 65, 83); --tw-prose-invert-quotes: rgb(243, =
244, 246); --tw-prose-invert-quote-borders: rgb(54, 65, 83); --tw-prose-inv=
ert-captions: rgb(153, 161, 175); --tw-prose-invert-kbd: #fff; --tw-prose-i=
nvert-kbd-shadows: 255 255 255; --tw-prose-invert-code: #fff; --tw-prose-in=
vert-pre-code: rgb(209, 213, 220); --tw-prose-invert-pre-bg: #00000080; --t=
w-prose-invert-th-borders: rgb(74, 85, 101); --tw-prose-invert-td-borders: =
rgb(54, 65, 83); font-size: var(--text-sm,.875rem); line-height: var(--tw-l=
eading,var(--text-sm--line-height,calc(1.25/.875))); white-space: pre-line;=
 }

.input-prose-sm :where(p):not(:where([class~=3D"not-prose"], [class~=3D"not=
-prose"] *)) { margin-top: 1.25em; margin-bottom: 1.25em; }

.input-prose-sm :where([class~=3D"lead"]):not(:where([class~=3D"not-prose"]=
, [class~=3D"not-prose"] *)) { color: var(--tw-prose-lead); margin-top: 1.2=
em; margin-bottom: 1.2em; font-size: 1.25em; line-height: 1.6; }

.input-prose-sm :where(a):not(:where([class~=3D"not-prose"], [class~=3D"not=
-prose"] *)) { color: var(--tw-prose-links); font-weight: 500; text-decorat=
ion: underline; }

.input-prose-sm :where(strong):not(:where([class~=3D"not-prose"], [class~=
=3D"not-prose"] *)) { color: var(--tw-prose-bold); font-weight: 600; }

.input-prose-sm :where(a strong):not(:where([class~=3D"not-prose"], [class~=
=3D"not-prose"] *)), .input-prose-sm :where(blockquote strong):not(:where([=
class~=3D"not-prose"], [class~=3D"not-prose"] *)), .input-prose-sm :where(t=
head th strong):not(:where([class~=3D"not-prose"], [class~=3D"not-prose"] *=
)) { color: inherit; }

.input-prose-sm :where(ol):not(:where([class~=3D"not-prose"], [class~=3D"no=
t-prose"] *)) { margin-top: 1.25em; margin-bottom: 1.25em; padding-inline-s=
tart: 1.625em; list-style-type: decimal; }

.input-prose-sm :where(ol[type=3D"A"]):not(:where([class~=3D"not-prose"], [=
class~=3D"not-prose"] *)) { list-style-type: upper-alpha; }

.input-prose-sm :where(ol[type=3D"a"]):not(:where([class~=3D"not-prose"], [=
class~=3D"not-prose"] *)) { list-style-type: lower-alpha; }

.input-prose-sm :where():not(:where([class~=3D"not-prose"], [class~=3D"not-=
prose"] *)) { list-style-type: upper-alpha; }

.input-prose-sm :where():not(:where([class~=3D"not-prose"], [class~=3D"not-=
prose"] *)) { list-style-type: lower-alpha; }

.input-prose-sm :where(ol[type=3D"I"]):not(:where([class~=3D"not-prose"], [=
class~=3D"not-prose"] *)) { list-style-type: upper-roman; }

.input-prose-sm :where(ol[type=3D"i"]):not(:where([class~=3D"not-prose"], [=
class~=3D"not-prose"] *)) { list-style-type: lower-roman; }

.input-prose-sm :where():not(:where([class~=3D"not-prose"], [class~=3D"not-=
prose"] *)) { list-style-type: upper-roman; }

.input-prose-sm :where():not(:where([class~=3D"not-prose"], [class~=3D"not-=
prose"] *)) { list-style-type: lower-roman; }

.input-prose-sm :where(ol[type=3D"1"]):not(:where([class~=3D"not-prose"], [=
class~=3D"not-prose"] *)) { list-style-type: decimal; }

.input-prose-sm :where(ul):not(:where([class~=3D"not-prose"], [class~=3D"no=
t-prose"] *)) { margin-top: 1.25em; margin-bottom: 1.25em; padding-inline-s=
tart: 1.625em; list-style-type: disc; }

.input-prose-sm :where(ol > li):not(:where([class~=3D"not-prose"], [class~=
=3D"not-prose"] *))::marker { color: var(--tw-prose-counters); font-weight:=
 400; }

.input-prose-sm :where(ul > li):not(:where([class~=3D"not-prose"], [class~=
=3D"not-prose"] *))::marker { color: var(--tw-prose-bullets); }

.input-prose-sm :where(dt):not(:where([class~=3D"not-prose"], [class~=3D"no=
t-prose"] *)) { color: var(--tw-prose-headings); margin-top: 1.25em; font-w=
eight: 600; }

.input-prose-sm :where(hr):not(:where([class~=3D"not-prose"], [class~=3D"no=
t-prose"] *)) { border-color: var(--tw-prose-hr); border-top-width: 1px; ma=
rgin-top: 3em; margin-bottom: 3em; }

.input-prose-sm :where(blockquote):not(:where([class~=3D"not-prose"], [clas=
s~=3D"not-prose"] *)) { color: var(--tw-prose-quotes); border-inline-start-=
width: 0.25rem; border-inline-start-color: var(--tw-prose-quote-borders); q=
uotes: "=E2=80=9C" "=E2=80=9D" "=E2=80=98" "=E2=80=99"; margin-top: 1.6em; =
margin-bottom: 1.6em; padding-inline-start: 1em; font-style: italic; font-w=
eight: 500; }

.input-prose-sm :where(blockquote p:first-of-type):not(:where([class~=3D"no=
t-prose"], [class~=3D"not-prose"] *))::before { content: open-quote; }

.input-prose-sm :where(blockquote p:last-of-type):not(:where([class~=3D"not=
-prose"], [class~=3D"not-prose"] *))::after { content: close-quote; }

.input-prose-sm :where(h1):not(:where([class~=3D"not-prose"], [class~=3D"no=
t-prose"] *)) { color: var(--tw-prose-headings); margin-top: 0px; margin-bo=
ttom: 0.888889em; font-size: 2.25em; font-weight: 800; line-height: 1.11111=
; }

.input-prose-sm :where(h1 strong):not(:where([class~=3D"not-prose"], [class=
~=3D"not-prose"] *)) { color: inherit; font-weight: 900; }

.input-prose-sm :where(h2):not(:where([class~=3D"not-prose"], [class~=3D"no=
t-prose"] *)) { color: var(--tw-prose-headings); margin-top: 2em; margin-bo=
ttom: 1em; font-size: 1.5em; font-weight: 700; line-height: 1.33333; }

.input-prose-sm :where(h2 strong):not(:where([class~=3D"not-prose"], [class=
~=3D"not-prose"] *)) { color: inherit; font-weight: 800; }

.input-prose-sm :where(h3):not(:where([class~=3D"not-prose"], [class~=3D"no=
t-prose"] *)) { color: var(--tw-prose-headings); margin-top: 1.6em; margin-=
bottom: 0.6em; font-size: 1.25em; font-weight: 600; line-height: 1.6; }

.input-prose-sm :where(h3 strong):not(:where([class~=3D"not-prose"], [class=
~=3D"not-prose"] *)) { color: inherit; font-weight: 700; }

.input-prose-sm :where(h4):not(:where([class~=3D"not-prose"], [class~=3D"no=
t-prose"] *)) { color: var(--tw-prose-headings); margin-top: 1.5em; margin-=
bottom: 0.5em; font-weight: 600; line-height: 1.5; }

.input-prose-sm :where(h4 strong):not(:where([class~=3D"not-prose"], [class=
~=3D"not-prose"] *)) { color: inherit; font-weight: 700; }

.input-prose-sm :where(img):not(:where([class~=3D"not-prose"], [class~=3D"n=
ot-prose"] *)) { margin-top: 2em; margin-bottom: 2em; }

.input-prose-sm :where(picture):not(:where([class~=3D"not-prose"], [class~=
=3D"not-prose"] *)) { margin-top: 2em; margin-bottom: 2em; display: block; =
}

.input-prose-sm :where(video):not(:where([class~=3D"not-prose"], [class~=3D=
"not-prose"] *)) { margin-top: 2em; margin-bottom: 2em; }

.input-prose-sm :where(kbd):not(:where([class~=3D"not-prose"], [class~=3D"n=
ot-prose"] *)) { color: var(--tw-prose-kbd); box-shadow: 0 0 0 1px rgb(var(=
--tw-prose-kbd-shadows)/10%),0 3px rgb(var(--tw-prose-kbd-shadows)/10%); pa=
dding-top: 0.1875em; padding-inline: 0.375em; padding-bottom: 0.1875em; bor=
der-radius: 0.3125rem; font-family: inherit; font-size: 0.875em; font-weigh=
t: 500; }

.input-prose-sm :where(a code):not(:where([class~=3D"not-prose"], [class~=
=3D"not-prose"] *)), .input-prose-sm :where(h1 code):not(:where([class~=3D"=
not-prose"], [class~=3D"not-prose"] *)) { color: inherit; }

.input-prose-sm :where(h2 code):not(:where([class~=3D"not-prose"], [class~=
=3D"not-prose"] *)) { color: inherit; font-size: 0.875em; }

.input-prose-sm :where(h3 code):not(:where([class~=3D"not-prose"], [class~=
=3D"not-prose"] *)) { color: inherit; font-size: 0.9em; }

.input-prose-sm :where(h4 code):not(:where([class~=3D"not-prose"], [class~=
=3D"not-prose"] *)), .input-prose-sm :where(blockquote code):not(:where([cl=
ass~=3D"not-prose"], [class~=3D"not-prose"] *)), .input-prose-sm :where(the=
ad th code):not(:where([class~=3D"not-prose"], [class~=3D"not-prose"] *)) {=
 color: inherit; }

.input-prose-sm :where(pre code):not(:where([class~=3D"not-prose"], [class~=
=3D"not-prose"] *))::before, .input-prose-sm :where(pre code):not(:where([c=
lass~=3D"not-prose"], [class~=3D"not-prose"] *))::after { content: none; }

.input-prose-sm :where(table):not(:where([class~=3D"not-prose"], [class~=3D=
"not-prose"] *)) { table-layout: auto; text-align: start; width: 100%; marg=
in-top: 2em; margin-bottom: 2em; font-size: 0.875em; line-height: 1.71429; =
}

.input-prose-sm :where(thead):not(:where([class~=3D"not-prose"], [class~=3D=
"not-prose"] *)) { border-bottom-width: 1px; border-bottom-color: var(--tw-=
prose-th-borders); }

.input-prose-sm :where(thead th):not(:where([class~=3D"not-prose"], [class~=
=3D"not-prose"] *)) { color: var(--tw-prose-headings); vertical-align: bott=
om; padding-inline: 0.571429em; padding-bottom: 0.571429em; font-weight: 60=
0; }

.input-prose-sm :where(tbody tr):not(:where([class~=3D"not-prose"], [class~=
=3D"not-prose"] *)) { border-bottom-width: 1px; border-bottom-color: var(--=
tw-prose-td-borders); }

.input-prose-sm :where(tbody tr:last-child):not(:where([class~=3D"not-prose=
"], [class~=3D"not-prose"] *)) { border-bottom-width: 0px; }

.input-prose-sm :where(tbody td):not(:where([class~=3D"not-prose"], [class~=
=3D"not-prose"] *)) { vertical-align: baseline; }

.input-prose-sm :where(tfoot):not(:where([class~=3D"not-prose"], [class~=3D=
"not-prose"] *)) { border-top-width: 1px; border-top-color: var(--tw-prose-=
th-borders); }

.input-prose-sm :where(tfoot td):not(:where([class~=3D"not-prose"], [class~=
=3D"not-prose"] *)) { vertical-align: top; }

.input-prose-sm :where(figure > *):not(:where([class~=3D"not-prose"], [clas=
s~=3D"not-prose"] *)) { margin-top: 0px; margin-bottom: 0px; }

.input-prose-sm :where(figcaption):not(:where([class~=3D"not-prose"], [clas=
s~=3D"not-prose"] *)) { color: var(--tw-prose-captions); margin-top: 0.8571=
43em; font-size: 0.875em; line-height: 1.42857; }

.input-prose-sm :where(picture > img):not(:where([class~=3D"not-prose"], [c=
lass~=3D"not-prose"] *)) { margin-top: 0px; margin-bottom: 0px; }

.input-prose-sm :where(li):not(:where([class~=3D"not-prose"], [class~=3D"no=
t-prose"] *)) { margin-top: 0.5em; margin-bottom: 0.5em; }

.input-prose-sm :where(ol > li):not(:where([class~=3D"not-prose"], [class~=
=3D"not-prose"] *)), .input-prose-sm :where(ul > li):not(:where([class~=3D"=
not-prose"], [class~=3D"not-prose"] *)) { padding-inline-start: 0.375em; }

.input-prose-sm :where(.prose > ul > li p):not(:where([class~=3D"not-prose"=
], [class~=3D"not-prose"] *)) { margin-top: 0.75em; margin-bottom: 0.75em; =
}

.input-prose-sm :where(.prose > ul > li > p:first-child):not(:where([class~=
=3D"not-prose"], [class~=3D"not-prose"] *)) { margin-top: 1.25em; }

.input-prose-sm :where(.prose > ul > li > p:last-child):not(:where([class~=
=3D"not-prose"], [class~=3D"not-prose"] *)) { margin-bottom: 1.25em; }

.input-prose-sm :where(.prose > ol > li > p:first-child):not(:where([class~=
=3D"not-prose"], [class~=3D"not-prose"] *)) { margin-top: 1.25em; }

.input-prose-sm :where(.prose > ol > li > p:last-child):not(:where([class~=
=3D"not-prose"], [class~=3D"not-prose"] *)) { margin-bottom: 1.25em; }

.input-prose-sm :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~=3D"no=
t-prose"], [class~=3D"not-prose"] *)) { margin-top: 0.75em; margin-bottom: =
0.75em; }

.input-prose-sm :where(dl):not(:where([class~=3D"not-prose"], [class~=3D"no=
t-prose"] *)) { margin-top: 1.25em; margin-bottom: 1.25em; }

.input-prose-sm :where(dd):not(:where([class~=3D"not-prose"], [class~=3D"no=
t-prose"] *)) { margin-top: 0.5em; padding-inline-start: 1.625em; }

.input-prose-sm :where(hr + *):not(:where([class~=3D"not-prose"], [class~=
=3D"not-prose"] *)), .input-prose-sm :where(h2 + *):not(:where([class~=3D"n=
ot-prose"], [class~=3D"not-prose"] *)), .input-prose-sm :where(h3 + *):not(=
:where([class~=3D"not-prose"], [class~=3D"not-prose"] *)), .input-prose-sm =
:where(h4 + *):not(:where([class~=3D"not-prose"], [class~=3D"not-prose"] *)=
) { margin-top: 0px; }

.input-prose-sm :where(thead th:first-child):not(:where([class~=3D"not-pros=
e"], [class~=3D"not-prose"] *)) { padding-inline-start: 0px; }

.input-prose-sm :where(thead th:last-child):not(:where([class~=3D"not-prose=
"], [class~=3D"not-prose"] *)) { padding-inline-end: 0px; }

.input-prose-sm :where(tbody td, tfoot td):not(:where([class~=3D"not-prose"=
], [class~=3D"not-prose"] *)) { padding-top: 0.571429em; padding-inline: 0.=
571429em; padding-bottom: 0.571429em; }

.input-prose-sm :where(tbody td:first-child, tfoot td:first-child):not(:whe=
re([class~=3D"not-prose"], [class~=3D"not-prose"] *)) { padding-inline-star=
t: 0px; }

.input-prose-sm :where(tbody td:last-child, tfoot td:last-child):not(:where=
([class~=3D"not-prose"], [class~=3D"not-prose"] *)) { padding-inline-end: 0=
px; }

.input-prose-sm :where(figure):not(:where([class~=3D"not-prose"], [class~=
=3D"not-prose"] *)) { margin-top: 2em; margin-bottom: 2em; }

.input-prose-sm :where(.prose > :first-child):not(:where([class~=3D"not-pro=
se"], [class~=3D"not-prose"] *)) { margin-top: 0px; }

.input-prose-sm :where(.prose > :last-child):not(:where([class~=3D"not-pros=
e"], [class~=3D"not-prose"] *)) { margin-bottom: 0px; }

.input-prose-sm:is(.dark *) { --tw-prose-body: var(--tw-prose-invert-body);=
 --tw-prose-headings: var(--tw-prose-invert-headings); --tw-prose-lead: var=
(--tw-prose-invert-lead); --tw-prose-links: var(--tw-prose-invert-links); -=
-tw-prose-bold: var(--tw-prose-invert-bold); --tw-prose-counters: var(--tw-=
prose-invert-counters); --tw-prose-bullets: var(--tw-prose-invert-bullets);=
 --tw-prose-hr: var(--tw-prose-invert-hr); --tw-prose-quotes: var(--tw-pros=
e-invert-quotes); --tw-prose-quote-borders: var(--tw-prose-invert-quote-bor=
ders); --tw-prose-captions: var(--tw-prose-invert-captions); --tw-prose-kbd=
: var(--tw-prose-invert-kbd); --tw-prose-kbd-shadows: var(--tw-prose-invert=
-kbd-shadows); --tw-prose-code: var(--tw-prose-invert-code); --tw-prose-pre=
-code: var(--tw-prose-invert-pre-code); --tw-prose-pre-bg: var(--tw-prose-i=
nvert-pre-bg); --tw-prose-th-borders: var(--tw-prose-invert-th-borders); --=
tw-prose-td-borders: var(--tw-prose-invert-td-borders); }

.input-prose-sm :where(h1, h2, h3, h4, h5, h6, th):not(:where([class~=3D"no=
t-prose"], [class~=3D"not-prose"] *)) { margin-block: calc(var(--spacing,.2=
5rem)*1); --tw-font-weight: var(--font-weight-semibold,600); font-weight: v=
ar(--font-weight-semibold,600); }

.input-prose-sm :where(p):not(:where([class~=3D"not-prose"], [class~=3D"not=
-prose"] *)), .input-prose-sm :where(blockquote):not(:where([class~=3D"not-=
prose"], [class~=3D"not-prose"] *)), .input-prose-sm :where(pre):not(:where=
([class~=3D"not-prose"], [class~=3D"not-prose"] *)), .input-prose-sm :where=
(ol):not(:where([class~=3D"not-prose"], [class~=3D"not-prose"] *)), .input-=
prose-sm :where(ul):not(:where([class~=3D"not-prose"], [class~=3D"not-prose=
"] *)), .input-prose-sm :where(li):not(:where([class~=3D"not-prose"], [clas=
s~=3D"not-prose"] *)), .input-prose-sm :where(table):not(:where([class~=3D"=
not-prose"], [class~=3D"not-prose"] *)) { margin-block: calc(var(--spacing,=
.25rem)*0); }

.input-prose-sm :where(img):not(:where([class~=3D"not-prose"], [class~=3D"n=
ot-prose"] *)) { margin-block: calc(var(--spacing,.25rem)*1); }

.input-prose-sm :where(hr):not(:where([class~=3D"not-prose"], [class~=3D"no=
t-prose"] *)) { margin-block: calc(var(--spacing,.25rem)*4); border-color: =
var(--color-gray-100,#ececec); }

.input-prose-sm :where(hr):not(:where([class~=3D"not-prose"], [class~=3D"no=
t-prose"] *)):is(.dark *) { border-color: var(--color-gray-800,#333); }

.markdown-prose { --tw-prose-body: rgb(54, 65, 83); --tw-prose-headings: rg=
b(16, 24, 40); --tw-prose-lead: rgb(74, 85, 101); --tw-prose-links: rgb(16,=
 24, 40); --tw-prose-bold: rgb(16, 24, 40); --tw-prose-counters: rgb(106, 1=
14, 130); --tw-prose-bullets: rgb(209, 213, 220); --tw-prose-hr: rgb(229, 2=
31, 235); --tw-prose-quotes: rgb(16, 24, 40); --tw-prose-quote-borders: rgb=
(229, 231, 235); --tw-prose-captions: rgb(106, 114, 130); --tw-prose-kbd: r=
gb(16, 24, 40); --tw-prose-kbd-shadows: NaN NaN NaN; --tw-prose-code: rgb(1=
6, 24, 40); --tw-prose-pre-code: rgb(229, 231, 235); --tw-prose-pre-bg: rgb=
(30, 41, 57); --tw-prose-th-borders: rgb(209, 213, 220); --tw-prose-td-bord=
ers: rgb(229, 231, 235); --tw-prose-invert-body: rgb(209, 213, 220); --tw-p=
rose-invert-headings: #fff; --tw-prose-invert-lead: rgb(153, 161, 175); --t=
w-prose-invert-links: #fff; --tw-prose-invert-bold: #fff; --tw-prose-invert=
-counters: rgb(153, 161, 175); --tw-prose-invert-bullets: rgb(74, 85, 101);=
 --tw-prose-invert-hr: rgb(54, 65, 83); --tw-prose-invert-quotes: rgb(243, =
244, 246); --tw-prose-invert-quote-borders: rgb(54, 65, 83); --tw-prose-inv=
ert-captions: rgb(153, 161, 175); --tw-prose-invert-kbd: #fff; --tw-prose-i=
nvert-kbd-shadows: 255 255 255; --tw-prose-invert-code: #fff; --tw-prose-in=
vert-pre-code: rgb(209, 213, 220); --tw-prose-invert-pre-bg: #00000080; --t=
w-prose-invert-th-borders: rgb(74, 85, 101); --tw-prose-invert-td-borders: =
rgb(54, 65, 83); --tw-tracking: var(--tracking-normal,0em); letter-spacing:=
 var(--tracking-normal,0em); white-space: pre-line; font-size: 1rem; line-h=
eight: 1.75; }

.markdown-prose :where(p):not(:where([class~=3D"not-prose"], [class~=3D"not=
-prose"] *)) { margin-top: 1.25em; margin-bottom: 1.25em; }

.markdown-prose :where([class~=3D"lead"]):not(:where([class~=3D"not-prose"]=
, [class~=3D"not-prose"] *)) { color: var(--tw-prose-lead); margin-top: 1.2=
em; margin-bottom: 1.2em; font-size: 1.25em; line-height: 1.6; }

.markdown-prose :where(a):not(:where([class~=3D"not-prose"], [class~=3D"not=
-prose"] *)) { color: var(--tw-prose-links); font-weight: 500; text-decorat=
ion: underline; }

.markdown-prose :where(strong):not(:where([class~=3D"not-prose"], [class~=
=3D"not-prose"] *)) { color: var(--tw-prose-bold); font-weight: 600; }

.markdown-prose :where(a strong):not(:where([class~=3D"not-prose"], [class~=
=3D"not-prose"] *)), .markdown-prose :where(blockquote strong):not(:where([=
class~=3D"not-prose"], [class~=3D"not-prose"] *)), .markdown-prose :where(t=
head th strong):not(:where([class~=3D"not-prose"], [class~=3D"not-prose"] *=
)) { color: inherit; }

.markdown-prose :where(ol):not(:where([class~=3D"not-prose"], [class~=3D"no=
t-prose"] *)) { margin-top: 1.25em; margin-bottom: 1.25em; padding-inline-s=
tart: 1.625em; list-style-type: decimal; }

.markdown-prose :where(ol[type=3D"A"]):not(:where([class~=3D"not-prose"], [=
class~=3D"not-prose"] *)) { list-style-type: upper-alpha; }

.markdown-prose :where(ol[type=3D"a"]):not(:where([class~=3D"not-prose"], [=
class~=3D"not-prose"] *)) { list-style-type: lower-alpha; }

.markdown-prose :where():not(:where([class~=3D"not-prose"], [class~=3D"not-=
prose"] *)) { list-style-type: upper-alpha; }

.markdown-prose :where():not(:where([class~=3D"not-prose"], [class~=3D"not-=
prose"] *)) { list-style-type: lower-alpha; }

.markdown-prose :where(ol[type=3D"I"]):not(:where([class~=3D"not-prose"], [=
class~=3D"not-prose"] *)) { list-style-type: upper-roman; }

.markdown-prose :where(ol[type=3D"i"]):not(:where([class~=3D"not-prose"], [=
class~=3D"not-prose"] *)) { list-style-type: lower-roman; }

.markdown-prose :where():not(:where([class~=3D"not-prose"], [class~=3D"not-=
prose"] *)) { list-style-type: upper-roman; }

.markdown-prose :where():not(:where([class~=3D"not-prose"], [class~=3D"not-=
prose"] *)) { list-style-type: lower-roman; }

.markdown-prose :where(ol[type=3D"1"]):not(:where([class~=3D"not-prose"], [=
class~=3D"not-prose"] *)) { list-style-type: decimal; }

.markdown-prose :where(ul):not(:where([class~=3D"not-prose"], [class~=3D"no=
t-prose"] *)) { margin-top: 1.25em; margin-bottom: 1.25em; padding-inline-s=
tart: 1.625em; list-style-type: disc; }

.markdown-prose :where(ol > li):not(:where([class~=3D"not-prose"], [class~=
=3D"not-prose"] *))::marker { color: var(--tw-prose-counters); font-weight:=
 400; }

.markdown-prose :where(ul > li):not(:where([class~=3D"not-prose"], [class~=
=3D"not-prose"] *))::marker { color: var(--tw-prose-bullets); }

.markdown-prose :where(dt):not(:where([class~=3D"not-prose"], [class~=3D"no=
t-prose"] *)) { color: var(--tw-prose-headings); margin-top: 1.25em; font-w=
eight: 600; }

.markdown-prose :where(hr):not(:where([class~=3D"not-prose"], [class~=3D"no=
t-prose"] *)) { border-color: var(--tw-prose-hr); border-top-width: 1px; ma=
rgin-top: 3em; margin-bottom: 3em; }

.markdown-prose :where(blockquote):not(:where([class~=3D"not-prose"], [clas=
s~=3D"not-prose"] *)) { color: var(--tw-prose-quotes); border-inline-start-=
width: 0.25rem; border-inline-start-color: var(--tw-prose-quote-borders); q=
uotes: "=E2=80=9C" "=E2=80=9D" "=E2=80=98" "=E2=80=99"; margin-top: 1.6em; =
margin-bottom: 1.6em; padding-inline-start: 1em; font-style: italic; font-w=
eight: 500; }

.markdown-prose :where(blockquote p:first-of-type):not(:where([class~=3D"no=
t-prose"], [class~=3D"not-prose"] *))::before { content: open-quote; }

.markdown-prose :where(blockquote p:last-of-type):not(:where([class~=3D"not=
-prose"], [class~=3D"not-prose"] *))::after { content: close-quote; }

.markdown-prose :where(h1):not(:where([class~=3D"not-prose"], [class~=3D"no=
t-prose"] *)) { color: var(--tw-prose-headings); margin-top: 0px; margin-bo=
ttom: 0.888889em; font-size: 2.25em; font-weight: 800; line-height: 1.11111=
; }

.markdown-prose :where(h1 strong):not(:where([class~=3D"not-prose"], [class=
~=3D"not-prose"] *)) { color: inherit; font-weight: 900; }

.markdown-prose :where(h2):not(:where([class~=3D"not-prose"], [class~=3D"no=
t-prose"] *)) { color: var(--tw-prose-headings); margin-top: 2em; margin-bo=
ttom: 1em; font-size: 1.5em; font-weight: 700; line-height: 1.33333; }

.markdown-prose :where(h2 strong):not(:where([class~=3D"not-prose"], [class=
~=3D"not-prose"] *)) { color: inherit; font-weight: 800; }

.markdown-prose :where(h3):not(:where([class~=3D"not-prose"], [class~=3D"no=
t-prose"] *)) { color: var(--tw-prose-headings); margin-top: 1.6em; margin-=
bottom: 0.6em; font-size: 1.25em; font-weight: 600; line-height: 1.6; }

.markdown-prose :where(h3 strong):not(:where([class~=3D"not-prose"], [class=
~=3D"not-prose"] *)) { color: inherit; font-weight: 700; }

.markdown-prose :where(h4):not(:where([class~=3D"not-prose"], [class~=3D"no=
t-prose"] *)) { color: var(--tw-prose-headings); margin-top: 1.5em; margin-=
bottom: 0.5em; font-weight: 600; line-height: 1.5; }

.markdown-prose :where(h4 strong):not(:where([class~=3D"not-prose"], [class=
~=3D"not-prose"] *)) { color: inherit; font-weight: 700; }

.markdown-prose :where(img):not(:where([class~=3D"not-prose"], [class~=3D"n=
ot-prose"] *)) { margin-top: 2em; margin-bottom: 2em; }

.markdown-prose :where(picture):not(:where([class~=3D"not-prose"], [class~=
=3D"not-prose"] *)) { margin-top: 2em; margin-bottom: 2em; display: block; =
}

.markdown-prose :where(video):not(:where([class~=3D"not-prose"], [class~=3D=
"not-prose"] *)) { margin-top: 2em; margin-bottom: 2em; }

.markdown-prose :where(kbd):not(:where([class~=3D"not-prose"], [class~=3D"n=
ot-prose"] *)) { color: var(--tw-prose-kbd); box-shadow: 0 0 0 1px rgb(var(=
--tw-prose-kbd-shadows)/10%),0 3px rgb(var(--tw-prose-kbd-shadows)/10%); pa=
dding-top: 0.1875em; padding-inline: 0.375em; padding-bottom: 0.1875em; bor=
der-radius: 0.3125rem; font-family: inherit; font-size: 0.875em; font-weigh=
t: 500; }

.markdown-prose :where(a code):not(:where([class~=3D"not-prose"], [class~=
=3D"not-prose"] *)), .markdown-prose :where(h1 code):not(:where([class~=3D"=
not-prose"], [class~=3D"not-prose"] *)) { color: inherit; }

.markdown-prose :where(h2 code):not(:where([class~=3D"not-prose"], [class~=
=3D"not-prose"] *)) { color: inherit; font-size: 0.875em; }

.markdown-prose :where(h3 code):not(:where([class~=3D"not-prose"], [class~=
=3D"not-prose"] *)) { color: inherit; font-size: 0.9em; }

.markdown-prose :where(h4 code):not(:where([class~=3D"not-prose"], [class~=
=3D"not-prose"] *)), .markdown-prose :where(blockquote code):not(:where([cl=
ass~=3D"not-prose"], [class~=3D"not-prose"] *)), .markdown-prose :where(the=
ad th code):not(:where([class~=3D"not-prose"], [class~=3D"not-prose"] *)) {=
 color: inherit; }

.markdown-prose :where(pre code):not(:where([class~=3D"not-prose"], [class~=
=3D"not-prose"] *))::before, .markdown-prose :where(pre code):not(:where([c=
lass~=3D"not-prose"], [class~=3D"not-prose"] *))::after { content: none; }

.markdown-prose :where(table):not(:where([class~=3D"not-prose"], [class~=3D=
"not-prose"] *)) { table-layout: auto; text-align: start; width: 100%; marg=
in-top: 2em; margin-bottom: 2em; font-size: 0.875em; line-height: 1.71429; =
}

.markdown-prose :where(thead):not(:where([class~=3D"not-prose"], [class~=3D=
"not-prose"] *)) { border-bottom-width: 1px; border-bottom-color: var(--tw-=
prose-th-borders); }

.markdown-prose :where(thead th):not(:where([class~=3D"not-prose"], [class~=
=3D"not-prose"] *)) { color: var(--tw-prose-headings); vertical-align: bott=
om; padding-inline: 0.571429em; padding-bottom: 0.571429em; font-weight: 60=
0; }

.markdown-prose :where(tbody tr):not(:where([class~=3D"not-prose"], [class~=
=3D"not-prose"] *)) { border-bottom-width: 1px; border-bottom-color: var(--=
tw-prose-td-borders); }

.markdown-prose :where(tbody tr:last-child):not(:where([class~=3D"not-prose=
"], [class~=3D"not-prose"] *)) { border-bottom-width: 0px; }

.markdown-prose :where(tbody td):not(:where([class~=3D"not-prose"], [class~=
=3D"not-prose"] *)) { vertical-align: baseline; }

.markdown-prose :where(tfoot):not(:where([class~=3D"not-prose"], [class~=3D=
"not-prose"] *)) { border-top-width: 1px; border-top-color: var(--tw-prose-=
th-borders); }

.markdown-prose :where(tfoot td):not(:where([class~=3D"not-prose"], [class~=
=3D"not-prose"] *)) { vertical-align: top; }

.markdown-prose :where(figure > *):not(:where([class~=3D"not-prose"], [clas=
s~=3D"not-prose"] *)) { margin-top: 0px; margin-bottom: 0px; }

.markdown-prose :where(figcaption):not(:where([class~=3D"not-prose"], [clas=
s~=3D"not-prose"] *)) { color: var(--tw-prose-captions); margin-top: 0.8571=
43em; font-size: 0.875em; line-height: 1.42857; }

.markdown-prose :where(picture > img):not(:where([class~=3D"not-prose"], [c=
lass~=3D"not-prose"] *)) { margin-top: 0px; margin-bottom: 0px; }

.markdown-prose :where(li):not(:where([class~=3D"not-prose"], [class~=3D"no=
t-prose"] *)) { margin-top: 0.5em; margin-bottom: 0.5em; }

.markdown-prose :where(ol > li):not(:where([class~=3D"not-prose"], [class~=
=3D"not-prose"] *)), .markdown-prose :where(ul > li):not(:where([class~=3D"=
not-prose"], [class~=3D"not-prose"] *)) { padding-inline-start: 0.375em; }

.markdown-prose :where(.prose > ul > li p):not(:where([class~=3D"not-prose"=
], [class~=3D"not-prose"] *)) { margin-top: 0.75em; margin-bottom: 0.75em; =
}

.markdown-prose :where(.prose > ul > li > p:first-child):not(:where([class~=
=3D"not-prose"], [class~=3D"not-prose"] *)) { margin-top: 1.25em; }

.markdown-prose :where(.prose > ul > li > p:last-child):not(:where([class~=
=3D"not-prose"], [class~=3D"not-prose"] *)) { margin-bottom: 1.25em; }

.markdown-prose :where(.prose > ol > li > p:first-child):not(:where([class~=
=3D"not-prose"], [class~=3D"not-prose"] *)) { margin-top: 1.25em; }

.markdown-prose :where(.prose > ol > li > p:last-child):not(:where([class~=
=3D"not-prose"], [class~=3D"not-prose"] *)) { margin-bottom: 1.25em; }

.markdown-prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~=3D"no=
t-prose"], [class~=3D"not-prose"] *)) { margin-top: 0.75em; margin-bottom: =
0.75em; }

.markdown-prose :where(dl):not(:where([class~=3D"not-prose"], [class~=3D"no=
t-prose"] *)) { margin-top: 1.25em; margin-bottom: 1.25em; }

.markdown-prose :where(dd):not(:where([class~=3D"not-prose"], [class~=3D"no=
t-prose"] *)) { margin-top: 0.5em; padding-inline-start: 1.625em; }

.markdown-prose :where(hr + *):not(:where([class~=3D"not-prose"], [class~=
=3D"not-prose"] *)), .markdown-prose :where(h2 + *):not(:where([class~=3D"n=
ot-prose"], [class~=3D"not-prose"] *)), .markdown-prose :where(h3 + *):not(=
:where([class~=3D"not-prose"], [class~=3D"not-prose"] *)), .markdown-prose =
:where(h4 + *):not(:where([class~=3D"not-prose"], [class~=3D"not-prose"] *)=
) { margin-top: 0px; }

.markdown-prose :where(thead th:first-child):not(:where([class~=3D"not-pros=
e"], [class~=3D"not-prose"] *)) { padding-inline-start: 0px; }

.markdown-prose :where(thead th:last-child):not(:where([class~=3D"not-prose=
"], [class~=3D"not-prose"] *)) { padding-inline-end: 0px; }

.markdown-prose :where(tbody td, tfoot td):not(:where([class~=3D"not-prose"=
], [class~=3D"not-prose"] *)) { padding-top: 0.571429em; padding-inline: 0.=
571429em; padding-bottom: 0.571429em; }

.markdown-prose :where(tbody td:first-child, tfoot td:first-child):not(:whe=
re([class~=3D"not-prose"], [class~=3D"not-prose"] *)) { padding-inline-star=
t: 0px; }

.markdown-prose :where(tbody td:last-child, tfoot td:last-child):not(:where=
([class~=3D"not-prose"], [class~=3D"not-prose"] *)) { padding-inline-end: 0=
px; }

.markdown-prose :where(figure):not(:where([class~=3D"not-prose"], [class~=
=3D"not-prose"] *)) { margin-top: 2em; margin-bottom: 2em; }

.markdown-prose :where(.prose > :first-child):not(:where([class~=3D"not-pro=
se"], [class~=3D"not-prose"] *)) { margin-top: 0px; }

.markdown-prose :where(.prose > :last-child):not(:where([class~=3D"not-pros=
e"], [class~=3D"not-prose"] *)) { margin-bottom: 0px; }

.markdown-prose:is(.dark *) { --tw-prose-body: var(--tw-prose-invert-body);=
 --tw-prose-headings: var(--tw-prose-invert-headings); --tw-prose-lead: var=
(--tw-prose-invert-lead); --tw-prose-links: var(--tw-prose-invert-links); -=
-tw-prose-bold: var(--tw-prose-invert-bold); --tw-prose-counters: var(--tw-=
prose-invert-counters); --tw-prose-bullets: var(--tw-prose-invert-bullets);=
 --tw-prose-hr: var(--tw-prose-invert-hr); --tw-prose-quotes: var(--tw-pros=
e-invert-quotes); --tw-prose-quote-borders: var(--tw-prose-invert-quote-bor=
ders); --tw-prose-captions: var(--tw-prose-invert-captions); --tw-prose-kbd=
: var(--tw-prose-invert-kbd); --tw-prose-kbd-shadows: var(--tw-prose-invert=
-kbd-shadows); --tw-prose-code: var(--tw-prose-invert-code); --tw-prose-pre=
-code: var(--tw-prose-invert-pre-code); --tw-prose-pre-bg: var(--tw-prose-i=
nvert-pre-bg); --tw-prose-th-borders: var(--tw-prose-invert-th-borders); --=
tw-prose-td-borders: var(--tw-prose-invert-td-borders); }

.markdown-prose :where(h1, h2, h3, h4, h5, h6, th):not(:where([class~=3D"no=
t-prose"], [class~=3D"not-prose"] *)) { margin-block: calc(var(--spacing,.2=
5rem)*3); --tw-font-weight: var(--font-weight-semibold,600); font-weight: v=
ar(--font-weight-semibold,600); }

.markdown-prose :where(h1):not(:where([class~=3D"not-prose"], [class~=3D"no=
t-prose"] *)) { font-size: var(--text-3xl,1.875rem); line-height: var(--tw-=
leading,var(--text-3xl--line-height, 1.2 )); }

.markdown-prose :where(p):not(:where([class~=3D"not-prose"], [class~=3D"not=
-prose"] *)) { margin-block: calc(var(--spacing,.25rem)*3); }

.markdown-prose :where(blockquote):not(:where([class~=3D"not-prose"], [clas=
s~=3D"not-prose"] *)) { margin-block: calc(var(--spacing,.25rem)*0); --tw-b=
order-style: none; padding-left: calc(var(--spacing,.25rem)*1); --tw-font-w=
eight: var(--font-weight-normal,400); font-weight: var(--font-weight-normal=
,400); border-style: none; color: rgba(0, 0, 0, 0.5); border-inline-start-c=
olor: rgb(232, 233, 235); }

@supports (color:color-mix(in lab,red,red)) {
  .markdown-prose :where(blockquote):not(:where([class~=3D"not-prose"], [cl=
ass~=3D"not-prose"] *)) { color: color-mix(in oklab,var(--color-black,#000)=
50%,transparent); }
}

.markdown-prose :where(blockquote):not(:where([class~=3D"not-prose"], [clas=
s~=3D"not-prose"] *)) { font-style: normal; }

.markdown-prose :where(blockquote):not(:where([class~=3D"not-prose"], [clas=
s~=3D"not-prose"] *)):is(.dark *) { color: rgba(255, 255, 255, 0.5); border=
-color: rgb(39, 40, 42); }

@supports (color:color-mix(in lab,red,red)) {
  .markdown-prose :where(blockquote):not(:where([class~=3D"not-prose"], [cl=
ass~=3D"not-prose"] *)):is(.dark *) { color: color-mix(in oklab,var(--color=
-white,#fff)50%,transparent); }
}

.markdown-prose :where(pre):not(:where([class~=3D"not-prose"], [class~=3D"n=
ot-prose"] *)) { margin-block: calc(var(--spacing,.25rem)*0); }

.markdown-prose :where(ol):not(:where([class~=3D"not-prose"], [class~=3D"no=
t-prose"] *)), .markdown-prose :where(ul):not(:where([class~=3D"not-prose"]=
, [class~=3D"not-prose"] *)), .markdown-prose :where(li):not(:where([class~=
=3D"not-prose"], [class~=3D"not-prose"] *)) { margin-block: calc(var(--spac=
ing,.25rem)*3); }

.markdown-prose :where(table):not(:where([class~=3D"not-prose"], [class~=3D=
"not-prose"] *)) { margin-block: calc(var(--spacing,.25rem)*0); }

.markdown-prose :where(img):not(:where([class~=3D"not-prose"], [class~=3D"n=
ot-prose"] *)) { margin-block: calc(var(--spacing,.25rem)*1); }

.markdown-prose :where(hr):not(:where([class~=3D"not-prose"], [class~=3D"no=
t-prose"] *)) { margin-block: calc(var(--spacing,.25rem)*4); border-color: =
var(--color-gray-100,#ececec); }

.markdown-prose :where(hr):not(:where([class~=3D"not-prose"], [class~=3D"no=
t-prose"] *)):is(.dark *) { border-color: var(--color-gray-800,#333); }

.markdown-prose-xs { --tw-prose-body: rgb(54, 65, 83); --tw-prose-headings:=
 rgb(16, 24, 40); --tw-prose-lead: rgb(74, 85, 101); --tw-prose-links: rgb(=
16, 24, 40); --tw-prose-bold: rgb(16, 24, 40); --tw-prose-counters: rgb(106=
, 114, 130); --tw-prose-bullets: rgb(209, 213, 220); --tw-prose-hr: rgb(229=
, 231, 235); --tw-prose-quotes: rgb(16, 24, 40); --tw-prose-quote-borders: =
rgb(229, 231, 235); --tw-prose-captions: rgb(106, 114, 130); --tw-prose-kbd=
: rgb(16, 24, 40); --tw-prose-kbd-shadows: NaN NaN NaN; --tw-prose-code: rg=
b(16, 24, 40); --tw-prose-pre-code: rgb(229, 231, 235); --tw-prose-pre-bg: =
rgb(30, 41, 57); --tw-prose-th-borders: rgb(209, 213, 220); --tw-prose-td-b=
orders: rgb(229, 231, 235); --tw-prose-invert-body: rgb(209, 213, 220); --t=
w-prose-invert-headings: #fff; --tw-prose-invert-lead: rgb(153, 161, 175); =
--tw-prose-invert-links: #fff; --tw-prose-invert-bold: #fff; --tw-prose-inv=
ert-counters: rgb(153, 161, 175); --tw-prose-invert-bullets: rgb(74, 85, 10=
1); --tw-prose-invert-hr: rgb(54, 65, 83); --tw-prose-invert-quotes: rgb(24=
3, 244, 246); --tw-prose-invert-quote-borders: rgb(54, 65, 83); --tw-prose-=
invert-captions: rgb(153, 161, 175); --tw-prose-invert-kbd: #fff; --tw-pros=
e-invert-kbd-shadows: 255 255 255; --tw-prose-invert-code: #fff; --tw-prose=
-invert-pre-code: rgb(209, 213, 220); --tw-prose-invert-pre-bg: #00000080; =
--tw-prose-invert-th-borders: rgb(74, 85, 101); --tw-prose-invert-td-border=
s: rgb(54, 65, 83); font-size: var(--text-xs,.75rem); line-height: var(--tw=
-leading,var(--text-xs--line-height,calc(1/.75))); white-space: pre-line; }

.markdown-prose-xs :where(p):not(:where([class~=3D"not-prose"], [class~=3D"=
not-prose"] *)) { margin-top: 1.25em; margin-bottom: 1.25em; }

.markdown-prose-xs :where([class~=3D"lead"]):not(:where([class~=3D"not-pros=
e"], [class~=3D"not-prose"] *)) { color: var(--tw-prose-lead); margin-top: =
1.2em; margin-bottom: 1.2em; font-size: 1.25em; line-height: 1.6; }

.markdown-prose-xs :where(a):not(:where([class~=3D"not-prose"], [class~=3D"=
not-prose"] *)) { color: var(--tw-prose-links); font-weight: 500; text-deco=
ration: underline; }

.markdown-prose-xs :where(strong):not(:where([class~=3D"not-prose"], [class=
~=3D"not-prose"] *)) { color: var(--tw-prose-bold); font-weight: 600; }

.markdown-prose-xs :where(a strong):not(:where([class~=3D"not-prose"], [cla=
ss~=3D"not-prose"] *)), .markdown-prose-xs :where(blockquote strong):not(:w=
here([class~=3D"not-prose"], [class~=3D"not-prose"] *)), .markdown-prose-xs=
 :where(thead th strong):not(:where([class~=3D"not-prose"], [class~=3D"not-=
prose"] *)) { color: inherit; }

.markdown-prose-xs :where(ol):not(:where([class~=3D"not-prose"], [class~=3D=
"not-prose"] *)) { margin-top: 1.25em; margin-bottom: 1.25em; padding-inlin=
e-start: 1.625em; list-style-type: decimal; }

.markdown-prose-xs :where(ol[type=3D"A"]):not(:where([class~=3D"not-prose"]=
, [class~=3D"not-prose"] *)) { list-style-type: upper-alpha; }

.markdown-prose-xs :where(ol[type=3D"a"]):not(:where([class~=3D"not-prose"]=
, [class~=3D"not-prose"] *)) { list-style-type: lower-alpha; }

.markdown-prose-xs :where():not(:where([class~=3D"not-prose"], [class~=3D"n=
ot-prose"] *)) { list-style-type: upper-alpha; }

.markdown-prose-xs :where():not(:where([class~=3D"not-prose"], [class~=3D"n=
ot-prose"] *)) { list-style-type: lower-alpha; }

.markdown-prose-xs :where(ol[type=3D"I"]):not(:where([class~=3D"not-prose"]=
, [class~=3D"not-prose"] *)) { list-style-type: upper-roman; }

.markdown-prose-xs :where(ol[type=3D"i"]):not(:where([class~=3D"not-prose"]=
, [class~=3D"not-prose"] *)) { list-style-type: lower-roman; }

.markdown-prose-xs :where():not(:where([class~=3D"not-prose"], [class~=3D"n=
ot-prose"] *)) { list-style-type: upper-roman; }

.markdown-prose-xs :where():not(:where([class~=3D"not-prose"], [class~=3D"n=
ot-prose"] *)) { list-style-type: lower-roman; }

.markdown-prose-xs :where(ol[type=3D"1"]):not(:where([class~=3D"not-prose"]=
, [class~=3D"not-prose"] *)) { list-style-type: decimal; }

.markdown-prose-xs :where(ul):not(:where([class~=3D"not-prose"], [class~=3D=
"not-prose"] *)) { margin-top: 1.25em; margin-bottom: 1.25em; padding-inlin=
e-start: 1.625em; list-style-type: disc; }

.markdown-prose-xs :where(ol > li):not(:where([class~=3D"not-prose"], [clas=
s~=3D"not-prose"] *))::marker { color: var(--tw-prose-counters); font-weigh=
t: 400; }

.markdown-prose-xs :where(ul > li):not(:where([class~=3D"not-prose"], [clas=
s~=3D"not-prose"] *))::marker { color: var(--tw-prose-bullets); }

.markdown-prose-xs :where(dt):not(:where([class~=3D"not-prose"], [class~=3D=
"not-prose"] *)) { color: var(--tw-prose-headings); margin-top: 1.25em; fon=
t-weight: 600; }

.markdown-prose-xs :where(hr):not(:where([class~=3D"not-prose"], [class~=3D=
"not-prose"] *)) { border-color: var(--tw-prose-hr); border-top-width: 1px;=
 margin-top: 3em; margin-bottom: 3em; }

.markdown-prose-xs :where(blockquote):not(:where([class~=3D"not-prose"], [c=
lass~=3D"not-prose"] *)) { color: var(--tw-prose-quotes); border-inline-sta=
rt-width: 0.25rem; border-inline-start-color: var(--tw-prose-quote-borders)=
; quotes: "=E2=80=9C" "=E2=80=9D" "=E2=80=98" "=E2=80=99"; margin-top: 1.6e=
m; margin-bottom: 1.6em; padding-inline-start: 1em; font-style: italic; fon=
t-weight: 500; }

.markdown-prose-xs :where(blockquote p:first-of-type):not(:where([class~=3D=
"not-prose"], [class~=3D"not-prose"] *))::before { content: open-quote; }

.markdown-prose-xs :where(blockquote p:last-of-type):not(:where([class~=3D"=
not-prose"], [class~=3D"not-prose"] *))::after { content: close-quote; }

.markdown-prose-xs :where(h1):not(:where([class~=3D"not-prose"], [class~=3D=
"not-prose"] *)) { color: var(--tw-prose-headings); margin-top: 0px; margin=
-bottom: 0.888889em; font-size: 2.25em; font-weight: 800; line-height: 1.11=
111; }

.markdown-prose-xs :where(h1 strong):not(:where([class~=3D"not-prose"], [cl=
ass~=3D"not-prose"] *)) { color: inherit; font-weight: 900; }

.markdown-prose-xs :where(h2):not(:where([class~=3D"not-prose"], [class~=3D=
"not-prose"] *)) { color: var(--tw-prose-headings); margin-top: 2em; margin=
-bottom: 1em; font-size: 1.5em; font-weight: 700; line-height: 1.33333; }

.markdown-prose-xs :where(h2 strong):not(:where([class~=3D"not-prose"], [cl=
ass~=3D"not-prose"] *)) { color: inherit; font-weight: 800; }

.markdown-prose-xs :where(h3):not(:where([class~=3D"not-prose"], [class~=3D=
"not-prose"] *)) { color: var(--tw-prose-headings); margin-top: 1.6em; marg=
in-bottom: 0.6em; font-size: 1.25em; font-weight: 600; line-height: 1.6; }

.markdown-prose-xs :where(h3 strong):not(:where([class~=3D"not-prose"], [cl=
ass~=3D"not-prose"] *)) { color: inherit; font-weight: 700; }

.markdown-prose-xs :where(h4):not(:where([class~=3D"not-prose"], [class~=3D=
"not-prose"] *)) { color: var(--tw-prose-headings); margin-top: 1.5em; marg=
in-bottom: 0.5em; font-weight: 600; line-height: 1.5; }

.markdown-prose-xs :where(h4 strong):not(:where([class~=3D"not-prose"], [cl=
ass~=3D"not-prose"] *)) { color: inherit; font-weight: 700; }

.markdown-prose-xs :where(img):not(:where([class~=3D"not-prose"], [class~=
=3D"not-prose"] *)) { margin-top: 2em; margin-bottom: 2em; }

.markdown-prose-xs :where(picture):not(:where([class~=3D"not-prose"], [clas=
s~=3D"not-prose"] *)) { margin-top: 2em; margin-bottom: 2em; display: block=
; }

.markdown-prose-xs :where(video):not(:where([class~=3D"not-prose"], [class~=
=3D"not-prose"] *)) { margin-top: 2em; margin-bottom: 2em; }

.markdown-prose-xs :where(kbd):not(:where([class~=3D"not-prose"], [class~=
=3D"not-prose"] *)) { color: var(--tw-prose-kbd); box-shadow: 0 0 0 1px rgb=
(var(--tw-prose-kbd-shadows)/10%),0 3px rgb(var(--tw-prose-kbd-shadows)/10%=
); padding-top: 0.1875em; padding-inline: 0.375em; padding-bottom: 0.1875em=
; border-radius: 0.3125rem; font-family: inherit; font-size: 0.875em; font-=
weight: 500; }

.markdown-prose-xs :where(a code):not(:where([class~=3D"not-prose"], [class=
~=3D"not-prose"] *)), .markdown-prose-xs :where(h1 code):not(:where([class~=
=3D"not-prose"], [class~=3D"not-prose"] *)) { color: inherit; }

.markdown-prose-xs :where(h2 code):not(:where([class~=3D"not-prose"], [clas=
s~=3D"not-prose"] *)) { color: inherit; font-size: 0.875em; }

.markdown-prose-xs :where(h3 code):not(:where([class~=3D"not-prose"], [clas=
s~=3D"not-prose"] *)) { color: inherit; font-size: 0.9em; }

.markdown-prose-xs :where(h4 code):not(:where([class~=3D"not-prose"], [clas=
s~=3D"not-prose"] *)), .markdown-prose-xs :where(blockquote code):not(:wher=
e([class~=3D"not-prose"], [class~=3D"not-prose"] *)), .markdown-prose-xs :w=
here(thead th code):not(:where([class~=3D"not-prose"], [class~=3D"not-prose=
"] *)) { color: inherit; }

.markdown-prose-xs :where(pre code):not(:where([class~=3D"not-prose"], [cla=
ss~=3D"not-prose"] *))::before, .markdown-prose-xs :where(pre code):not(:wh=
ere([class~=3D"not-prose"], [class~=3D"not-prose"] *))::after { content: no=
ne; }

.markdown-prose-xs :where(table):not(:where([class~=3D"not-prose"], [class~=
=3D"not-prose"] *)) { table-layout: auto; text-align: start; width: 100%; m=
argin-top: 2em; margin-bottom: 2em; font-size: 0.875em; line-height: 1.7142=
9; }

.markdown-prose-xs :where(thead):not(:where([class~=3D"not-prose"], [class~=
=3D"not-prose"] *)) { border-bottom-width: 1px; border-bottom-color: var(--=
tw-prose-th-borders); }

.markdown-prose-xs :where(thead th):not(:where([class~=3D"not-prose"], [cla=
ss~=3D"not-prose"] *)) { color: var(--tw-prose-headings); vertical-align: b=
ottom; padding-inline: 0.571429em; padding-bottom: 0.571429em; font-weight:=
 600; }

.markdown-prose-xs :where(tbody tr):not(:where([class~=3D"not-prose"], [cla=
ss~=3D"not-prose"] *)) { border-bottom-width: 1px; border-bottom-color: var=
(--tw-prose-td-borders); }

.markdown-prose-xs :where(tbody tr:last-child):not(:where([class~=3D"not-pr=
ose"], [class~=3D"not-prose"] *)) { border-bottom-width: 0px; }

.markdown-prose-xs :where(tbody td):not(:where([class~=3D"not-prose"], [cla=
ss~=3D"not-prose"] *)) { vertical-align: baseline; }

.markdown-prose-xs :where(tfoot):not(:where([class~=3D"not-prose"], [class~=
=3D"not-prose"] *)) { border-top-width: 1px; border-top-color: var(--tw-pro=
se-th-borders); }

.markdown-prose-xs :where(tfoot td):not(:where([class~=3D"not-prose"], [cla=
ss~=3D"not-prose"] *)) { vertical-align: top; }

.markdown-prose-xs :where(figure > *):not(:where([class~=3D"not-prose"], [c=
lass~=3D"not-prose"] *)) { margin-top: 0px; margin-bottom: 0px; }

.markdown-prose-xs :where(figcaption):not(:where([class~=3D"not-prose"], [c=
lass~=3D"not-prose"] *)) { color: var(--tw-prose-captions); margin-top: 0.8=
57143em; font-size: 0.875em; line-height: 1.42857; }

.markdown-prose-xs :where(picture > img):not(:where([class~=3D"not-prose"],=
 [class~=3D"not-prose"] *)) { margin-top: 0px; margin-bottom: 0px; }

.markdown-prose-xs :where(li):not(:where([class~=3D"not-prose"], [class~=3D=
"not-prose"] *)) { margin-top: 0.5em; margin-bottom: 0.5em; }

.markdown-prose-xs :where(ol > li):not(:where([class~=3D"not-prose"], [clas=
s~=3D"not-prose"] *)), .markdown-prose-xs :where(ul > li):not(:where([class=
~=3D"not-prose"], [class~=3D"not-prose"] *)) { padding-inline-start: 0.375e=
m; }

.markdown-prose-xs :where(.prose > ul > li p):not(:where([class~=3D"not-pro=
se"], [class~=3D"not-prose"] *)) { margin-top: 0.75em; margin-bottom: 0.75e=
m; }

.markdown-prose-xs :where(.prose > ul > li > p:first-child):not(:where([cla=
ss~=3D"not-prose"], [class~=3D"not-prose"] *)) { margin-top: 1.25em; }

.markdown-prose-xs :where(.prose > ul > li > p:last-child):not(:where([clas=
s~=3D"not-prose"], [class~=3D"not-prose"] *)) { margin-bottom: 1.25em; }

.markdown-prose-xs :where(.prose > ol > li > p:first-child):not(:where([cla=
ss~=3D"not-prose"], [class~=3D"not-prose"] *)) { margin-top: 1.25em; }

.markdown-prose-xs :where(.prose > ol > li > p:last-child):not(:where([clas=
s~=3D"not-prose"], [class~=3D"not-prose"] *)) { margin-bottom: 1.25em; }

.markdown-prose-xs :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~=3D=
"not-prose"], [class~=3D"not-prose"] *)) { margin-top: 0.75em; margin-botto=
m: 0.75em; }

.markdown-prose-xs :where(dl):not(:where([class~=3D"not-prose"], [class~=3D=
"not-prose"] *)) { margin-top: 1.25em; margin-bottom: 1.25em; }

.markdown-prose-xs :where(dd):not(:where([class~=3D"not-prose"], [class~=3D=
"not-prose"] *)) { margin-top: 0.5em; padding-inline-start: 1.625em; }

.markdown-prose-xs :where(hr + *):not(:where([class~=3D"not-prose"], [class=
~=3D"not-prose"] *)), .markdown-prose-xs :where(h2 + *):not(:where([class~=
=3D"not-prose"], [class~=3D"not-prose"] *)), .markdown-prose-xs :where(h3 +=
 *):not(:where([class~=3D"not-prose"], [class~=3D"not-prose"] *)), .markdow=
n-prose-xs :where(h4 + *):not(:where([class~=3D"not-prose"], [class~=3D"not=
-prose"] *)) { margin-top: 0px; }

.markdown-prose-xs :where(thead th:first-child):not(:where([class~=3D"not-p=
rose"], [class~=3D"not-prose"] *)) { padding-inline-start: 0px; }

.markdown-prose-xs :where(thead th:last-child):not(:where([class~=3D"not-pr=
ose"], [class~=3D"not-prose"] *)) { padding-inline-end: 0px; }

.markdown-prose-xs :where(tbody td, tfoot td):not(:where([class~=3D"not-pro=
se"], [class~=3D"not-prose"] *)) { padding-top: 0.571429em; padding-inline:=
 0.571429em; padding-bottom: 0.571429em; }

.markdown-prose-xs :where(tbody td:first-child, tfoot td:first-child):not(:=
where([class~=3D"not-prose"], [class~=3D"not-prose"] *)) { padding-inline-s=
tart: 0px; }

.markdown-prose-xs :where(tbody td:last-child, tfoot td:last-child):not(:wh=
ere([class~=3D"not-prose"], [class~=3D"not-prose"] *)) { padding-inline-end=
: 0px; }

.markdown-prose-xs :where(figure):not(:where([class~=3D"not-prose"], [class=
~=3D"not-prose"] *)) { margin-top: 2em; margin-bottom: 2em; }

.markdown-prose-xs :where(.prose > :first-child):not(:where([class~=3D"not-=
prose"], [class~=3D"not-prose"] *)) { margin-top: 0px; }

.markdown-prose-xs :where(.prose > :last-child):not(:where([class~=3D"not-p=
rose"], [class~=3D"not-prose"] *)) { margin-bottom: 0px; }

.markdown-prose-xs:is(.dark *) { --tw-prose-body: var(--tw-prose-invert-bod=
y); --tw-prose-headings: var(--tw-prose-invert-headings); --tw-prose-lead: =
var(--tw-prose-invert-lead); --tw-prose-links: var(--tw-prose-invert-links)=
; --tw-prose-bold: var(--tw-prose-invert-bold); --tw-prose-counters: var(--=
tw-prose-invert-counters); --tw-prose-bullets: var(--tw-prose-invert-bullet=
s); --tw-prose-hr: var(--tw-prose-invert-hr); --tw-prose-quotes: var(--tw-p=
rose-invert-quotes); --tw-prose-quote-borders: var(--tw-prose-invert-quote-=
borders); --tw-prose-captions: var(--tw-prose-invert-captions); --tw-prose-=
kbd: var(--tw-prose-invert-kbd); --tw-prose-kbd-shadows: var(--tw-prose-inv=
ert-kbd-shadows); --tw-prose-code: var(--tw-prose-invert-code); --tw-prose-=
pre-code: var(--tw-prose-invert-pre-code); --tw-prose-pre-bg: var(--tw-pros=
e-invert-pre-bg); --tw-prose-th-borders: var(--tw-prose-invert-th-borders);=
 --tw-prose-td-borders: var(--tw-prose-invert-td-borders); }

.markdown-prose-xs :where(h1, h2, h3, h4, h5, h6, th):not(:where([class~=3D=
"not-prose"], [class~=3D"not-prose"] *)) { margin-block: calc(var(--spacing=
,.25rem)*3); --tw-font-weight: var(--font-weight-semibold,600); font-weight=
: var(--font-weight-semibold,600); }

.markdown-prose-xs :where(h1):not(:where([class~=3D"not-prose"], [class~=3D=
"not-prose"] *)) { font-size: var(--text-3xl,1.875rem); line-height: var(--=
tw-leading,var(--text-3xl--line-height, 1.2 )); }

.markdown-prose-xs :where(p):not(:where([class~=3D"not-prose"], [class~=3D"=
not-prose"] *)) { margin-block: calc(var(--spacing,.25rem)*3); }

.markdown-prose-xs :where(blockquote):not(:where([class~=3D"not-prose"], [c=
lass~=3D"not-prose"] *)) { margin-block: calc(var(--spacing,.25rem)*0); bor=
der-inline-start-style: var(--tw-border-style); --tw-font-weight: var(--fon=
t-weight-normal,400); font-weight: var(--font-weight-normal,400); border-in=
line-start-width: 2px; border-inline-start-color: rgb(232, 233, 235); font-=
style: normal; }

.markdown-prose-xs :where(blockquote):not(:where([class~=3D"not-prose"], [c=
lass~=3D"not-prose"] *)):is(.dark *) { border-color: rgb(39, 40, 42); }

.markdown-prose-xs :where(pre):not(:where([class~=3D"not-prose"], [class~=
=3D"not-prose"] *)) { margin-block: calc(var(--spacing,.25rem)*0); }

.markdown-prose-xs :where(ol):not(:where([class~=3D"not-prose"], [class~=3D=
"not-prose"] *)), .markdown-prose-xs :where(ul):not(:where([class~=3D"not-p=
rose"], [class~=3D"not-prose"] *)), .markdown-prose-xs :where(li):not(:wher=
e([class~=3D"not-prose"], [class~=3D"not-prose"] *)) { margin-block: calc(v=
ar(--spacing,.25rem)*3); }

.markdown-prose-xs :where(table):not(:where([class~=3D"not-prose"], [class~=
=3D"not-prose"] *)) { margin-block: calc(var(--spacing,.25rem)*0); }

.markdown-prose-xs :where(img):not(:where([class~=3D"not-prose"], [class~=
=3D"not-prose"] *)) { margin-block: calc(var(--spacing,.25rem)*1); }

.markdown-prose-xs :where(hr):not(:where([class~=3D"not-prose"], [class~=3D=
"not-prose"] *)) { margin-block: calc(var(--spacing,.25rem)*4); border-colo=
r: var(--color-gray-100,#ececec); }

.markdown-prose-xs :where(hr):not(:where([class~=3D"not-prose"], [class~=3D=
"not-prose"] *)):is(.dark *) { border-color: var(--color-gray-800,#333); }

.markdown a { text-decoration-line: underline; }

#messages-container a { display: inline-block; }

.font-primary { font-family: system-ui, ui-sans-serif; }

.drag-region { app-region: drag; }

.drag-region a, .drag-region button, .no-drag-region { app-region: no-drag;=
 }

li p { display: inline; }

::-webkit-scrollbar-thumb { --tw-border-opacity: 1; border-color: rgba(255,=
255,255,var(--tw-border-opacity)); background-color: rgba(142, 142, 142, 0.=
1); border-width: 1px; border-radius: 9999px; }

.dark ::-webkit-scrollbar-thumb { border-color: rgba(0,0,0,var(--tw-border-=
opacity)); background-color: rgba(42, 42, 42, 0.8); }

::-webkit-scrollbar { width: 0.5rem; height: 0.5rem; }

::-webkit-scrollbar-track { background-color: rgba(0, 0, 0, 0); border-radi=
us: 9999px; }

select { print-color-adjust: exact; appearance: none; background-image: url=
("data:image/svg+xml;charset=3Dutf-8,%3Csvg xmlns=3D'http://www.w3.org/2000=
/svg' fill=3D'none' viewBox=3D'0 0 20 20'%3E%3Cpath stroke=3D'%236B7280' st=
roke-linecap=3D'round' stroke-linejoin=3D'round' stroke-width=3D'1.5' d=3D'=
m6 8 4 4 4-4'/%3E%3C/svg%3E"); background-position: right 0px center; backg=
round-repeat: no-repeat; background-size: 1.5em 1.5em; }

@keyframes shimmer {=20
  0% { background-position: 200% 0px; }
  100% { background-position: -200% 0px; }
}

.shimmer { -webkit-text-fill-color: transparent; color: rgb(129, 130, 134);=
 background: linear-gradient(90deg, rgb(154, 155, 158) 25%, rgb(42, 41, 41)=
, rgb(154, 155, 158) 75%) 0px 0px / 200% 100% text; animation: 4s linear 0s=
 infinite normal none running shimmer; }

@keyframes smoothFadeIn {=20
  0% { opacity: 0; transform: translateY(-10px); }
  100% { opacity: 1; transform: translateY(0px); }
}

.status-description { animation: 0.2s ease 0s 1 normal forwards running smo=
othFadeIn; }

.katex-mathml { display: none; }

.scrollbar-hidden:active::-webkit-scrollbar-thumb { visibility: visible; }

.scrollbar-hidden:focus::-webkit-scrollbar-thumb { visibility: visible; }

.scrollbar-hidden:hover::-webkit-scrollbar-thumb { visibility: visible; }

.scrollbar-hidden::-webkit-scrollbar-thumb { visibility: hidden; }

.scrollbar-hidden::-webkit-scrollbar-corner { display: none; }

.scrollbar-none::-webkit-scrollbar { display: none; }

.scrollbar-none::-webkit-scrollbar-corner { display: none; }

.scrollbar-none { scrollbar-width: none; }

input::-webkit-outer-spin-button { appearance: none; margin: 0px; }

input::-webkit-inner-spin-button { appearance: none; margin: 0px; }

input[type=3D"number"] { }

.cm-editor { width: 100%; height: 100%; }

.cm-scroller:active::-webkit-scrollbar-thumb { visibility: visible; }

.cm-scroller:focus::-webkit-scrollbar-thumb { visibility: visible; }

.cm-scroller:hover::-webkit-scrollbar-thumb { visibility: visible; }

.cm-scroller::-webkit-scrollbar-thumb { visibility: hidden; }

.cm-scroller::-webkit-scrollbar-corner { display: none; }

.cm-editor.cm-focused { outline: none; }

.tippy-box[data-theme~=3D"dark"] { border-radius: var(--radius-lg,.5rem); b=
order-style: var(--tw-border-style); border-width: 1px; border-color: var(-=
-color-gray-900,#171717); background-color: var(--color-gray-950,#0d0d0d); =
font-size: var(--text-xs,.75rem); line-height: var(--tw-leading,var(--text-=
xs--line-height,calc(1/.75))); --tw-shadow: 0 20px 25px -5px var(--tw-shado=
w-color,#0000001a),0 8px 10px -6px var(--tw-shadow-color,#0000001a); box-sh=
adow: var(--tw-inset-shadow),var(--tw-inset-ring-shadow),var(--tw-ring-offs=
et-shadow),var(--tw-ring-shadow),var(--tw-shadow); }

.password { -webkit-text-security: disc; }

.codespan { color: rgb(235, 87, 87); margin-inline: calc(var(--spacing,.25r=
em)*.5); border-radius: var(--radius-md,.375rem); background-color: var(--c=
olor-gray-100,#ececec); border-width: 0px; padding: 3px 8px; font-size: 0.8=
em; font-weight: 600; }

.codespan:is(.dark *) { background-color: var(--color-gray-800,#333); }

.svelte-flow { background-color: rgba(0, 0, 0, 0) !important; }

.svelte-flow__edge > path { stroke-width: 0.5px; }

.svelte-flow__edge.animated > path { stroke-width: 2px; stroke: var(--color=
-gray-600,#676767); }

.svelte-flow__edge.animated > path:is(.dark *) { stroke: var(--color-gray-5=
00,#9b9b9b); }

.bg-gray-950-90 { background-color: rgba(var(--color-gray-950,#0d0d0d),.9);=
 }

.ProseMirror { white-space: pre-wrap; height: 100%; min-height: fit-content=
; max-height: 100%; }

.ProseMirror:focus { outline: none; }

.ProseMirror p.is-editor-empty:first-child::before { content: attr(data-pla=
ceholder); float: left; color: rgb(173, 181, 189); pointer-events: none; -w=
ebkit-line-clamp: 1; -webkit-box-orient: vertical; display: -webkit-box; po=
sition: absolute; overflow: hidden; }

.ai-autocompletion::after { color: rgb(160, 160, 160); content: attr(data-s=
uggestion); pointer-events: none; }

.tiptap > pre > code { background-color: var(--color-gray-100,#ececec); bor=
der-radius: 0.4rem; padding: 0.25em 0.3em; font-size: 0.85rem; }

.tiptap > pre > code:is(.dark *) { background-color: var(--color-gray-800,#=
333); }

.tiptap > pre { background-color: var(--color-gray-100,#ececec); border-rad=
ius: 0.5rem; margin: 1.5rem 0px; padding: 0.75rem 1rem; font-family: JetBra=
insMono, monospace; }

.tiptap > pre:is(.dark *) { background-color: var(--color-gray-800,#333); }

.tiptap p code { color: rgb(235, 87, 87); margin-inline: calc(var(--spacing=
,.25rem)*.5); border-radius: var(--radius-md,.375rem); background-color: va=
r(--color-gray-100,#ececec); border-width: 0px; padding: 3px 8px; font-size=
: 0.8em; font-weight: 600; }

.tiptap p code:is(.dark *) { background-color: var(--color-gray-800,#333); =
}

.hljs-comment, .hljs-quote { color: rgb(97, 97, 97); }

.hljs-variable, .hljs-template-variable, .hljs-attribute, .hljs-tag, .hljs-=
regexp, .hljs-link, .hljs-name, .hljs-selector-id, .hljs-selector-class { c=
olor: rgb(249, 129, 129); }

.hljs-number, .hljs-meta, .hljs-built_in, .hljs-builtin-name, .hljs-literal=
, .hljs-type, .hljs-params { color: rgb(251, 188, 136); }

.hljs-string, .hljs-symbol, .hljs-bullet { color: rgb(185, 241, 141); }

.hljs-title, .hljs-section { color: rgb(250, 245, 148); }

.hljs-keyword, .hljs-selector-tag { color: rgb(112, 207, 248); }

.hljs-emphasis { font-style: italic; }

.hljs-strong { font-weight: 700; }

.button-border { border-bottom-style: var(--tw-border-style); border-color:=
 rgba(0, 0, 0, 0.1); border-bottom-width: 2px; }

@supports (color:color-mix(in lab,red,red)) {
  .button-border { border-color: color-mix(in oklab,var(--color-black,#000)=
10%,transparent); }
}

.button-border:is(.dark *) { border-color: rgba(255, 255, 255, 0.1); }

@supports (color:color-mix(in lab,red,red)) {
  .button-border:is(.dark *) { border-color: color-mix(in oklab,var(--color=
-white,#fff)10%,transparent); }
}

.bg-color-primary { background-color: rgb(244, 246, 248); }

.bg-color-primary:is(.dark *) { background-color: rgb(20, 22, 24); }

.border-bottom-gradient { border-bottom-style: var(--tw-border-style); bord=
er-bottom-width: 2px; }

.sider-item { margin-inline: calc(var(--spacing,.25rem)*5); }

.hover-bg-color:hover { background-color: rgb(242, 244, 246); }

.hover-bg-color:is(.dark *):hover { background-color: rgb(55, 56, 59); }

.group-hover-bg-color:is(:where(.group):hover *) { background-color: rgb(24=
2, 244, 246); }

.group-hover-bg-color:is(.dark *):is(:where(.group):hover *) { background-c=
olor: rgb(55, 56, 59); }

.text-lineGradient { --tw-gradient-position: to right in oklab; background-=
image: linear-gradient(var(--tw-gradient-stops)); --tw-gradient-from: #191a=
1d; --tw-gradient-stops: var(--tw-gradient-via-stops,var(--tw-gradient-posi=
tion),var(--tw-gradient-from)var(--tw-gradient-from-position),var(--tw-grad=
ient-to)var(--tw-gradient-to-position)); --tw-gradient-via: #747689; --tw-g=
radient-via-stops: var(--tw-gradient-position),var(--tw-gradient-from)var(-=
-tw-gradient-from-position),var(--tw-gradient-via)var(--tw-gradient-via-pos=
ition),var(--tw-gradient-to)var(--tw-gradient-to-position); --tw-gradient-t=
o: #191a1d; color: rgba(0, 0, 0, 0); background-clip: text; }

.button-gradient { --tw-gradient-position: to bottom right; background-imag=
e: linear-gradient(var(--tw-gradient-stops)); --tw-gradient-from: #191a1d; =
--tw-gradient-stops: var(--tw-gradient-via-stops,var(--tw-gradient-position=
),var(--tw-gradient-from)var(--tw-gradient-from-position),var(--tw-gradient=
-to)var(--tw-gradient-to-position)); --tw-gradient-to: #747689; }

@supports (background-image:linear-gradient(in lab,red,red)) {
  .button-gradient { --tw-gradient-position: to bottom right in oklab; }
}

.button-gradient:hover { --tw-gradient-position: to bottom right; backgroun=
d-image: linear-gradient(var(--tw-gradient-stops)); }

@supports (background-image:linear-gradient(in lab,red,red)) {
  .button-gradient:hover { --tw-gradient-position: to bottom right in oklab=
; }
}

.button-gradient:hover { --tw-gradient-from: #1e1e22; --tw-gradient-stops: =
var(--tw-gradient-via-stops,var(--tw-gradient-position),var(--tw-gradient-f=
rom)var(--tw-gradient-from-position),var(--tw-gradient-to)var(--tw-gradient=
-to-position)); --tw-gradient-to: #525461; }

.button-gradient:is(.dark *) { background-image: none; }

.dark-gradient { --tw-gradient-position: to right in oklab; background-imag=
e: linear-gradient(var(--tw-gradient-stops)); --tw-gradient-from: #f41010; =
--tw-gradient-stops: var(--tw-gradient-via-stops,var(--tw-gradient-position=
),var(--tw-gradient-from)var(--tw-gradient-from-position),var(--tw-gradient=
-to)var(--tw-gradient-to-position)); --tw-gradient-via: #a4a6b3; --tw-gradi=
ent-via-stops: var(--tw-gradient-position),var(--tw-gradient-from)var(--tw-=
gradient-from-position),var(--tw-gradient-via)var(--tw-gradient-via-positio=
n),var(--tw-gradient-to)var(--tw-gradient-to-position); --tw-gradient-to: #=
fff; color: rgba(0, 0, 0, 0); background-clip: text; }

.glass-container { backdrop-filter: blur(3px); border-width: 1px 0px 0px 1p=
x; border-style: solid; border-color: rgba(255, 255, 255, 0.4) rgba(40, 40,=
 40, 0.35) rgba(40, 40, 40, 0.35) rgba(255, 255, 255, 0.4); border-image: i=
nitial; box-shadow: rgba(0, 0, 0, 0.3) 2px 8px 8px; }

@property --tw-font-weight { syntax: "*"; inherits: false; }

@property --tw-tracking { syntax: "*"; inherits: false; }

@property --tw-border-style { syntax: "*"; inherits: false; initial-value: =
solid; }

@property --tw-shadow { syntax: "*"; inherits: false; initial-value: 0 0 #0=
000; }

@property --tw-shadow-color { syntax: "*"; inherits: false; }

@property --tw-shadow-alpha { syntax: "<percentage>"; inherits: false; init=
ial-value: 100%; }

@property --tw-inset-shadow { syntax: "*"; inherits: false; initial-value: =
0 0 #0000; }

@property --tw-inset-shadow-color { syntax: "*"; inherits: false; }

@property --tw-inset-shadow-alpha { syntax: "<percentage>"; inherits: false=
; initial-value: 100%; }

@property --tw-ring-color { syntax: "*"; inherits: false; }

@property --tw-ring-shadow { syntax: "*"; inherits: false; initial-value: 0=
 0 #0000; }

@property --tw-inset-ring-color { syntax: "*"; inherits: false; }

@property --tw-inset-ring-shadow { syntax: "*"; inherits: false; initial-va=
lue: 0 0 #0000; }

@property --tw-ring-inset { syntax: "*"; inherits: false; }

@property --tw-ring-offset-width { syntax: "<length>"; inherits: false; ini=
tial-value: 0; }

@property --tw-ring-offset-color { syntax: "*"; inherits: false; initial-va=
lue: #fff; }

@property --tw-ring-offset-shadow { syntax: "*"; inherits: false; initial-v=
alue: 0 0 #0000; }

@property --tw-gradient-position { syntax: "*"; inherits: false; }

@property --tw-gradient-from { syntax: "<color>"; inherits: false; initial-=
value: #0000; }

@property --tw-gradient-via { syntax: "<color>"; inherits: false; initial-v=
alue: #0000; }

@property --tw-gradient-to { syntax: "<color>"; inherits: false; initial-va=
lue: #0000; }

@property --tw-gradient-stops { syntax: "*"; inherits: false; }

@property --tw-gradient-via-stops { syntax: "*"; inherits: false; }

@property --tw-gradient-from-position { syntax: "<length-percentage>"; inhe=
rits: false; initial-value: 0%; }

@property --tw-gradient-via-position { syntax: "<length-percentage>"; inher=
its: false; initial-value: 50%; }

@property --tw-gradient-to-position { syntax: "<length-percentage>"; inheri=
ts: false; initial-value: 100%; }

.tippy-box[data-animation=3D"fade"][data-state=3D"hidden"] { opacity: 0; }

[data-tippy-root] { max-width: calc(-10px + 100vw); }

.tippy-box { position: relative; background-color: rgb(51, 51, 51); color: =
rgb(255, 255, 255); border-radius: 4px; font-size: 14px; line-height: 1.4; =
white-space: normal; outline: 0px; transition-property: transform, visibili=
ty, opacity; }

.tippy-box[data-placement^=3D"top"] > .tippy-arrow { bottom: 0px; }

.tippy-box[data-placement^=3D"top"] > .tippy-arrow::before { bottom: -7px; =
left: 0px; border-width: 8px 8px 0px; border-top-color: initial; transform-=
origin: center top; }

.tippy-box[data-placement^=3D"bottom"] > .tippy-arrow { top: 0px; }

.tippy-box[data-placement^=3D"bottom"] > .tippy-arrow::before { top: -7px; =
left: 0px; border-width: 0px 8px 8px; border-bottom-color: initial; transfo=
rm-origin: center bottom; }

.tippy-box[data-placement^=3D"left"] > .tippy-arrow { right: 0px; }

.tippy-box[data-placement^=3D"left"] > .tippy-arrow::before { border-width:=
 8px 0px 8px 8px; border-left-color: initial; right: -7px; transform-origin=
: left center; }

.tippy-box[data-placement^=3D"right"] > .tippy-arrow { left: 0px; }

.tippy-box[data-placement^=3D"right"] > .tippy-arrow::before { left: -7px; =
border-width: 8px 8px 8px 0px; border-right-color: initial; transform-origi=
n: right center; }

.tippy-box[data-inertia][data-state=3D"visible"] { transition-timing-functi=
on: cubic-bezier(0.54, 1.5, 0.38, 1.11); }

.tippy-arrow { width: 16px; height: 16px; color: rgb(51, 51, 51); }

.tippy-arrow::before { content: ""; position: absolute; border-color: trans=
parent; border-style: solid; }

.tippy-content { position: relative; padding: 5px 9px; z-index: 1; }
------MultipartBoundary--xhwtFZq0UDxOmF7548m6subkWxGIdLYuwRmj2FBwDc----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://z-cdn.chatglm.cn/z-ai/frontend/prod-fe-1.0.78/_app/immutable/assets/Toaster.uaUbY3tS.css

@charset "utf-8";

:where(html[dir=3D"ltr"]), :where([data-sonner-toaster][dir=3D"ltr"]) { --t=
oast-icon-margin-start: -3px; --toast-icon-margin-end: 4px; --toast-svg-mar=
gin-start: -1px; --toast-svg-margin-end: 0px; --toast-button-margin-start: =
auto; --toast-button-margin-end: 0; --toast-close-button-start: 0; --toast-=
close-button-end: unset; --toast-close-button-transform: translate(-35%, -3=
5%); }

:where(html[dir=3D"rtl"]), :where([data-sonner-toaster][dir=3D"rtl"]) { --t=
oast-icon-margin-start: 4px; --toast-icon-margin-end: -3px; --toast-svg-mar=
gin-start: 0px; --toast-svg-margin-end: -1px; --toast-button-margin-start: =
0; --toast-button-margin-end: auto; --toast-close-button-start: unset; --to=
ast-close-button-end: 0; --toast-close-button-transform: translate(35%, -35=
%); }

:where([data-sonner-toaster]) { position: fixed; width: var(--width); font-=
family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe=
 UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Colo=
r Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; --gray1:=
 hsl(0, 0%, 99%); --gray2: hsl(0, 0%, 97.3%); --gray3: hsl(0, 0%, 95.1%); -=
-gray4: hsl(0, 0%, 93%); --gray5: hsl(0, 0%, 90.9%); --gray6: hsl(0, 0%, 88=
.7%); --gray7: hsl(0, 0%, 85.8%); --gray8: hsl(0, 0%, 78%); --gray9: hsl(0,=
 0%, 56.1%); --gray10: hsl(0, 0%, 52.3%); --gray11: hsl(0, 0%, 43.5%); --gr=
ay12: hsl(0, 0%, 9%); --border-radius: 8px; box-sizing: border-box; padding=
: 0px; margin: 0px; list-style: none; outline: none; z-index: 999999999; }

:where([data-sonner-toaster][data-x-position=3D"right"]) { right: max(var(-=
-offset),env(safe-area-inset-right)); }

:where([data-sonner-toaster][data-x-position=3D"left"]) { left: max(var(--o=
ffset),env(safe-area-inset-left)); }

:where([data-sonner-toaster][data-x-position=3D"center"]) { left: 50%; tran=
sform: translate(-50%); }

:where([data-sonner-toaster][data-y-position=3D"top"]) { top: max(var(--off=
set),env(safe-area-inset-top)); }

:where([data-sonner-toaster][data-y-position=3D"bottom"]) { bottom: max(var=
(--offset),env(safe-area-inset-bottom)); }

:where([data-sonner-toast]) { --y: translateY(100%); --lift-amount: calc(va=
r(--lift) * var(--gap)); z-index: var(--z-index); position: absolute; opaci=
ty: 0; transform: var(--y); filter: blur(0px); touch-action: none; transiti=
on: transform 0.4s, opacity 0.4s, height 0.4s, box-shadow 0.2s; box-sizing:=
 border-box; outline: none; overflow-wrap: anywhere; }

:where([data-sonner-toast][data-styled=3D"true"]) { padding: 16px; backgrou=
nd: var(--normal-bg); border: 1px solid var(--normal-border); color: var(--=
normal-text); border-radius: var(--border-radius); box-shadow: rgba(0, 0, 0=
, 0.1) 0px 4px 12px; width: var(--width); font-size: 13px; display: flex; a=
lign-items: center; gap: 6px; }

:where([data-sonner-toast]:focus-visible) { box-shadow: rgba(0, 0, 0, 0.1) =
0px 4px 12px, rgba(0, 0, 0, 0.2) 0px 0px 0px 2px; }

:where([data-sonner-toast][data-y-position=3D"top"]) { top: 0px; --y: trans=
lateY(-100%); --lift: 1; --lift-amount: calc(1 * var(--gap)); }

:where([data-sonner-toast][data-y-position=3D"bottom"]) { bottom: 0px; --y:=
 translateY(100%); --lift: -1; --lift-amount: calc(var(--lift) * var(--gap)=
); }

:where([data-sonner-toast]) :where([data-description]) { font-weight: 400; =
line-height: 1.4; color: inherit; }

:where([data-sonner-toast]) :where([data-title]) { font-weight: 500; line-h=
eight: 1.5; color: inherit; }

:where([data-sonner-toast]) :where([data-icon]) { display: flex; height: 16=
px; width: 16px; position: relative; justify-content: flex-start; align-ite=
ms: center; flex-shrink: 0; margin-left: var(--toast-icon-margin-start); ma=
rgin-right: var(--toast-icon-margin-end); }

:where([data-sonner-toast][data-promise=3D"true"]) :where([data-icon]) > sv=
g { opacity: 0; transform: scale(0.8); transform-origin: center center; ani=
mation: 0.3s ease 0s 1 normal forwards running sonner-fade-in; }

:where([data-sonner-toast]) :where([data-icon]) > * { flex-shrink: 0; }

:where([data-sonner-toast]) :where([data-icon]) svg { margin-left: var(--to=
ast-svg-margin-start); margin-right: var(--toast-svg-margin-end); }

:where([data-sonner-toast]) :where([data-content]) { display: flex; flex-di=
rection: column; gap: 2px; }

[data-sonner-toast][data-styled=3D"true"] [data-button] { border-radius: 4p=
x; padding-left: 8px; padding-right: 8px; height: 24px; font-size: 12px; co=
lor: var(--normal-bg); background: var(--normal-text); margin-left: var(--t=
oast-button-margin-start); margin-right: var(--toast-button-margin-end); bo=
rder: none; cursor: pointer; outline: none; display: flex; align-items: cen=
ter; flex-shrink: 0; transition: opacity 0.4s, box-shadow 0.2s; }

:where([data-sonner-toast]) :where([data-button]):focus-visible { box-shado=
w: rgba(0, 0, 0, 0.4) 0px 0px 0px 2px; }

:where([data-sonner-toast]) :where([data-button]):first-of-type { margin-le=
ft: var(--toast-button-margin-start); margin-right: var(--toast-button-marg=
in-end); }

:where([data-sonner-toast]) :where([data-cancel]) { color: var(--normal-tex=
t); background: rgba(0, 0, 0, 0.08); }

:where([data-sonner-toast][data-theme=3D"dark"]) :where([data-cancel]) { ba=
ckground: rgba(255, 255, 255, 0.3); }

:where([data-sonner-toast]) :where([data-close-button]) { position: absolut=
e; left: var(--toast-close-button-start); right: var(--toast-close-button-e=
nd); top: 0px; height: 20px; width: 20px; display: flex; justify-content: c=
enter; align-items: center; padding: 0px; background: var(--gray1); color: =
var(--gray12); border: 1px solid var(--gray4); transform: var(--toast-close=
-button-transform); border-radius: 50%; cursor: pointer; z-index: 1; transi=
tion: opacity 0.1s, background 0.2s, border-color 0.2s; }

:where([data-sonner-toast]) :where([data-close-button]):focus-visible { box=
-shadow: rgba(0, 0, 0, 0.1) 0px 4px 12px, rgba(0, 0, 0, 0.2) 0px 0px 0px 2p=
x; }

:where([data-sonner-toast]) :where([data-disabled=3D"true"]) { cursor: not-=
allowed; }

:where([data-sonner-toast]):hover :where([data-close-button]):hover { backg=
round: var(--gray2); border-color: var(--gray5); }

:where([data-sonner-toast][data-swiping=3D"true"])::before { content: ""; p=
osition: absolute; left: 0px; right: 0px; height: 100%; z-index: -1; }

:where([data-sonner-toast][data-y-position=3D"top"][data-swiping=3D"true"])=
::before { bottom: 50%; transform: scaleY(3) translateY(50%); }

:where([data-sonner-toast][data-y-position=3D"bottom"][data-swiping=3D"true=
"])::before { top: 50%; transform: scaleY(3) translateY(-50%); }

:where([data-sonner-toast][data-swiping=3D"false"][data-removed=3D"true"]):=
:before { content: ""; position: absolute; inset: 0px; transform: scaleY(2)=
; }

:where([data-sonner-toast])::after { content: ""; position: absolute; left:=
 0px; height: calc(var(--gap) + 1px); bottom: 100%; width: 100%; }

:where([data-sonner-toast][data-mounted=3D"true"]) { --y: translateY(0); op=
acity: 1; }

:where([data-sonner-toast][data-expanded=3D"false"][data-front=3D"false"]) =
{ --scale: var(--toasts-before) * .05 + 1; --y: translateY(calc(var(--lift-=
amount) * var(--toasts-before))) scale(calc(-1 * var(--scale))); height: va=
r(--front-toast-height); }

:where([data-sonner-toast]) > * { transition: opacity 0.4s; }

:where([data-sonner-toast][data-expanded=3D"false"][data-front=3D"false"][d=
ata-styled=3D"true"]) > * { opacity: 0; }

:where([data-sonner-toast][data-visible=3D"false"]) { opacity: 0; pointer-e=
vents: none; }

:where([data-sonner-toast][data-mounted=3D"true"][data-expanded=3D"true"]) =
{ --y: translateY(calc(var(--lift) * var(--offset))); height: var(--initial=
-height); }

:where([data-sonner-toast][data-removed=3D"true"][data-front=3D"true"][data=
-swipe-out=3D"false"]) { --y: translateY(calc(var(--lift) * -100%)); opacit=
y: 0; }

:where([data-sonner-toast][data-removed=3D"true"][data-front=3D"false"][dat=
a-swipe-out=3D"false"][data-expanded=3D"true"]) { --y: translateY( calc(var=
(--lift) * var(--offset) + var(--lift) * -100%) ); opacity: 0; }

:where([data-sonner-toast][data-removed=3D"true"][data-front=3D"false"][dat=
a-swipe-out=3D"false"][data-expanded=3D"false"]) { --y: translateY(40%); op=
acity: 0; transition: transform 0.5s, opacity 0.2s; }

:where([data-sonner-toast][data-removed=3D"true"][data-front=3D"false"])::b=
efore { height: calc(var(--initial-height) + 20%); }

[data-sonner-toast][data-swiping=3D"true"] { transform: var(--y) translateY=
(var(--swipe-amount, 0px)); transition: none; }

[data-sonner-toast][data-swipe-out=3D"true"][data-y-position=3D"bottom"], [=
data-sonner-toast][data-swipe-out=3D"true"][data-y-position=3D"top"] { anim=
ation: 0.2s ease-out 0s 1 normal forwards running swipe-out; }

@keyframes swipe-out {=20
  0% { transform: translateY(calc(var(--lift) * var(--offset) + var(--swipe=
-amount))); opacity: 1; }
  100% { transform: translateY(calc(var(--lift) * var(--offset) + var(--swi=
pe-amount) + var(--lift) * -100%)); opacity: 0; }
}

@media (max-width: 600px) {
  [data-sonner-toaster] { position: fixed; --mobile-offset: 16px; right: va=
r(--mobile-offset); left: var(--mobile-offset); width: 100%; }
  [data-sonner-toaster] [data-sonner-toast] { left: 0px; right: 0px; width:=
 calc(100% - var(--mobile-offset) * 2); }
  [data-sonner-toaster][data-x-position=3D"left"] { left: var(--mobile-offs=
et); }
  [data-sonner-toaster][data-y-position=3D"bottom"] { bottom: 20px; }
  [data-sonner-toaster][data-y-position=3D"top"] { top: 20px; }
  [data-sonner-toaster][data-x-position=3D"center"] { left: var(--mobile-of=
fset); right: var(--mobile-offset); transform: none; }
}

[data-sonner-toaster][data-theme=3D"light"] { --normal-bg: #fff; --normal-b=
order: var(--gray4); --normal-text: var(--gray12); --success-bg: hsl(143, 8=
5%, 96%); --success-border: hsl(145, 92%, 91%); --success-text: hsl(140, 10=
0%, 27%); --info-bg: hsl(208, 100%, 97%); --info-border: hsl(221, 91%, 91%)=
; --info-text: hsl(210, 92%, 45%); --warning-bg: hsl(49, 100%, 97%); --warn=
ing-border: hsl(49, 91%, 91%); --warning-text: hsl(31, 92%, 45%); --error-b=
g: hsl(359, 100%, 97%); --error-border: hsl(359, 100%, 94%); --error-text: =
hsl(360, 100%, 45%); }

[data-sonner-toaster][data-theme=3D"light"] [data-sonner-toast][data-invert=
=3D"true"] { --normal-bg: #000; --normal-border: hsl(0, 0%, 20%); --normal-=
text: var(--gray1); }

[data-sonner-toaster][data-theme=3D"dark"] [data-sonner-toast][data-invert=
=3D"true"] { --normal-bg: #fff; --normal-border: var(--gray3); --normal-tex=
t: var(--gray12); }

[data-sonner-toaster][data-theme=3D"dark"] { --normal-bg: #000; --normal-bo=
rder: hsl(0, 0%, 20%); --normal-text: var(--gray1); --success-bg: hsl(150, =
100%, 6%); --success-border: hsl(147, 100%, 12%); --success-text: hsl(150, =
86%, 65%); --info-bg: hsl(215, 100%, 6%); --info-border: hsl(223, 100%, 12%=
); --info-text: hsl(216, 87%, 65%); --warning-bg: hsl(64, 100%, 6%); --warn=
ing-border: hsl(60, 100%, 12%); --warning-text: hsl(46, 87%, 65%); --error-=
bg: hsl(358, 76%, 10%); --error-border: hsl(357, 89%, 16%); --error-text: h=
sl(358, 100%, 81%); }

[data-rich-colors=3D"true"] [data-sonner-toast][data-type=3D"success"] { ba=
ckground: var(--success-bg); border-color: var(--success-border); color: va=
r(--success-text); }

[data-theme=3D"dark"] [data-sonner-toast][data-type=3D"default"] [data-clos=
e-button] { background: var(--normal-bg); border-color: var(--normal-border=
); color: var(--normal-text); }

[data-rich-colors=3D"true"] [data-sonner-toast][data-type=3D"success"] [dat=
a-close-button] { background: var(--success-bg); border-color: var(--succes=
s-border); color: var(--success-text); }

[data-rich-colors=3D"true"] [data-sonner-toast][data-type=3D"info"], [data-=
rich-colors=3D"true"] [data-sonner-toast][data-type=3D"info"] [data-close-b=
utton] { background: var(--info-bg); border-color: var(--info-border); colo=
r: var(--info-text); }

[data-rich-colors=3D"true"] [data-sonner-toast][data-type=3D"warning"], [da=
ta-rich-colors=3D"true"] [data-sonner-toast][data-type=3D"warning"] [data-c=
lose-button] { background: var(--warning-bg); border-color: var(--warning-b=
order); color: var(--warning-text); }

[data-rich-colors=3D"true"] [data-sonner-toast][data-type=3D"error"], [data=
-rich-colors=3D"true"] [data-sonner-toast][data-type=3D"error"] [data-close=
-button] { background: var(--error-bg); border-color: var(--error-border); =
color: var(--error-text); }

.sonner-loading-wrapper { --size: 16px; height: var(--size); width: var(--s=
ize); position: absolute; inset: 0px; z-index: 10; }

.sonner-loading-wrapper[data-visible=3D"false"] { transform-origin: center =
center; animation: 0.2s ease 0s 1 normal forwards running sonner-fade-out; =
}

.sonner-spinner { position: relative; top: 50%; left: 50%; height: var(--si=
ze); width: var(--size); }

.sonner-loading-bar { animation: 1.2s linear 0s infinite normal none runnin=
g sonner-spin; background: var(--gray11); border-radius: 6px; height: 8%; l=
eft: -10%; position: absolute; top: -3.9%; width: 24%; }

.sonner-loading-bar:nth-child(1) { animation-delay: -1.2s; transform: rotat=
e(0.0001deg) translate(146%); }

.sonner-loading-bar:nth-child(2) { animation-delay: -1.1s; transform: rotat=
e(30deg) translate(146%); }

.sonner-loading-bar:nth-child(3) { animation-delay: -1s; transform: rotate(=
60deg) translate(146%); }

.sonner-loading-bar:nth-child(4) { animation-delay: -0.9s; transform: rotat=
e(90deg) translate(146%); }

.sonner-loading-bar:nth-child(5) { animation-delay: -0.8s; transform: rotat=
e(120deg) translate(146%); }

.sonner-loading-bar:nth-child(6) { animation-delay: -0.7s; transform: rotat=
e(150deg) translate(146%); }

.sonner-loading-bar:nth-child(7) { animation-delay: -0.6s; transform: rotat=
e(180deg) translate(146%); }

.sonner-loading-bar:nth-child(8) { animation-delay: -0.5s; transform: rotat=
e(210deg) translate(146%); }

.sonner-loading-bar:nth-child(9) { animation-delay: -0.4s; transform: rotat=
e(240deg) translate(146%); }

.sonner-loading-bar:nth-child(10) { animation-delay: -0.3s; transform: rota=
te(270deg) translate(146%); }

.sonner-loading-bar:nth-child(11) { animation-delay: -0.2s; transform: rota=
te(300deg) translate(146%); }

.sonner-loading-bar:nth-child(12) { animation-delay: -0.1s; transform: rota=
te(330deg) translate(146%); }

@keyframes sonner-fade-in {=20
  0% { opacity: 0; transform: scale(0.8); }
  100% { opacity: 1; transform: scale(1); }
}

@keyframes sonner-fade-out {=20
  0% { opacity: 1; transform: scale(1); }
  100% { opacity: 0; transform: scale(0.8); }
}

@keyframes sonner-spin {=20
  0% { opacity: 1; }
  100% { opacity: 0.15; }
}

@media (prefers-reduced-motion) {
  [data-sonner-toast], [data-sonner-toast] > *, .sonner-loading-bar { trans=
ition: none !important; animation: auto ease 0s 1 normal none running none =
!important; }
}

.sonner-loader { position: absolute; top: 50%; left: 50%; transform: transl=
ate(-50%, -50%); transform-origin: center center; transition: opacity 0.2s,=
 transform 0.2s; }

.sonner-loader[data-visible=3D"false"] { opacity: 0; transform: scale(0.8) =
translate(-50%, -50%); }
------MultipartBoundary--xhwtFZq0UDxOmF7548m6subkWxGIdLYuwRmj2FBwDc----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-6dbd87b4-74c8-465c-9570-618b3fd7f8a4@mhtml.blink

@charset "utf-8";

html { overflow-y: hidden !important; }

#splash-screen { background: rgb(244, 246, 248); }

html.dark #splash-screen { background: rgb(20, 22, 24); }

#progress-background { display: none; }

#progress-bar { display: none; }

html.her #logo { display: none; }

html.her #progress-background { display: block; }

html.her #progress-bar { display: block; }

@media (max-width: 24rem) {
  html.her #progress-background { display: none; }
  html.her #progress-bar { display: none; }
}

@keyframes pulse {=20
  50% { opacity: 0.65; }
}

.animate-pulse-fast { animation: 1.5s cubic-bezier(0.4, 0, 0.6, 1) 0s infin=
ite normal none running pulse; }
------MultipartBoundary--xhwtFZq0UDxOmF7548m6subkWxGIdLYuwRmj2FBwDc----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-a28b0d77-a2b0-4032-b78a-caf25089606a@mhtml.blink

@charset "utf-8";

.=CD=BC1.cm-focused { outline: rgb(33, 33, 33) dotted 1px; }

.=CD=BC1 { box-sizing: border-box; flex-direction: column; position: relati=
ve !important; display: flex !important; }

.=CD=BC1 .cm-scroller { font-family: monospace; line-height: 1.4; height: 1=
00%; overflow-x: auto; position: relative; z-index: 0; overflow-anchor: non=
e; display: flex !important; align-items: flex-start !important; }

.=CD=BC1 .cm-content[contenteditable=3D"true"] { -webkit-user-modify: read-=
write-plaintext-only; }

.=CD=BC1 .cm-content { margin: 0px; flex-grow: 2; flex-shrink: 0; display: =
block; white-space: pre; overflow-wrap: normal; box-sizing: border-box; min=
-height: 100%; padding: 4px 0px; outline: none; }

.=CD=BC1 .cm-lineWrapping { white-space: break-spaces; word-break: break-wo=
rd; overflow-wrap: anywhere; flex-shrink: 1; }

.=CD=BC2 .cm-content { caret-color: black; }

.=CD=BC3 .cm-content { caret-color: white; }

.=CD=BC1 .cm-line { display: block; padding: 0px 2px 0px 6px; }

.=CD=BC1 .cm-layer > * { position: absolute; }

.=CD=BC1 .cm-layer { position: absolute; left: 0px; top: 0px; contain: size=
 style; }

.=CD=BC2 .cm-selectionBackground { background: rgb(217, 217, 217); }

.=CD=BC3 .cm-selectionBackground { background: rgb(34, 34, 34); }

.=CD=BC2.cm-focused > .cm-scroller > .cm-selectionLayer .cm-selectionBackgr=
ound { background: rgb(215, 212, 240); }

.=CD=BC3.cm-focused > .cm-scroller > .cm-selectionLayer .cm-selectionBackgr=
ound { background: rgb(34, 51, 51); }

.=CD=BC1 .cm-cursorLayer { pointer-events: none; }

.=CD=BC1.cm-focused > .cm-scroller > .cm-cursorLayer { animation: 1.2s step=
s(1) 0s infinite normal none running cm-blink; }

@keyframes cm-blink {=20
  50% { opacity: 0; }
}

@keyframes cm-blink2 {=20
  50% { opacity: 0; }
}

.=CD=BC1 .cm-cursor, .=CD=BC1 .cm-dropCursor { border-left: 1.2px solid bla=
ck; margin-left: -0.6px; pointer-events: none; }

.=CD=BC1 .cm-cursor { display: none; }

.=CD=BC3 .cm-cursor { border-left-color: rgb(221, 221, 221); }

.=CD=BC1 .cm-dropCursor { position: absolute; }

.=CD=BC1.cm-focused > .cm-scroller > .cm-cursorLayer .cm-cursor { display: =
block; }

.=CD=BC1 .cm-iso { unicode-bidi: isolate; }

.=CD=BC1 .cm-announced { position: fixed; top: -10000px; }

@media print {
  .=CD=BC1 .cm-announced { display: none; }
}

.=CD=BC2 .cm-activeLine { background-color: rgba(204, 238, 255, 0.267); }

.=CD=BC3 .cm-activeLine { background-color: rgba(153, 238, 255, 0.2); }

.=CD=BC2 .cm-specialChar { color: red; }

.=CD=BC3 .cm-specialChar { color: rgb(255, 119, 136); }

.=CD=BC1 .cm-gutters { flex-shrink: 0; display: flex; height: 100%; box-siz=
ing: border-box; inset-inline-start: 0px; z-index: 200; }

.=CD=BC2 .cm-gutters { background-color: rgb(245, 245, 245); color: rgb(108=
, 108, 108); border-right: 1px solid rgb(221, 221, 221); }

.=CD=BC3 .cm-gutters { background-color: rgb(51, 51, 56); color: rgb(204, 2=
04, 204); }

.=CD=BC1 .cm-gutter { flex-direction: column; flex-shrink: 0; box-sizing: b=
order-box; min-height: 100%; overflow: hidden; display: flex !important; }

.=CD=BC1 .cm-gutterElement { box-sizing: border-box; }

.=CD=BC1 .cm-lineNumbers .cm-gutterElement { padding: 0px 3px 0px 5px; min-=
width: 20px; text-align: right; white-space: nowrap; }

.=CD=BC2 .cm-activeLineGutter { background-color: rgb(226, 242, 255); }

.=CD=BC3 .cm-activeLineGutter { background-color: rgb(34, 34, 39); }

.=CD=BC1 .cm-panels { box-sizing: border-box; position: sticky; left: 0px; =
right: 0px; z-index: 300; }

.=CD=BC2 .cm-panels { background-color: rgb(245, 245, 245); color: black; }

.=CD=BC2 .cm-panels-top { border-bottom: 1px solid rgb(221, 221, 221); }

.=CD=BC2 .cm-panels-bottom { border-top: 1px solid rgb(221, 221, 221); }

.=CD=BC3 .cm-panels { background-color: rgb(51, 51, 56); color: white; }

.=CD=BC1 .cm-tab { display: inline-block; overflow: hidden; vertical-align:=
 bottom; }

.=CD=BC1 .cm-widgetBuffer { vertical-align: text-top; height: 1em; width: 0=
px; display: inline; }

.=CD=BC1 .cm-placeholder { color: rgb(136, 136, 136); display: inline-block=
; vertical-align: top; }

.=CD=BC1 .cm-highlightSpace { background-image: radial-gradient(circle at 5=
0% 55%, rgb(170, 170, 170) 20%, transparent 5%); background-position: cente=
r center; }

.=CD=BC1 .cm-highlightTab { background-image: url("data:image/svg+xml,<svg =
xmlns=3D\"http://www.w3.org/2000/svg\" width=3D\"200\" height=3D\"20\"><pat=
h stroke=3D\"%23888\" stroke-width=3D\"1\" fill=3D\"none\" d=3D\"M1 10H196L=
190 5M190 15L196 10M197 4L197 16\"/></svg>"); background-size: auto 100%; b=
ackground-position: right 90%; background-repeat: no-repeat; }

.=CD=BC1 .cm-trailingSpace { background-color: rgba(255, 51, 34, 0.333); }

.=CD=BC1 .cm-button { vertical-align: middle; color: inherit; font-size: 70=
%; padding: 0.2em 1em; border-radius: 1px; }

.=CD=BC2 .cm-button:active { background-image: linear-gradient(rgb(180, 180=
, 180), rgb(208, 211, 214)); }

.=CD=BC2 .cm-button { background-image: linear-gradient(rgb(239, 241, 245),=
 rgb(217, 217, 223)); border: 1px solid rgb(136, 136, 136); }

.=CD=BC3 .cm-button:active { background-image: linear-gradient(rgb(17, 17, =
17), rgb(51, 51, 51)); }

.=CD=BC3 .cm-button { background-image: linear-gradient(rgb(57, 57, 57), rg=
b(17, 17, 17)); border: 1px solid rgb(136, 136, 136); }

.=CD=BC1 .cm-textfield { vertical-align: middle; color: inherit; font-size:=
 70%; border: 1px solid silver; padding: 0.2em 0.5em; }

.=CD=BC2 .cm-textfield { background-color: white; }

.=CD=BC3 .cm-textfield { border: 1px solid rgb(85, 85, 85); background-colo=
r: inherit; }

.=CD=BC1 .cm-selectionMatch { background-color: rgba(153, 255, 119, 0.5); }

.=CD=BC1 .cm-searchMatch .cm-selectionMatch { background-color: transparent=
; }

.=CD=BC1 .cm-tooltip.cm-tooltip-autocomplete > ul > li, .=CD=BC1 .cm-toolti=
p.cm-tooltip-autocomplete > ul > completion-section { padding: 1px 3px; lin=
e-height: 1.2; }

.=CD=BC1 .cm-tooltip.cm-tooltip-autocomplete > ul > li { overflow-x: hidden=
; text-overflow: ellipsis; cursor: pointer; }

.=CD=BC1 .cm-tooltip.cm-tooltip-autocomplete > ul > completion-section { di=
splay: list-item; border-bottom: 1px solid silver; padding-left: 0.5em; opa=
city: 0.7; }

.=CD=BC1 .cm-tooltip.cm-tooltip-autocomplete > ul { font-family: monospace;=
 white-space: nowrap; overflow: hidden auto; max-width: min(700px, 95vw); m=
in-width: 250px; max-height: 10em; height: 100%; list-style: none; margin: =
0px; padding: 0px; }

.=CD=BC2 .cm-tooltip-autocomplete ul li[aria-selected] { background: rgb(17=
, 119, 204); color: white; }

.=CD=BC2 .cm-tooltip-autocomplete-disabled ul li[aria-selected] { backgroun=
d: rgb(119, 119, 119); }

.=CD=BC3 .cm-tooltip-autocomplete ul li[aria-selected] { background: rgb(51=
, 68, 119); color: white; }

.=CD=BC3 .cm-tooltip-autocomplete-disabled ul li[aria-selected] { backgroun=
d: rgb(68, 68, 68); }

.=CD=BC1 .cm-completionListIncompleteTop::before, .=CD=BC1 .cm-completionLi=
stIncompleteBottom::after { content: "=C2=B7=C2=B7=C2=B7"; opacity: 0.5; di=
splay: block; text-align: center; }

.=CD=BC1 .cm-tooltip.cm-completionInfo { position: absolute; padding: 3px 9=
px; width: max-content; max-width: 400px; box-sizing: border-box; white-spa=
ce: pre-line; }

.=CD=BC1 .cm-completionInfo.cm-completionInfo-left { right: 100%; }

.=CD=BC1 .cm-completionInfo.cm-completionInfo-right { left: 100%; }

.=CD=BC1 .cm-completionInfo.cm-completionInfo-left-narrow { right: 30px; }

.=CD=BC1 .cm-completionInfo.cm-completionInfo-right-narrow { left: 30px; }

.=CD=BC2 .cm-snippetField { background-color: rgba(0, 0, 0, 0.133); }

.=CD=BC3 .cm-snippetField { background-color: rgba(255, 255, 255, 0.133); }

.=CD=BC1 .cm-snippetFieldPosition { vertical-align: text-top; width: 0px; h=
eight: 1.15em; display: inline-block; margin: 0px -0.7px -0.7em; border-lef=
t: 1.4px dotted rgb(136, 136, 136); }

.=CD=BC1 .cm-completionMatchedText { text-decoration: underline; }

.=CD=BC1 .cm-completionDetail { margin-left: 0.5em; font-style: italic; }

.=CD=BC1 .cm-completionIcon { font-size: 90%; width: 0.8em; display: inline=
-block; text-align: center; padding-right: 0.6em; opacity: 0.6; box-sizing:=
 content-box; }

.=CD=BC1 .cm-completionIcon-function::after, .=CD=BC1 .cm-completionIcon-me=
thod::after { content: "=C6=92"; }

.=CD=BC1 .cm-completionIcon-class::after { content: "=E2=97=8B"; }

.=CD=BC1 .cm-completionIcon-interface::after { content: "=E2=97=8C"; }

.=CD=BC1 .cm-completionIcon-variable::after { content: "=F0=9D=91=A5"; }

.=CD=BC1 .cm-completionIcon-constant::after { content: "=F0=9D=90=B6"; }

.=CD=BC1 .cm-completionIcon-type::after { content: "=F0=9D=91=A1"; }

.=CD=BC1 .cm-completionIcon-enum::after { content: "=E2=88=AA"; }

.=CD=BC1 .cm-completionIcon-property::after { content: "=E2=96=A1"; }

.=CD=BC1 .cm-completionIcon-keyword::after { content: "=F0=9F=94=91=EF=B8=
=8E"; }

.=CD=BC1 .cm-completionIcon-namespace::after { content: "=E2=96=A2"; }

.=CD=BC1 .cm-completionIcon-text::after { content: "abc"; font-size: 50%; v=
ertical-align: middle; }

.=CD=BC1 .cm-tooltip { z-index: 500; box-sizing: border-box; }

.=CD=BC2 .cm-tooltip { border: 1px solid rgb(187, 187, 187); background-col=
or: rgb(245, 245, 245); }

.=CD=BC2 .cm-tooltip-section:not(:first-child) { border-top: 1px solid rgb(=
187, 187, 187); }

.=CD=BC3 .cm-tooltip { background-color: rgb(51, 51, 56); color: white; }

.=CD=BC1 .cm-tooltip-arrow::before, .=CD=BC1 .cm-tooltip-arrow::after { con=
tent: ""; position: absolute; width: 0px; height: 0px; border-left: 7px sol=
id transparent; border-right: 7px solid transparent; }

.=CD=BC1 .cm-tooltip-above .cm-tooltip-arrow::before { border-top: 7px soli=
d rgb(187, 187, 187); }

.=CD=BC1 .cm-tooltip-above .cm-tooltip-arrow::after { border-top: 7px solid=
 rgb(245, 245, 245); bottom: 1px; }

.=CD=BC1 .cm-tooltip-above .cm-tooltip-arrow { bottom: -7px; }

.=CD=BC1 .cm-tooltip-below .cm-tooltip-arrow::before { border-bottom: 7px s=
olid rgb(187, 187, 187); }

.=CD=BC1 .cm-tooltip-below .cm-tooltip-arrow::after { border-bottom: 7px so=
lid rgb(245, 245, 245); top: 1px; }

.=CD=BC1 .cm-tooltip-below .cm-tooltip-arrow { top: -7px; }

.=CD=BC1 .cm-tooltip-arrow { height: 7px; width: 14px; position: absolute; =
z-index: -1; overflow: hidden; }

.=CD=BC3 .cm-tooltip .cm-tooltip-arrow::before { border-top-color: rgb(51, =
51, 56); border-bottom-color: rgb(51, 51, 56); }

.=CD=BC3 .cm-tooltip .cm-tooltip-arrow::after { border-top-color: transpare=
nt; border-bottom-color: transparent; }

.=CD=BC1.cm-focused .cm-matchingBracket { background-color: rgba(50, 140, 1=
30, 0.32); }

.=CD=BC1.cm-focused .cm-nonmatchingBracket { background-color: rgba(187, 85=
, 85, 0.267); }

.=CD=BC1 .cm-foldPlaceholder { background-color: rgb(238, 238, 238); border=
: 1px solid rgb(221, 221, 221); color: rgb(136, 136, 136); border-radius: 0=
.2em; margin: 0px 1px; padding: 0px 1px; cursor: pointer; }

.=CD=BC1 .cm-foldGutter span { padding: 0px 1px; cursor: pointer; }

.=CD=BC3l { color: rgb(98, 114, 164); }

.=CD=BC3m { color: rgb(241, 250, 140); }

.=CD=BC3n { color: rgb(189, 147, 249); }

.=CD=BC3o { color: rgb(255, 121, 198); }

.=CD=BC3p { color: rgb(139, 233, 253); }

.=CD=BC3q { color: rgb(248, 248, 242); }

.=CD=BC3r { color: rgb(80, 250, 123); }

.=CD=BC3k { background-color: rgb(45, 47, 63); color: rgb(248, 248, 242); }

.=CD=BC3k .cm-content { caret-color: rgb(248, 248, 240); }

.=CD=BC3k .cm-cursor, .=CD=BC3k .cm-dropCursor { border-left-color: rgb(248=
, 248, 240); }

.=CD=BC3k.cm-focused .cm-selectionBackgroundm .cm-selectionBackground, .=CD=
=BC3k .cm-content ::selection { background-color: rgb(68, 71, 90); }

.=CD=BC3k .cm-activeLine { background-color: rgb(68, 71, 90); }

.=CD=BC3k .cm-gutters { background-color: rgb(40, 42, 54); color: rgb(144, =
145, 148); }

.=CD=BC3k .cm-activeLineGutter { background-color: rgb(68, 71, 90); }

.=CD=BC61 { font-size: 14px; }

.=CD=BC61 .cm-scroller { z-index: 10; }

.=CD=BC61 .cm-lineNumbers .cm-gutterElement { padding-left: 13px; }

.=CD=BC60 { font-size: 14px; }

.=CD=BC60 .cm-scroller { z-index: 10; }

.=CD=BC60 .cm-lineNumbers .cm-gutterElement { padding-left: 13px; }

.=CD=BC5z { font-size: 14px; }

.=CD=BC5z .cm-scroller { z-index: 10; }

.=CD=BC5z .cm-lineNumbers .cm-gutterElement { padding-left: 13px; }

.=CD=BC5y { font-size: 14px; }

.=CD=BC5y .cm-scroller { z-index: 10; }

.=CD=BC5y .cm-lineNumbers .cm-gutterElement { padding-left: 13px; }

.=CD=BC5x { font-size: 14px; }

.=CD=BC5x .cm-scroller { z-index: 10; }

.=CD=BC5x .cm-lineNumbers .cm-gutterElement { padding-left: 13px; }

.=CD=BC5w { font-size: 14px; }

.=CD=BC5w .cm-scroller { z-index: 10; }

.=CD=BC5w .cm-lineNumbers .cm-gutterElement { padding-left: 13px; }

.=CD=BC5v { font-size: 14px; }

.=CD=BC5v .cm-scroller { z-index: 10; }

.=CD=BC5v .cm-lineNumbers .cm-gutterElement { padding-left: 13px; }

.=CD=BC5u { font-size: 14px; }

.=CD=BC5u .cm-scroller { z-index: 10; }

.=CD=BC5u .cm-lineNumbers .cm-gutterElement { padding-left: 13px; }

.=CD=BC5 { color: rgb(64, 71, 64); }

.=CD=BC6 { text-decoration: underline; }

.=CD=BC7 { text-decoration: underline; font-weight: bold; }

.=CD=BC8 { font-style: italic; }

.=CD=BC9 { font-weight: bold; }

.=CD=BCa { text-decoration: line-through; }

.=CD=BCb { color: rgb(119, 0, 136); }

.=CD=BCc { color: rgb(34, 17, 153); }

.=CD=BCd { color: rgb(17, 102, 68); }

.=CD=BCe { color: rgb(170, 17, 17); }

.=CD=BCf { color: rgb(238, 68, 0); }

.=CD=BCg { color: rgb(0, 0, 255); }

.=CD=BCh { color: rgb(51, 0, 170); }

.=CD=BCi { color: rgb(0, 136, 85); }

.=CD=BCj { color: rgb(17, 102, 119); }

.=CD=BCk { color: rgb(34, 85, 102); }

.=CD=BCl { color: rgb(0, 0, 204); }

.=CD=BCm { color: rgb(153, 68, 0); }

.=CD=BCn { color: rgb(255, 0, 0); }

.=CD=BC4 .cm-line ::selection, .=CD=BC4 .cm-line::selection { background-co=
lor: transparent !important; }

.=CD=BC4 .cm-line { caret-color: transparent !important; }

.=CD=BC4 .cm-content :focus::selection, .=CD=BC4 .cm-content :focus ::selec=
tion { background-color: highlight !important; }

.=CD=BC4 .cm-content :focus { caret-color: initial !important; }

.=CD=BC4 .cm-content { caret-color: transparent !important; }
------MultipartBoundary--xhwtFZq0UDxOmF7548m6subkWxGIdLYuwRmj2FBwDc------
